{"version":3,"sources":["../main.js"],"names":["nine","sticky","currentPageIndex","currentPage","canScroll","scrollDuration","scrollContainer","document","getElementById","pages","querySelectorAll","scrollDirection","String","prototype","includes","search","start","length","this","indexOf","checkSticky","changeHeaderClass","className","querySelector","setAttribute","animateLoad","window","setTimeout","body","classList","add","masonaryHeight","hidden","Array","forEach","call","el","remove","animatePortrait","portrait","portraitChange","scrollPosition","documentElement","scrollTop","windowSize","w","startPoint","offsetTop","page","offsetHeight","style","opacity","addEventListener","pageTransisition","href","bg","backgroundColor","location","masonary","lheight","rheight","lblocks","rblocks","height","animateLinks","anchorElements","getElementsByTagName","onclick","getAttribute","setCurrentPage","section","getHash","element","updateCurrent","scrollStart","scrollToSection","id","updateHash","url","hash","hashChangeLisener","hashChangeHandler","attachEvent","elementId","offset","duration","destiny","calculateDestiny","animateScoll","calculateOffset","prevPage","nextPageOffset","prevPageEl","prevPageOffsetBottom","currentPageOffset","calculateGap","newIndex","gap","Math","abs","i","getSectionIndex","endLocation","stopAnimationIfRequired","pos","cancelAnimationFrame","runAnimation","finishedScroll","scrollEnd","startLocation","getScrolledPosition","percentage","position","distance","timeLapsed","easing","progress","animate","requestAnimationFrame","value","activePages","removeClass","addClass","updateControls","setupControls","dots","dot","createElement","appendChild","dotClick","nextPage","repeat","newPageIndex","target","console","log","keyboardNav","onkeydown","event","code","keyCode","charCode","preventDefault","replace","split","hasClass","contains","index","innerWidth","h","innerHeight","d","compatMode","clientWidth","clientHeight","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","checkStickyDebounced","onload"],"mappings":"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","file":"main-min.js","sourcesContent":["var nine = {\n  sticky: false,\n  // Scolling Related\n  currentPageIndex: null,\n  currentPage: null,\n  canScroll: true,\n  scrollDuration: 750,\n  scrollContainer: document.getElementById('scroll'),\n  pages: document.querySelectorAll(\".section\"),\n  scrollDirection: null,\n};\n\n/* ==========================================================================\n    Polyfils\n   ========================================================================== */\n\nif (!String.prototype.includes) {\n   String.prototype.includes = function(search, start) {\n     if (typeof start !== 'number') {\n       start = 0;\n     }\n\n     if (start + search.length > this.length) {\n       return false;\n     } else {\n       return this.indexOf(search, start) !== -1;\n     }\n   };\n }\n\n/* ==========================================================================\n  nine.scrollSpy()\n========================================================================== */\n\n// nine.scrollSpy = () => {\n//   var sections = {};\n//   var i = 0;\n//\n//   Array.prototype.forEach.call(nine.pages, function(el, i) {\n//     sections[i] = {\n//       classes: el.className.replace('section', '').trim(),\n//       top: el.offsetTop,\n//       bottom: el.offsetTop + el.offsetHeight,\n//       height: el.offsetHeight,\n//     }\n//   });\n//\n//   nine.scrollContainer.addEventListener('scroll', function(event) {\n//\n//     var scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n//\n//     for (i in sections) {\n//       if (scrollPosition >= sections[i].top  && scrollPosition <= sections[i].bottom) {\n//         var activeSections = document.querySelector('.section.active');\n//\n//         if (activeSections) {\n//           activeSections.classList.remove('active');\n//         }\n//\n//         var currentPage = document.querySelectorAll('.section')[parseInt(i)];\n//\n//         if (currentPage) {\n//           currentPage.classList.add('active')\n//         }\n//\n//         if (nine.currentPage != i) {\n//           // TODO: rethink how things work with hash nav\n//           // Causeing browser jumping\n//           // window.location.hash=currentPage.id;\n//         }\n//\n//         if (sections[i].classes.includes('light')) {\n//           nine.changeHeaderClass('dark');\n//         } else {\n//           nine.changeHeaderClass('light');\n//         }\n//       }\n//\n//       // Count as being in next page if 25% scrolled into it.\n//       var scrollOffset = 0.75;\n//\n//       if ((scrollPosition >= sections[i].top - (sections[i].height * scrollOffset)) && scrollPosition <= sections[i].bottom) {\n//         if (nine.currentPage != i) {\n//           nine.currentPage = parseInt(i);\n//           nine.updateControls();\n//         }\n//       }\n//     }\n//   });\n// };\n\n/* ==========================================================================\n  nine.scrollTo()\n  ========================================================================== */\n//\n// nine.scrollTo = (startLocation, endLocation) => {\n//   nine.canScroll = false;\n//\n//   // Calculate how far to scroll\n//   // var startLocation = viewStart;\n//   // var endLocation = pageStart;\n//   var distance = endLocation - startLocation;\n//\n//   var runAnimation;\n//\n//   // Set the animation variables to 0/undefined.\n//   var timeLapsed = 0;\n//   var percentage, position;\n//\n//   var easing = function (progress) {\n//    return progress < 0.5 ? 4 * progress * progress * progress : (progress - 1) * (2 * progress - 2) * (2 * progress - 2) + 1; // acceleration until halfway, then deceleration\n//   };\n//\n//   function stopAnimationIfRequired(pos) {\n//    if (pos == endLocation) {\n//      cancelAnimationFrame(runAnimation);\n//      finishedScroll();\n//    }\n//   }\n//\n//   function finishedScroll() {\n//     nine.canScroll = true;\n//     nine.scrollDirection = null;\n//   }\n//\n//   var animate = function () {\n//    timeLapsed += 16;\n//    percentage = timeLapsed / nine.scrollDuration;\n//    if (percentage > 1) {\n//      percentage = 1;\n//      position = endLocation;\n//    } else {\n//      position = startLocation + distance * easing(percentage);\n//    }\n//    nine.scrollContainer.scrollTop = position;\n//    runAnimation = requestAnimationFrame(animate);\n//    stopAnimationIfRequired(position);\n//   };\n//\n//   // Loop the animation function\n//   runAnimation = requestAnimationFrame(animate);\n// }\n\n/* ==========================================================================\n  nine.scrollHandler()\n  ========================================================================== */\n//\n// // Constructor cannot be ES6 arrow\n// nine.scrollHandler = function(pageId) {\n//   var page = document.getElementById(pageId);\n//   var pageStart = page.offsetTop;\n//   nine.canScroll = true;\n//   var timeout = null;\n//\n//   nine.scrollListener = window.addEventListener('wheel', function(event) {\n//     nine.scrollStart = nine.scrollContainer.scrollTop;\n//\n//     if (timeout !== null) {\n//         event.preventDefault();\n//         return false;\n//     }\n//\n//     if (nine.canScroll) {\n//       timeout = setTimeout(function(){ timeout = null; }, nine.scrollDuration * 3);\n//\n//       var pageHeight = page.scrollHeight;\n//       var pageStopPortion = pageHeight / 2;\n//       var viewHeight = window.innerHeight;\n//\n//       var viewEnd = nine.scrollStart + viewHeight;\n//       var pageStartPart = viewEnd - pageStart;\n//       var pageEndPart = (pageStart + pageHeight) - nine.scrollStart;\n//\n//       var canJumpDown = pageStartPart >= 0;\n//       var stopJumpDown = pageStartPart > pageStopPortion;\n//\n//       var canJumpUp = pageEndPart >= 0;\n//       var stopJumpUp = pageEndPart > pageStopPortion;\n//\n//       var scrollingForward = event.deltaY > 0;\n//\n//       if (  ( scrollingForward && canJumpDown && !stopJumpDown)\n//          || (!scrollingForward && canJumpUp   && !stopJumpUp)) {\n//         event.preventDefault();\n//         nine.scrollTo(nine.scrollStart, pageStart);\n//       }\n//     } else {\n//      event.preventDefault();\n//     }\n//   });\n// }\n\n/* ==========================================================================\n  nine.scrollToPage()\n   ========================================================================== */\n//\n// nine.scrollToPage = (pageID, offset) => {\n//   // Get current scroll location and where the page starts\n//   nine.scrollStart = nine.scrollContainer.scrollTop;\n//\n//   if (typeof offset === \"undefined\") {\n//     offset = 0;\n//   }\n//\n//   var pageStart;\n//\n//   if (nine.scrollDirection === \"up\" && nine.sticky === true) {\n//     pageStart = document.getElementById(pageID).offsetTop - document.getElementById(pageID).offsetHeight - offset;\n//   } else {\n//     pageStart = document.getElementById(pageID).offsetTop - offset;\n//   }\n//\n//   nine.scrollTo(nine.scrollStart, pageStart);\n// }\n\n/* ==========================================================================\n  nine.keyboardNav()\n   ========================================================================== */\n//\n// nine.keyboardNav = () => {\n//   document.onkeydown = function(event) {\n//     if (!event) {\n//       event = window.event;\n//     }\n//\n//     var code = event.keyCode;\n//\n//     if (event.charCode && code == 0) {\n//       code = event.charCode;\n//     }\n//\n//     switch(code) {\n//       case 38: // Up\n//         event.preventDefault();\n//         nine.prevPage();\n//         break;\n//       case 40: // Down\n//         event.preventDefault();\n//         nine.nextPage();\n//       break;\n//     }\n//\n//   };\n// }\n\n/* ==========================================================================\n  nine.calculateOffset()\n   ========================================================================== */\n//\n// nine.calculateOffset = () => {\n//   var prevPage = nine.pages[nine.currentPage - 1].id;\n//   var offset = 0;\n//\n//   // If user has manuall scrolled part way onto next one there will be an offset to account for.\n//   if (nine.sticky) {\n//      if (nine.currentPage + 1 < nine.pages.length) {\n//        var nextPageOffset = document.getElementById(nine.pages[nine.currentPage + 1].id).offsetTop\n//        var prevPageEl = document.getElementById(prevPage);\n//        var prevPageOffsetBottom = prevPageEl.offsetTop + prevPageEl.offsetHeight;\n//\n//        if (nextPageOffset != prevPageOffsetBottom) {\n//          offset = prevPageOffsetBottom - nextPageOffset;\n//        }\n//      } else {\n//        var scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n//        var currentPageOffset = document.getElementById(nine.pages[nine.currentPage].id).offsetTop;\n//\n//        if (scrollPosition != currentPageOffset) {\n//          offset = scrollPosition - currentPageOffset;\n//        }\n//      }\n//      return offset;\n//    } else {\n//      return 0;\n//    }\n// };\n\n/* ==========================================================================\n  nine.nextPage()\n   ========================================================================== */\n//\n// nine.nextPage = () => {\n//   if (nine.currentPage + 1 < nine.pages.length && nine.canScroll) {\n//     nine.scrollDirection = 'down';\n//     var nextPage = nine.pages[nine.currentPage + 1].id;\n//     nine.scrollToPage(nextPage);\n//     return true;\n//   }\n//   return false;\n// }\n\n/* ==========================================================================\n  nine.prevPage()\n   ========================================================================== */\n//\n// nine.prevPage = () => {\n//   if (nine.currentPage - 1 >= 0 && nine.canScroll) {\n//     nine.scrollDirection = 'up';\n//     var prevPage = nine.pages[nine.currentPage - 1].id;\n//     nine.scrollToPage(prevPage, nine.calculateOffset());\n//     return true;\n//   }\n//   return false;\n// }\n\n\n/* ==========================================================================\n  nine.controls()\n   ========================================================================== */\n//\n// nine.controls = () => {\n//   var pageIndex = 0;\n//\n//   var dots = document.querySelector('.dots')\n//   if (dots) {\n//     Array.prototype.forEach.call(nine.pages, function(el) {\n//       var dot = document.createElement('li');\n//       dot.setAttribute('data-page', pageIndex);\n//       dots.appendChild(dot);\n//       dot.addEventListener('click', (e) => nine.dotClick(e));\n//\n//       pageIndex++;\n//     });\n//\n//     document.querySelector('.dots li').classList.add('active')\n//\n//     document.querySelector('.next').addEventListener('click', () => nine.nextPage());\n//     document.querySelector('.prev').addEventListener('click', () => nine.prevPage());\n//\n//     nine.updateControls();\n//   }\n// }\n\n/* ==========================================================================\n  nine.dotClick()\n   ========================================================================== */\n//\n// nine.dotClick = (e) => {\n//   var pageIndex = e.target.getAttribute('data-page');\n//   var pageId = nine.pages[pageIndex].id\n//   var offset = 0;\n//   if (pageIndex > nine.currentPage) {\n//     nine.scrollDirection = 'down';\n//   } else if (pageIndex < nine.currentPage) {\n//     nine.scrollDirection = 'up';\n//     if (nine.sticky) {\n//       var gap = nine.currentPage - 1 - pageIndex;\n//\n//       for (var i = 1; i <= gap; i++) {\n//         var id = nine.pages[nine.currentPage - i].id\n//\n//         offset += document.getElementById(id).offsetHeight;\n//       }\n//       offset += nine.calculateOffset();\n//     }\n//   }\n//\n//   nine.scrollToPage(pageId, offset);\n// };\n\n/* ==========================================================================\n  nine.updateControls()\n   ========================================================================== */\n//\n// nine.updateControls = () => {\n//   document.querySelector('.dots li.active').classList.remove('active');\n//   document.querySelectorAll('.dots li')[nine.currentPage].classList.add('active');\n//\n//   document.querySelector('.next').classList.remove('disabled');\n//   document.querySelector('.prev').classList.remove('disabled');\n//\n//   if (nine.currentPage == 0) {\n//     document.querySelector('.prev').classList.add('disabled');\n//   }\n//\n//   if (nine.currentPage == nine.pages.length - 1) {\n//     document.querySelector('.next').classList.add('disabled');\n//   }\n// }\n\n/* ==========================================================================\n  nine.checkSticky() - http://trialstravails.blogspot.co.uk/2016/06/detecting-css-position-sticky-support.html\n   ========================================================================== */\n\nnine.checkSticky = () => {\n  return false; // turn stick off\n  var el = document.createElement('a');\n  var mStyle = el.style;\n\n  mStyle.cssText = \"position:sticky;position:-webkit-sticky;position:-ms-sticky;\";\n  var sticky = mStyle.position.indexOf('sticky')!==-1;\n\n\n  var windowHeight = nine.windowSize().h;\n\n  if (sticky) {\n    nine.pages.forEach(function(el) {\n      if (el.offsetHeight > windowHeight) {\n        sticky = false;\n      }\n    });\n  }\n\n  if (sticky) {\n    document.body.classList.add(\"sticky-enabled\");\n\n    // TODO: enable scroll swipe if sticky on\n    // nine.swipeScroll();\n\n    return true;\n  } else {\n    document.body.classList.remove(\"sticky-enabled\");\n\n    // TODO: disable scroll swipe if sticky off\n    // window.removeEventListener('wheel', nine.scrollListener);\n\n    return false;\n  }\n}\n\n/* ==========================================================================\n  nine.swipeScroll()\n   ========================================================================== */\n\n// nine.swipeScroll = () => {\n//   Array.prototype.forEach.call(nine.pages, function(el) {\n//     new nine.scrollHandler(el.id);\n//   });\n// }\n\n/* ==========================================================================\n  nine.changeHeaderClass\n   ========================================================================== */\n\nnine.changeHeaderClass = (className) => {\n  document.querySelector('.header').setAttribute('class', `header ${className}`);\n};\n\n/* ==========================================================================\n  nine.animatation()\n   ========================================================================== */\n\nnine.animateLoad = () => {\n  window.setTimeout(() => {\n    document.body.classList.add('faded-in');\n    nine.masonaryHeight();\n\n    window.setTimeout(() => {\n      var hidden = document.querySelectorAll(\".hide-left\");\n      Array.prototype.forEach.call(hidden, function(el, i) {\n        el.classList.remove('hide-left');\n      });\n\n      var hidden = document.querySelectorAll(\".hide-down\");\n      Array.prototype.forEach.call(hidden, function(el, i) {\n        el.classList.remove('hide-down');\n      });\n    }, 1000)\n  }, 1000);\n};\n\n/* ==========================================================================\n  nine.animatePortrait()\n   ========================================================================== */\n\nnine.animatePortrait = () => {\n  var portrait = document.querySelector('.portrait .faded');\n\n  if (portrait) {\n    var page = document.getElementById('about');\n    var offsetTop = page.offsetTop;\n    var startPoint = 0.98;\n\n    function portraitChange() {\n      var scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n\n      if (nine.windowSize().w > 1280) {\n        startPoint = 0.5;\n      } else if (nine.windowSize().w < 1024) {\n        offsetTop = page.offsetHeight + document.getElementById('intro').offsetHeight - portrait.offsetHeight;\n      }\n\n      if (scrollPosition > offsetTop * startPoint) {\n        if (portrait.style.opacity == 0) {\n          portrait.style.opacity = 1;\n        }\n      } else {\n        if (portrait.style.opacity == 1) {\n          portrait.style.opacity = 0;\n        }\n      }\n    }\n\n    nine.scrollContainer.addEventListener('scroll', function(event) {\n      portraitChange();\n    });\n  }\n};\n\n/* ==========================================================================\n  nine.pageTransisition()\n   ========================================================================== */\n\nnine.pageTransisition = (href, bg, slide) => {\n  if (!bg) {\n    bg = '#E6E6E4';\n  }\n\n  document.body.style.backgroundColor = bg;\n  document.body.classList.add('faded-out');\n\n  setTimeout(function(){\n    window.location.href = href;\n  }, 600);\n};\n\n/* ==========================================================================\n  nine.aboutHeight\n   ========================================================================== */\n\nnine.masonaryHeight = () => {\n  var masonary = document.querySelector('.masonary')\n  let lheight = 0;\n  let rheight = 0;\n  if (masonary) {\n    if (nine.windowSize().w >= 1024) {\n      var lblocks = document.querySelectorAll('.block.left');\n      var rblocks = document.querySelectorAll('.block.right');\n\n      Array.prototype.forEach.call(lblocks, function(el, i) {\n        lheight += el.offsetHeight;\n      });\n\n      Array.prototype.forEach.call(rblocks, function(el, i) {\n        rheight += el.offsetHeight;\n      });\n\n      let height;\n\n      if (lheight >= rheight) {\n        height = lheight;\n      } else {\n        height = rheight;\n      }\n\n      height += 100;\n      masonary.style.height = height + 'px';\n    } else {\n      masonary.style.height = 'auto';\n    }\n  }\n};\n\n/* ==========================================================================\n  nine.animateLinks\n   ========================================================================== */\n\nnine.animateLinks = () => {\n  var anchorElements = document.getElementsByTagName('a');\n  Array.prototype.forEach.call(anchorElements, function(el, i) {\n    el.onclick = function() {\n      nine.pageTransisition(this.href, el.getAttribute('data-bg'), el.getAttribute('data-slide'));\n      return false;\n    }\n  });\n};\n\n// ##########################################################################\n\n\n\n\n\n\n\n\n\n\n// ##########################################################################\n/* ==========================================================================\n   Scrolling\n   ==========================================================================\n // #########################################################################\n\n\n /* ==========================================================================\n  setCurrentPage()\n  - Sets the current page on load based off hash.\n  ========================================================================== */\n\nnine.setCurrentPage = () => {\n  var section = nine.getHash();\n\n  if(section) {\n    var element = document.getElementById(section);\n\n    if (element) {\n      nine.updateCurrent(element);\n      nine.scrollStart(element); // Simulate start of scroll to set all calsses correctly.\n      nine.scrollToSection(element.id); // Make sure we are definley at the correct section.\n    }\n  } else {\n    nine.updateCurrent(document.querySelectorAll(\".section\")[0]);\n  }\n};\n\n/* ==========================================================================\n    nine.updateHash(url)\n    - Updates the hash in the url to the value of url.\n  ========================================================================== */\n\nnine.updateHash = (url) => {\n  window.location.hash = url;\n};\n\n/* ==========================================================================\n  nine.hashChangeLisener()\n  ========================================================================== */\n\nnine.hashChangeLisener = () => {\n  if (document.addEventListener) {\n    window.addEventListener('hashchange', nine.hashChangeHandler, false); //IE9, Chrome, Safari, Oper\n  } else {\n    window.attachEvent('onhashchange', nine.hashChangeHandler); //IE 6/7/8\n  }\n};\n\n/* ==========================================================================\n  nine.hashChangeHandler()\n  - Listens to chnages on the hash when back button is used.\n   ========================================================================== */\n\nnine.hashChangeHandler = () => {\n  var section = nine.getHash();\n\n  if (section && section != nine.currentPage) {\n    nine.scrollToSection(section);\n  }\n};\n\n/* ==========================================================================\n  nine.scrollToSection(destiny)\n  - scroll to the a section using ID\n   ========================================================================== */\n\nnine.scrollToSection = (elementId, offset) => {\n  var element = document.getElementById(elementId);\n\n  if (element == null) { return ; } // No element\n\n  // If there is a gap between slides increase the duration by the gap.\n  // var gap = Math.abs(nine.currentPageIndex - nine.getSectionIndex(element));\n  // var duration = nine.scrollDuration * gap;\n  var duration = nine.scrollDuration;\n\n  var destiny = nine.calculateDestiny(element, offset);\n\n  nine.animateScoll(destiny, element, duration)\n};\n\n/* ==========================================================================\n  nine.calculateOffset\n  - If a user has scroled half way onto a section there will be an offset\n    if position is sticky.\n  - Returns offset in pixels.\n   ========================================================================== */\n\nnine.calculateOffset = () => {\n  var offset = 0;\n\n  // If user has manuall scrolled part way onto next one there will be an offset to account for.\n  if (nine.sticky) {\n    if (nine.currentPageIndex + 1 < nine.pages.length) {\n      var nextPageOffset = document.getElementById(nine.pages[nine.currentPageIndex + 1].id).offsetTop\n      var prevPage;\n\n      if (nine.currentPageIndex -1 >= 0) {\n        prevPage = nine.pages[nine.currentPageIndex - 1].id;\n      } else {\n        prevPage = nine.pages[nine.currentPageIndex].id;\n      }\n\n      var prevPageEl = document.getElementById(prevPage);\n      var prevPageOffsetBottom = prevPageEl.offsetTop + prevPageEl.offsetHeight;\n\n      if (nextPageOffset != prevPageOffsetBottom) {\n        offset = prevPageOffsetBottom - nextPageOffset;\n      }\n     } else {\n      var scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n      var currentPageOffset = document.getElementById(nine.pages[nine.currentPageIndex].id).offsetTop;\n\n      if (scrollPosition != currentPageOffset) {\n        offset = scrollPosition - currentPageOffset;\n      }\n    }\n    return offset;\n   } else {\n     return 0;\n   }\n};\n\n/* ==========================================================================\n  nine.calculateGap(newIndex)\n   ========================================================================== */\n\nnine.calculateGap = (newIndex, element, offset) => {\n  var gap = Math.abs(nine.currentPageIndex - newIndex) -1;\n\n  for (var i = 1; i <= gap; i++) {\n    var id = nine.pages[nine.currentPageIndex - i].id\n\n    offset += element.offsetHeight;\n  }\n  return offset += nine.calculateOffset();\n};\n\n/* ==========================================================================\n  nine.calculateDestiny()\n  - Works out direction and depending on sticky corrects offset.\n  - Returns the destiny in pixels.\n   ========================================================================== */\n\nnine.calculateDestiny = (element, offset) => {\n  var destiny;\n\n  if (typeof offset === \"undefined\") {\n    offset = 0;\n  }\n\n  var newIndex = nine.getSectionIndex(element);\n  if (newIndex > nine.currentPageIndex) {\n    nine.scrollDirection = \"down\";\n  } else if (newIndex < nine.currentPageIndex) {\n    nine.scrollDirection = \"up\";\n    if (nine.sticky) {\n      offset = nine.calculateGap(newIndex, element, offset);\n    }\n  } else {\n    return; // Trying to scroll to current element.\n  }\n\n  // Calculate the pixel position of the element, using offset if required\n  if (nine.scrollDirection === \"up\" && nine.sticky === true) {\n    destiny = element.offsetTop - element.offsetHeight - offset;\n  } else {\n    destiny = element.offsetTop - offset;\n  }\n\n  return destiny;\n}\n\n/* ==========================================================================\n  nine.animateScoll()\n  - animate the scrolling of the page\n  ========================================================================== */\n\nnine.animateScoll = (endLocation, element, duration) => {\n  if (endLocation == null) { return; }\n\n  var startLocation = nine.getScrolledPosition();\n  nine.canScroll = false;\n\n  if (duration == null) {\n    duration = nine.scrollDuration;\n  }\n\n  // Calculate how far to scroll\n  var distance = endLocation - startLocation;\n\n  var runAnimation;\n\n  // Set the animation variables to 0/undefined.\n  var timeLapsed = 0;\n  var percentage, position;\n\n  var easing = function (progress) {\n   return progress < 0.5 ? 4 * progress * progress * progress : (progress - 1) * (2 * progress - 2) * (2 * progress - 2) + 1; // acceleration until halfway, then deceleration\n  };\n\n  function stopAnimationIfRequired(pos) {\n   if (pos == endLocation) {\n     cancelAnimationFrame(runAnimation);\n     finishedScroll();\n   }\n  }\n\n  function finishedScroll() {\n    // Remove active status from all\n    nine.canScroll = true;\n    nine.scrollDirection = null;\n    nine.scrollEnd(element);\n  }\n\n  var animate = function () {\n   timeLapsed += 16;\n   percentage = timeLapsed / duration;\n   if (percentage > 1) {\n     percentage = 1;\n     position = endLocation;\n   } else {\n     position = startLocation + distance * easing(percentage);\n   }\n   nine.scrollContainer.scrollTop = position;\n   runAnimation = requestAnimationFrame(animate);\n   stopAnimationIfRequired(position);\n  };\n\n  nine.scrollStart(element);\n\n  // Loop the animation function\n  runAnimation = requestAnimationFrame(animate);\n}\n\n/* ==========================================================================\n  nine.scrollStart()\n  - Called just before scrolling starts\n   ========================================================================== */\n\nnine.scrollStart = (element) => {\n  // Change header class - duration is same as slide duration for natural feel.\n  if (element.classList.value.includes('light')) {\n    nine.changeHeaderClass('dark');\n  } else {\n    nine.changeHeaderClass('light');\n  }\n\n  // Delay until part way through scroll to chnages make feel smooth.\n  setTimeout(function() {\n    // Remove other active classes\n    var activePages = document.querySelector('.section.active');\n    if (activePages) {\n      nine.removeClass(activePages, 'active');\n      nine.removeClass(document.body, activePages.id + '-active')\n    }\n    nine.addClass(element, 'active');\n    nine.updateControls(nine.getSectionIndex(element));\n  }, nine.scrollDuration * 0.33);\n};\n\n/* ==========================================================================\n  nine.scrollEnd()\n  - Called after an element has been scrolled to.\n   ========================================================================== */\n\nnine.scrollEnd = (element) => {\n  if (element == null) { return ; } // No element\n\n  // Update to new state.\n  nine.updateHash(element.id);\n  nine.updateCurrent(element);\n  nine.updateControls();\n  nine.addClass(document.body, element.id + '-active');\n};\n\n/* ==========================================================================\n  nine.updateCurrent\n  - Updates globals to current values\n   ========================================================================== */\n\nnine.updateCurrent = (element) => {\n  nine.currentPage = element.id;\n  nine.currentPageIndex = nine.getSectionIndex(element);\n}\n\n/* ==========================================================================\n  nine.getScrolledPosition()\n  - Returns position of scroll in the window in pixels.\n   ========================================================================== */\n\nnine.getScrolledPosition = () => {\n  return document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n};\n// ##########################################################################\n\n\n\n\n\n\n\n\n// ##########################################################################\n/* ==========================================================================\n   Controls\n   ==========================================================================\n// ##########################################################################\n\n/* ==========================================================================\n  nine.setupControls()\n  - adds dots and next & prev controls to site\n  =========================================================================== */\nnine.setupControls = () => {\n  var dots = document.querySelector('.dots')\n\n  if (dots) {\n    Array.prototype.forEach.call(nine.pages, function(el, i) {\n      var dot = document.createElement('li');\n      dot.setAttribute('data-page', i);\n      dots.appendChild(dot);\n      dot.addEventListener('click', (element) => nine.dotClick(element));\n    });\n\n    document.querySelector('.dots li').classList.add('active')\n\n    document.querySelector('.next').addEventListener('click', () => nine.nextPage());\n    document.querySelector('.prev').addEventListener('click', () => nine.prevPage());\n\n    nine.updateControls();\n  }\n};\n\n /* ==========================================================================\n   nine.dotClick()\n   - handles when use clicks on a dot\n    ========================================================================== */\n\nnine.dotClick = (element, repeat) => {\n  if (repeat == null) {\n    repeat = false;\n  }\n\n  document.querySelector('.dots li.active').classList.remove('active');\n  var newPageIndex = element.target.getAttribute('data-page');\n  document.querySelectorAll('.dots li')[newPageIndex].classList.add('active');\n\n  var section = nine.pages[newPageIndex].id;\n\n  if (nine.canScroll) {\n    nine.scrollToSection(section);\n  } else if (repeat == false) {\n    // Is currently scrolling. Try again after duration.\n    setTimeout(function(){\n      console.log('try again');\n      nine.dotClick(element, true);\n    }, nine.scrollDuration);\n   }\n};\n\n /* ==========================================================================\n   nine.updateControls()\n   - Update controls to latest section\n    ========================================================================== */\n\nnine.updateControls = (newIndex) => {\n  if (newIndex == null) {\n    newIndex = nine.currentPageIndex;\n  }\n  document.querySelector('.dots li.active').classList.remove('active');\n  document.querySelectorAll('.dots li')[newIndex].classList.add('active');\n\n  document.querySelector('.next').classList.remove('disabled');\n  document.querySelector('.prev').classList.remove('disabled');\n\n  if (newIndex == 0) {\n    document.querySelector('.prev').classList.add('disabled');\n  }\n\n  if (newIndex == nine.pages.length - 1) {\n    document.querySelector('.next').classList.add('disabled');\n  }\n}\n\n/* ==========================================================================\n nine.nextPage()\n - moves to the next slide\n  ========================================================================== */\n\nnine.nextPage = (repeat) => {\n  if (repeat == null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex + 1 < nine.pages.length && nine.canScroll) {\n    var nextPage = nine.pages[nine.currentPageIndex + 1].id;\n    nine.scrollToSection(nextPage);\n    return true;\n  } else if (nine.currentPageIndex + 1 < nine.pages.length && repeat == false) {\n    setTimeout(function(){\n      console.log('try again');\n      nine.nextPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n}\n\n/* ==========================================================================\n nine.prevPage()\n - moves to the previous slide\n  ========================================================================== */\n\nnine.prevPage = (repeat) => {\n  if (repeat == null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex - 1 >= 0 && nine.canScroll) {\n    var prevPage = nine.pages[nine.currentPageIndex - 1].id;\n    nine.scrollToSection(prevPage);\n    return true;\n  } else if (nine.currentPageIndex - 1 >= 0 && repeat == false) {\n    setTimeout(function(){\n      console.log('try again');\n      nine.prevPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n}\n\n // ##########################################################################\n\n\n\n\n\n\n\n\n\n // ##########################################################################\n /* ==========================================================================\n    Inputs\n    ==========================================================================\n // ##########################################################################\n /* ==========================================================================\n   nine.keyboardNav()\n   - enables up and down to be used to navigate slides\n    ========================================================================== */\n\nnine.keyboardNav = () => {\n  document.onkeydown = function(event) {\n    if (!event) {\n      event = window.event;\n    }\n\n    var code = event.keyCode;\n\n    if (event.charCode && code == 0) {\n      code = event.charCode;\n    }\n\n    switch(code) {\n      case 38: // Up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 40: // Down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 32: // Space\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 33: // Page up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 34: // Page down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n    }\n  };\n}\n\n // ##########################################################################\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ##########################################################################\n/* ==========================================================================\n   Helpers\n   ==========================================================================\n// ##########################################################################\n\n /* ==========================================================================\n   nine.getHash()\n   - Gets current url hash\n   ========================================================================== */\n\n nine.getHash = () => {\n   var value =  window.location.hash.replace('#', '').split('/');\n   return value[0];\n };\n/* ==========================================================================\n  nine.addClass(element, className)\n  - Checks if element hasClass if not adds it\n   ========================================================================== */\n\nnine.addClass = (element, className) => {\n  if (element && !nine.hasClass(element, className)) {\n    element.classList.add(className);\n  }\n}\n\n/* ==========================================================================\n  nine.removeClass(element, className)\n  - Checks if element hasClass if it does removes it\n   ========================================================================== */\n\nnine.removeClass = (element, className) => {\n  if (element && nine.hasClass(element, className)) {\n    element.classList.remove(className);\n  }\n}\n\n/* ==========================================================================\n  nine.hasClass(element, className)\n  - Checks if element has a class\n  - Returns true or false\n   ========================================================================== */\n\nnine.hasClass = (element, className) => {\n  return element.classList.contains(className);\n}\n\n/* ==========================================================================\n  getSectionindex(section)\n  - Finds out what the index of the element is in the list of sections\n  - Returns index\n   ========================================================================== */\n\nnine.getSectionIndex = (element) => {\n var i = 0;\n var index;\n\n Array.prototype.forEach.call(nine.pages, function(el, i) {\n  if (el == element) {\n    index = i;\n  }\n });\n\n return index;\n};\n\n/* ==========================================================================\n  nine.windowWidth\n  - Gets window size reliably\n   ========================================================================== */\n\nnine.windowSize = (w) => {\n\n  // Use the specified window or the current window if no argument\n  w = w || window;\n\n  // This works for all browsers except IE8 and before\n  if (w.innerWidth != null) return { w: w.innerWidth, h: w.innerHeight };\n\n  // For IE (or any browser) in Standards mode\n  var d = w.document;\n  if (document.compatMode == \"CSS1Compat\")\n      return { w: d.documentElement.clientWidth,\n         h: d.documentElement.clientHeight };\n\n  // For browsers in Quirks mode\n  return { w: d.body.clientWidth, h: d.body.clientHeight };\n};\n\n/* ==========================================================================\n  nine.debounce()\n  - Debounces actions be with a timer.\n ========================================================================== */\n\nnine.debounce = (func, wait, immediate) => {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};\n\n// ##########################################################################\n\n\n\n\n\n\n\n/* ==========================================================================\n  Document Load\n   ========================================================================== */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  // nine.hashNavigationColor();\n  // nine.scrollSpy();\n  nine.sticky = nine.checkSticky();\n  // nine.keyboardNav();\n  // nine.controls();\n  nine.masonaryHeight();\n  nine.animateLinks();\n\n  var checkStickyDebounced = nine.debounce(function() {\n  \tnine.sticky = nine.checkSticky();\n  }, 250);\n\n  window.addEventListener('resize', checkStickyDebounced);\n\n  window.addEventListener('resize', function() {\n    nine.masonaryHeight();\n  });\n\n  // new\n  nine.setCurrentPage();\n  nine.hashChangeLisener();\n  nine.setupControls();\n  nine.keyboardNav();\n});\n\n/* ==========================================================================\n  Window Load\n   ========================================================================== */\n\nwindow.onload = () => {\n  nine.animateLoad();\n  nine.animatePortrait();\n  nine.masonaryHeight();\n};\n"]}