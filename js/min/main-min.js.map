{"version":3,"sources":["../main.js"],"names":["nine","sticky","fullscreen","currentPageIndex","currentPage","canScroll","scrollDuration","scrollContainer","document","getElementById","pages","querySelectorAll","scrollDirection","prevTime","Date","getTime","scrollHistory","fullScreenEnableFrom","supports3d","isTouchDevice","navigator","userAgent","match","isTouch","window","msMaxTouchPoints","maxTouchPoints","touchStartY","touchEndY","support3d","el","createElement","has3d","transforms","webkitTransform","OTransform","msTransform","MozTransform","transform","body","insertBefore","t","undefined","style","getComputedStyle","getPropertyValue","removeChild","length","checkFullscreen","removeAttribute","querySelector","windowHeight","windowSize","h","w","forEach","offsetHeight","enableFullscreen","addClass","removeClass","checkSticky","mStyle","cssText","position","indexOf","enableSticky","classList","add","remove","changeHeaderClass","className","setAttribute","animateLoad","setTimeout","masonaryHeight","hidden","Array","prototype","call","pageTransisition","href","bg","backgroundColor","location","animateLinks","anchorElements","getElementsByTagName","onclick","getAttribute","masonary","lheight","rheight","lblocks","rblocks","height","fullscreenMode","debounced","hashChangeLisener","addFullscreenNav","addKeyboardNav","addScrollInput","setCurrentPage","detectswipe","handleSwipe","removeFullscreenNav","removeKeyboardNav","removeScrollInput","resetPosition","fullscreenModeDebounced","debounce","addEventListener","section","getHash","element","updateCurrent","scrollStart","silentScrollToSection","id","updateHash","url","hash","hashChangeHandler","attachEvent","scrollToSection","elementId","offset","duration","destiny","calculateDestiny","translateScroll","animateScroll","calculateOffset","nextPageOffset","offsetTop","prevPage","prevPageEl","prevPageOffsetBottom","scrollPosition","documentElement","scrollTop","currentPageOffset","calculateGap","newIndex","gap","Math","abs","i","getSectionIndex","endLocation","translate3d","transition","css","-webkit-transition","translatePortrait","setTransforms","scrollEnd","portrait","toLowerCase","top","portraitPosition","stopAnimationIfRequired","pos","cancelAnimationFrame","runAnimation","finishedScroll","startLocation","getScrolledPosition","distance","timeLapsed","percentage","easing","progress","animate","requestAnimationFrame","value","includes","header","activePages","updateControls","controls","nav","dot","appendChild","dotClick","arrowNextClickHandler","arrowPrevClickHandler","dots","parentNode","removeEventListener","nextPage","repeat","newPageIndex","target","onkeydown","event","code","keyCode","charCode","preventDefault","wrapper","mouseWheelHandler","detachEvent","e","getAverage","elements","number","sum","lastElements","slice","max","ceil","curTime","originalEvent","wheelDelta","deltaY","detail","delta","min","shift","push","timeDiff","scrolling","type","replace","split","hasClass","contains","index","innerWidth","innerHeight","d","compatMode","clientWidth","clientHeight","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","returnValue","-webkit-transform","-moz-transform","-ms-transform","props","key","Object","hasOwnProperty","onload","String","search","start","swipeDetection","sX","sY","eX","eY","direc","touches","screenX","screenY","direction"],"mappings":"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","file":"main-min.js","sourcesContent":["/* ==========================================================================\n  Namespace\n   ========================================================================== */\n\nconst nine = {\n  sticky: false,\n  fullscreen: false,\n  currentPageIndex: null,\n  currentPage: null,\n  canScroll: true,\n  scrollDuration: 750,\n  scrollContainer: document.getElementById('fullpage'),\n  pages: document.querySelectorAll('.section'),\n  scrollDirection: null,\n  prevTime: new Date().getTime(),\n  scrollHistory: [],\n  fullScreenEnableFrom: 768,\n  supports3d: false,\n  isTouchDevice: navigator.userAgent.match(/(iPhone|iPod|iPad|Android|playbook|silk|BlackBerry|BB10|Windows Phone|Tizen|Bada|webOS|IEMobile|Opera Mini)/),\n  isTouch: (('ontouchstart' in window) || (navigator.msMaxTouchPoints > 0) || (navigator.maxTouchPoints)),\n  touchStartY: 0,\n  touchEndY: 0\n};\n\n/* ==========================================================================\n  Support Checks & Enablers\n   ========================================================================== */\n\n/**\n* support3d - Checks for browser support of 3d transforms\n*\n* @returns {boolean}\n*\n* http://stackoverflow.com/questions/5661671/detecting-transform-translate3d-support\n*/\nnine.support3d = () => {\n  const el = document.createElement('p');\n  let has3d;\n  const transforms = {\n    webkitTransform: '-webkit-transform',\n    OTransform: '-o-transform',\n    msTransform: '-ms-transform',\n    MozTransform: '-moz-transform',\n    transform: 'transform'\n  };\n\n  // Add it to the body to get the computed style.\n  document.body.insertBefore(el, null);\n\n  for (const t in transforms) {\n    if (el.style[t] !== undefined) {\n      el.style[t] = 'translate3d(1px,1px,1px)';\n      has3d = window.getComputedStyle(el).getPropertyValue(transforms[t]);\n    }\n  }\n\n  document.body.removeChild(el);\n\n  return (has3d !== undefined && has3d.length > 0 && has3d !== 'none');\n};\n\n/**\n * checkFullscreen - Checks if window height is greater than any section.\n *\n * @returns {boolean}\n */\nnine.checkFullscreen = () => {\n  let fullscreen = true;\n\n  // Remove any exisiting translates as this will affect height.\n  nine.scrollContainer.removeAttribute('style');\n  document.querySelector('.portrait').removeAttribute('style');\n\n  const windowHeight = nine.windowSize().h;\n  const windowWidth = nine.windowSize().w;\n\n  if (windowWidth >= nine.fullScreenEnableFrom) {\n    // If any section is longer the window height disable fullscreen\n    nine.pages.forEach(el => {\n      if (el.offsetHeight > windowHeight) {\n        fullscreen = false;\n      }\n    });\n  } else {\n    fullscreen = false;\n  }\n\n  return fullscreen;\n};\n\n/**\n * enableFullscreen - Adds CSS classes required for fullscreen supports3\n */\nnine.enableFullscreen = () => {\n  if (nine.checkFullscreen()) {\n    nine.fullscreen = true;\n    nine.addClass(document.body, 'fullscreen');\n\n    if (nine.supports3d === false) {\n      nine.addClass(document.body, 'no-css3');\n    }\n  } else {\n    nine.fullscreen = false;\n    nine.removeClass(document.body, 'fullscreen');\n    nine.removeClass(document.body, 'no-css3');\n  }\n};\n\n/**\n * checkSticky - Checks if browser supports CSS property position:sticky\n *\n * @returns {boolean}\n */\nnine.checkSticky = () => {\n  const el = document.createElement('a');\n  const mStyle = el.style;\n\n  mStyle.cssText = 'position:sticky;position:-webkit-sticky;position:-ms-sticky;';\n  const sticky = mStyle.position.indexOf('sticky') !== -1;\n\n  return sticky;\n};\n\n/**\n * enableSticky - Adds CSS classes required for position: sticky to be used.\n *\n * @returns {boolean}\n */\nnine.enableSticky = () => {\n  if (nine.checkSticky() && nine.checkFullscreen()) {\n    nine.sticky = true;\n    nine.fullscreen = true;\n    document.body.classList.add('sticky-enabled');\n  } else {\n    nine.sticky = false;\n    document.body.classList.remove('sticky-enabled');\n  }\n};\n\n/* ==========================================================================\n  Animations\n   ========================================================================== */\n\n/**\n * changeHeaderClass - Replaces current header classes with new className\n *                     for color chnage animation\n * @param {String} className Name of class to be added to header element\n */\nnine.changeHeaderClass = className => {\n  document.querySelector('.header').setAttribute('class', `header ${className}`);\n};\n\n/**\n * [animateLoad description]\n * @returns {[type]}\n */\nnine.animateLoad = () => {\n  window.setTimeout(() => {\n    document.body.classList.add('faded-in');\n    nine.masonaryHeight();\n\n    window.setTimeout(() => {\n      let hidden = document.querySelectorAll('.hide-left');\n      Array.prototype.forEach.call(hidden, el => {\n        el.classList.remove('hide-left');\n      });\n\n      hidden = document.querySelectorAll('.hide-right');\n      Array.prototype.forEach.call(hidden, el => {\n        el.classList.remove('hide-right');\n      });\n\n      hidden = document.querySelectorAll('.background-hide');\n      Array.prototype.forEach.call(hidden, el => {\n        el.classList.remove('background-hide');\n      });\n    }, 1000);\n  }, 1000);\n};\n\n// nine.animatePortrait = () => {\n//   const portrait = document.querySelector('.portrait .faded');\n//\n//   if (portrait) {\n//     nine.scrollContainer.addEventListener('scroll', () => {\n//       nine.portraitChange();\n//     });\n//   }\n// };\n//\n// nine.portraitChange = () => {\n//   const page = document.getElementById('about');\n//   let offsetTop = page.offsetTop;\n//   let startPoint = 0.98;\n//\n//   const portrait = document.querySelector('.portrait .faded');\n//   const scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n//\n//   if (nine.windowSize().w > 1280) {\n//     startPoint = 0.5;\n//   } else if (nine.windowSize().w < 1024) {\n//     offsetTop = page.offsetHeight + document.getElementById('intro').offsetHeight - portrait.offsetHeight;\n//   }\n//\n//   if (scrollPosition > offsetTop * startPoint) {\n//     if (portrait.style.opacity === 0) {\n//       portrait.style.opacity = 1;\n//     }\n//   } else if (portrait.style.opacity === 1) {\n//     portrait.style.opacity = 0;\n//   }\n// };\n\n/**\n * pageTransisition - Chnages background color, fades out body and redirects to href\n * @param {String} href\n * @param {String} bg Background color\n */\nnine.pageTransisition = (href, bg) => {\n  if (!bg) {\n    bg = '#E6E6E4';\n  }\n\n  document.body.style.backgroundColor = bg;\n  document.body.classList.add('faded-out');\n\n  setTimeout(() => {\n    window.location.href = href;\n  }, 600);\n};\n\n/**\n * animateLinks - Gets all anchor elements and adds a call to pageTransisition() on click\n */\nnine.animateLinks = () => {\n  const anchorElements = document.getElementsByTagName('a');\n  Array.prototype.forEach.call(anchorElements, el => {\n    el.onclick = () => {\n      nine.pageTransisition(this.href, el.getAttribute('data-bg'));\n      return false;\n    };\n  });\n};\n\n/**\n * masonaryHeight - Calculates the correct height of the masonary element\n *                  for flex-box based masonary\n */\nnine.masonaryHeight = () => {\n  const masonary = document.querySelector('.masonary');\n  let lheight = 0;\n  let rheight = 0;\n\n  if (masonary) {\n    if (nine.windowSize().w >= 1024) {\n      const lblocks = document.querySelectorAll('.block.left');\n      const rblocks = document.querySelectorAll('.block.right');\n\n      Array.prototype.forEach.call(lblocks, el => {\n        lheight += el.offsetHeight;\n      });\n\n      Array.prototype.forEach.call(rblocks, el => {\n        rheight += el.offsetHeight;\n      });\n\n      let height;\n\n      if (lheight >= rheight) {\n        height = lheight;\n      } else {\n        height = rheight + 200;\n      }\n\n      height += 1;\n      masonary.style.height = height + 'px';\n    } else {\n      masonary.style.height = 'auto';\n    }\n  }\n};\n\n/* ==========================================================================\n  Fullscreen\n   ========================================================================== */\n\n/**\n * fullscreenMode - Setups fullscreen slideshow\n * @param   {Boolean} debounced Has be called after being debounced?\n */\nnine.fullscreenMode = debounced => {\n  if (nine.checkFullscreen() && nine.fullscreen === false) {\n    nine.enableFullscreen();\n    nine.enableSticky();\n    nine.hashChangeLisener();\n    nine.addFullscreenNav();\n    nine.addKeyboardNav();\n    nine.addScrollInput();\n    nine.setCurrentPage();\n    nine.detectswipe('fullpage', nine.handleSwipe);\n  } else if (nine.checkFullscreen() === false && nine.fullscreen === true) { // Used to be on but now can't be so disable\n    nine.enableFullscreen(); // Will toggle off due to failing test\n    nine.enableSticky(); // Will toggle off due to failing fullscreen test\n    nine.removeFullscreenNav();\n    nine.removeKeyboardNav();\n    nine.removeScrollInput();\n  }\n\n  if (debounced) {\n    nine.resetPosition();\n  } else {\n    const fullscreenModeDebounced = nine.debounce(() => {\n      nine.fullscreenMode(true);\n    }, 250);\n    window.addEventListener('resize', fullscreenModeDebounced);\n  }\n};\n\n/* ==========================================================================\n   Scrolling\n   ========================================================================== */\n\n/**\n * setCurrentPage - Based on hash sets the fullscreen slideshow to the correct page.\n */\nnine.setCurrentPage = () => {\n  const section = nine.getHash();\n\n  if (section) {\n    const element = document.getElementById(section);\n\n    if (element) {\n      nine.updateCurrent(element);\n      nine.scrollStart(element); // Simulate start of scroll to set all calsses correctly.\n      // nine.scrollToSection(element.id); // Make sure we are definley at the correct section.\n      nine.silentScrollToSection(element.id);\n    }\n  } else {\n    nine.updateCurrent(document.querySelectorAll('.section')[0]);\n  }\n};\n\n/**\n * updateHash - Adds a hash to url\n * @param {String} url The value the hash should be updated to.\n */\nnine.updateHash = url => {\n  window.location.hash = url;\n};\n\n/**\n * hashChangeLisener - Adds event listeners for hash change calling hashChangeHandler()\n */\nnine.hashChangeLisener = () => {\n  if (document.addEventListener) {\n    window.addEventListener('hashchange', nine.hashChangeHandler, false); // IE9, Chrome, Safari, Oper\n  } else {\n    window.attachEvent('onhashchange', nine.hashChangeHandler); // IE 6/7/8\n  }\n};\n\n/**\n * hashChangeHandler - Processes hash changes\n */\nnine.hashChangeHandler = () => {\n  const section = nine.getHash();\n\n  if (section && section !== nine.currentPage) {\n    nine.scrollToSection(section);\n  }\n};\n\n/**\n * scrollToSection - Scorlls slideshow to the section\n * @param {String}  elementId Id of the element to be scrolled to\n * @param {Integer} offset   Pixel offset that needs to be taken into account\n */\nnine.scrollToSection = (elementId, offset) => {\n  const element = document.getElementById(elementId);\n\n  if (element === null) {\n    return;\n  } // No element\n\n  // If there is a gap between slides increase the duration by the gap.\n  // var gap = Math.abs(nine.currentPageIndex - nine.getSectionIndex(element));\n  // var duration = nine.scrollDuration * gap;\n  const duration = nine.scrollDuration;\n\n  const destiny = nine.calculateDestiny(element, offset);\n\n  if (nine.supports3d) {\n    nine.translateScroll(destiny, element, duration);\n  } else {\n    nine.animateScroll(destiny, element, duration);\n  }\n};\n\n/**\n * silentScrollToSection - Scrolls to section with a duration of 0 to quick jump.\n * @param {String}  elementId ID of the element to be scrolled to\n * @param {Integer} offset    Pixel offset that needs to be taken into account\n */\nnine.silentScrollToSection = (elementId, offset) => {\n  const element = document.getElementById(elementId);\n\n  if (element === null) {\n    return;\n  } // No element\n\n  // If there is a gap between slides increase the duration by the gap.\n  // var gap = Math.abs(nine.currentPageIndex - nine.getSectionIndex(element));\n  // var duration = nine.scrollDuration * gap;\n  const duration = 0;\n\n  const destiny = nine.calculateDestiny(element, offset);\n\n  if (nine.supports3d) {\n    nine.translateScroll(destiny, element, duration);\n  } else {\n    nine.animateScroll(destiny, element, duration);\n  }\n};\n\n/**\n * calculateOffset - If user has scrolled half way onto a section, calulate offset\n *                   required to get to next slide. Only needed if positioon: sticky being used\n * @returns {Integer} The offset in pixels.\n */\nnine.calculateOffset = () => {\n  let offset = 0;\n\n  // If user has manuall scrolled part way onto next one there will be an offset to account for.\n  if (nine.sticky) {\n    if (nine.currentPageIndex + 1 < nine.pages.length) {\n      const nextPageOffset = document.getElementById(nine.pages[nine.currentPageIndex + 1].id).offsetTop;\n      let prevPage;\n\n      if (nine.currentPageIndex - 1 >= 0) {\n        prevPage = nine.pages[nine.currentPageIndex - 1].id;\n      } else {\n        prevPage = nine.pages[nine.currentPageIndex].id;\n      }\n\n      const prevPageEl = document.getElementById(prevPage);\n      const prevPageOffsetBottom = prevPageEl.offsetTop + prevPageEl.offsetHeight;\n\n      if (nextPageOffset !== prevPageOffsetBottom) {\n        offset = prevPageOffsetBottom - nextPageOffset;\n      }\n    } else {\n      const scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n      const currentPageOffset = document.getElementById(nine.pages[nine.currentPageIndex].id).offsetTop;\n\n      if (scrollPosition !== currentPageOffset) {\n        offset = scrollPosition - currentPageOffset;\n      }\n    }\n    return offset;\n  }\n  return 0;\n};\n\n/**\n * calculateGap - If there is slides between the current and target there is a\n *                gap that needs calculating and offseting\n * @param   {Integer} newIndex The index of the new slide\n * @param   {Object}  element  The element being traveled to\n * @param   {Integer} offset   Any currently caclulated offset\n * @returns {Integer} New offset\n */\nnine.calculateGap = (newIndex, element, offset) => {\n  const gap = Math.abs(nine.currentPageIndex - newIndex) - 1;\n\n  for (let i = 1; i <= gap; i++) {\n    offset += element.offsetHeight;\n  }\n\n  offset += nine.calculateOffset();\n\n  return offset;\n};\n\n/**\n * nine.calculateDestiny - Works out direction and depending on position: sticky and corrects offset.\n * @param   {Object} element The element to travel to\n * @param   {Integer} offset  Any existing offset\n * @returns {Integer} New offset\n */\nnine.calculateDestiny = (element, offset) => {\n  let destiny;\n\n  if (typeof offset === 'undefined') {\n    offset = 0;\n  }\n\n  const newIndex = nine.getSectionIndex(element);\n  if (newIndex > nine.currentPageIndex) {\n    nine.scrollDirection = 'down';\n  } else if (newIndex < nine.currentPageIndex) {\n    nine.scrollDirection = 'up';\n    if (nine.sticky) {\n      offset = nine.calculateGap(newIndex, element, offset);\n    }\n  }\n\n  // Calculate the pixel position of the element, using offset if required\n  if (nine.scrollDirection === 'up' && nine.sticky === true) {\n    destiny = element.offsetTop - element.offsetHeight - offset;\n  } else {\n    destiny = element.offsetTop - offset;\n  }\n\n  return destiny;\n};\n\n/**\n * translateScroll - Scroll Page using CSS3 transform and translate\n * @param {Integer} endLocation The location to scroll to in pixels\n * @param {Object}  element     The element we are scrolling to\n * @param {Integer} duration    How long in ms should we take to scroll\n */\nnine.translateScroll = (endLocation, element, duration) => {\n  const translate3d = 'translate3d(0px, -' + endLocation + 'px, 0px)';\n\n  if (duration > 0) {\n    const transition = 'all ' + duration + 'ms ease';\n\n    nine.removeClass(nine.scrollContainer, 'notransition');\n\n    nine.css(nine.scrollContainer, {\n      '-webkit-transition': transition,\n      transition\n    });\n\n    nine.css(document.querySelector('.portrait'), {\n      '-webkit-transition': transition,\n      transition\n    });\n  } else {\n    nine.addClass(nine.scrollContainer, 'notransition');\n  }\n\n  nine.scrollStart(element);\n  nine.canScroll = false;\n\n  nine.translatePortrait(endLocation, duration);\n  nine.setTransforms(nine.scrollContainer, translate3d);\n\n  setTimeout(() => {\n    nine.canScroll = true;\n    nine.scrollEnd(element);\n  }, duration);\n\n  // Syncronously removing the class after the animation has been applied.\n  setTimeout(() => {\n    nine.removeClass(nine.scrollContainer, 'notransition');\n  }, 10);\n};\n\n/**\n * translatePortrait - Move the portrait element along with the translate so it appears fixed.\n * @param   {Integer} endLocation The location to scroll to in pixels\n */\nnine.translatePortrait = endLocation => {\n  const portrait = document.querySelector('.portrait');\n  if (nine.windowSize().w >= 1024) {\n    if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n      const top = endLocation + 'px';\n      nine.css(portrait, {top});\n    } else {\n      const portraitPosition = 'translate3d(0px, ' + endLocation + 'px, 0px)';\n      nine.setTransforms(portrait, portraitPosition);\n    }\n  } else {\n    document.querySelector('.portrait').removeAttribute('style');\n  }\n};\n\n/**\n * animateScroll - Scroll page with a jQuery-like scroll animation\n * @param {Integer} endLocation The location to scroll to in pixels\n * @param {Object}  element     The element we are scrolling to\n * @param {Integer} duration    How long in ms should we take to scroll\n */\nnine.animateScroll = (endLocation, element, duration) => {\n  nine.canScroll = false;\n\n  if (endLocation === null) {\n    return;\n  }\n\n  const startLocation = nine.getScrolledPosition();\n\n  if (duration === null) {\n    duration = nine.scrollDuration;\n  }\n\n  // Calculate how far to scroll\n  const distance = endLocation - startLocation;\n\n  let runAnimation;\n\n  // Set the animation variables to 0/undefined.\n  let timeLapsed = 0;\n  let percentage;\n  let position;\n  const easing = function (progress) {\n    return progress < 0.5 ? 4 * progress * progress * progress : ((progress - 1) * ((2 * progress) - 2) * ((2 * progress) - 2)) + 1; // Acceleration until halfway, then deceleration\n  };\n\n  function stopAnimationIfRequired(pos) {\n    if (pos === endLocation) {\n      window.cancelAnimationFrame(runAnimation);\n      finishedScroll();\n    }\n  }\n\n  function finishedScroll() {\n    // Remove active status from all\n    nine.canScroll = true;\n    nine.scrollDirection = null;\n    nine.scrollEnd(element);\n  }\n\n  const animate = function () {\n    timeLapsed += 16;\n    percentage = timeLapsed / duration;\n    if (percentage > 1) {\n      percentage = 1;\n      position = endLocation;\n    } else {\n      position = (startLocation + distance) * easing(percentage);\n    }\n    nine.scrollContainer.scrollTop = position;\n    runAnimation = window.requestAnimationFrame(animate);\n    stopAnimationIfRequired(position);\n  };\n\n  nine.scrollStart(element);\n\n  // Loop the animation function\n  runAnimation = window.requestAnimationFrame(animate);\n};\n\n/**\n * scrollStart - Called at scroll start and setups css classes for active sections, headers, etc\n * @param {Object} element Element we are scrolling to\n */\nnine.scrollStart = element => {\n  // Change header class - duration is same as slide duration for natural feel.\n  if (element.classList.value.includes('light')) {\n    nine.changeHeaderClass('dark');\n  } else {\n    nine.changeHeaderClass('light');\n  }\n\n  // Change menu colours dependent on slide\n  const header = document.querySelector('.header');\n  if (element.id === 'services') {\n    nine.addClass(header, 'menu-alt');\n  } else {\n    nine.removeClass(header, 'menu-alt');\n  }\n\n  // Delay until part way through scroll to chnages make feel smooth.\n  setTimeout(() => {\n    // Remove other active classes\n    const activePages = document.querySelector('.section.active');\n    if (activePages) {\n      nine.removeClass(activePages, 'active');\n      nine.removeClass(document.body, activePages.id + '-active');\n    }\n    nine.addClass(element, 'active');\n    nine.updateControls(nine.getSectionIndex(element));\n  }, nine.scrollDuration * 0.33);\n};\n\n /**\n  * scrollEnd - Called at scroll end aupdates hash, current page, controls, etc.\n  * @param {Object} element Element we are scrolling to\n  */\nnine.scrollEnd = element => {\n  if (element === null) {\n    return;\n  } // No element\n\n  // Update to new state.\n  nine.updateHash(element.id);\n  nine.updateCurrent(element);\n  nine.addClass(document.body, element.id + '-active');\n  nine.updateControls();\n};\n\n/**\n * updateCurrent - Updates globals to current values\n * @param {Object} element Element we are scrolling to\n */\nnine.updateCurrent = element => {\n  nine.currentPage = element.id;\n  nine.currentPageIndex = nine.getSectionIndex(element);\n};\n\n/**\n * getScrolledPosition - Get the current Scroll position of the browser\n * @returns {Integer} ScrollTop in pixels\n */\nnine.getScrolledPosition = () => {\n  return document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n};\n\n/**\n * resetPosition - Resets fullscreen to correct position after browser resize event\n */\nnine.resetPosition = () => {\n  if (nine.fullscreen === true) {\n    let section;\n    let destiny;\n\n    if (nine.currentPage === null) {\n      section = document.querySelectorAll('.sections')[0];\n      nine.currentPage = section.id;\n      nine.currentPageIndex = 0;\n    } else {\n      section = document.getElementById(nine.currentPage);\n    }\n\n    const offset = nine.calculateOffset();\n\n    if (nine.sticky && offset > 0) {\n      destiny = section.offsetTop - offset;\n    } else {\n      destiny = section.offsetTop;\n    }\n\n    if (nine.supports3d) {\n      nine.translateScroll(destiny, section, 0);\n    } else {\n      nine.animateScroll(destiny, section, 0);\n    }\n  }\n};\n\n/* ==========================================================================\n   Controls\n   ==========================================================================\n\n/**\n * addFullscreenNav - adds dots and next & prev controls to site with event handlers\n */\nnine.addFullscreenNav = () => {\n  const controls = document.querySelector('.controls');\n\n  if (controls) {\n    controls.classList.add('on');\n\n    const nav = document.querySelector('.dots');\n\n    if (nav) {\n      Array.prototype.forEach.call(nine.pages, (el, i) => {\n        const dot = document.createElement('li');\n        dot.setAttribute('data-page', i);\n        nav.appendChild(dot);\n        dot.addEventListener('click', element => nine.dotClick(element));\n      });\n\n      document.querySelector('.dots li').classList.add('active');\n\n      document.querySelector('.next').addEventListener('click', nine.arrowNextClickHandler);\n      document.querySelector('.prev').addEventListener('click', nine.arrowPrevClickHandler);\n\n      nine.updateControls();\n    }\n  }\n};\n\n/**\n * removeFullscreenNav - remove dots and next & prev controls to site and event handlers\n */\nnine.removeFullscreenNav = () => {\n  const controls = document.querySelector('.controls');\n\n  if (controls) {\n    controls.classList.remove('on');\n\n    const nav = document.querySelector('.dots');\n    const dots = document.querySelectorAll('.dots li');\n\n    if (nav && dots) {\n      Array.prototype.forEach.call(dots, el => {\n        el.parentNode.removeChild(el);\n      });\n\n      document.querySelector('.next').removeEventListener('click', nine.arrowNextClickHandler);\n      document.querySelector('.prev').removeEventListener('click', nine.arrowPrevClickHandler);\n    }\n  }\n};\n\n/**\n * arrowNextClickHandler\n */\nnine.arrowNextClickHandler = () => {\n  nine.nextPage();\n};\n\n/**\n * arrowPrevClickHandler\n */\nnine.arrowPrevClickHandler = () => {\n  nine.prevPage();\n};\n\n/**\n * dotClick - Handler for dot clicks\n * @param   {Object} element\n * @param   {Boolean} repeat True if called recurvisley\n */\nnine.dotClick = (element, repeat) => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  document.querySelector('.dots li.active').classList.remove('active');\n  const newPageIndex = element.target.getAttribute('data-page');\n  document.querySelectorAll('.dots li')[newPageIndex].classList.add('active');\n\n  const section = nine.pages[newPageIndex].id;\n\n  if (nine.canScroll) {\n    nine.scrollToSection(section);\n  } else if (repeat === false) {\n    // Is currently scrolling. Try again after duration.\n    setTimeout(() => {\n      nine.dotClick(element, true);\n    }, nine.scrollDuration);\n  }\n};\n\n/**\n * updateControls - Update controls to new values\n * @param   {Integer} newIndex Index of the new slide in slides array\n */\nnine.updateControls = newIndex => {\n  if (newIndex === undefined) {\n    newIndex = null;\n  }\n\n  if (newIndex === null && nine.currentPageIndex === null) {\n    newIndex = 0;\n  } else if (newIndex === null && nine.currentPageIndex !== null) {\n    newIndex = nine.currentPageIndex;\n  }\n\n  const active = document.querySelector('.dots li.active');\n\n  if (active) {\n    document.querySelector('.dots li.active').classList.remove('active');\n  }\n\n  document.querySelectorAll('.dots li')[newIndex].classList.add('active');\n\n  document.querySelector('.next').classList.remove('disabled');\n  document.querySelector('.prev').classList.remove('disabled');\n\n  if (newIndex === 0) {\n    document.querySelector('.prev').classList.add('disabled');\n  }\n\n  if (newIndex === nine.pages.length - 1) {\n    document.querySelector('.next').classList.add('disabled');\n  }\n};\n\n/**\n * nextPage - Navigates to next page\n * @param   {Boolean} repeat True if called recurvisley\n */\nnine.nextPage = repeat => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex + 1 < nine.pages.length && nine.canScroll) {\n    const nextPage = nine.pages[nine.currentPageIndex + 1].id;\n    nine.scrollToSection(nextPage);\n    return true;\n  } else if (nine.currentPageIndex + 1 < nine.pages.length && repeat === false) {\n    setTimeout(() => {\n      nine.nextPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n};\n\n/**\n * prevPage - Navigates to prev page\n * @param   {Boolean} repeat True if called recurvisley\n */\nnine.prevPage = repeat => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex - 1 >= 0 && nine.canScroll) {\n    const prevPage = nine.pages[nine.currentPageIndex - 1].id;\n    nine.scrollToSection(prevPage);\n    return true;\n  } else if (nine.currentPageIndex - 1 >= 0 && repeat === false) {\n    setTimeout(() => {\n      nine.prevPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n};\n\n/* ==========================================================================\n  Inputs\n  ========================================================================== */\n\n/**\n * addKeyboardNav - Allow for buttons presses to navigate fullscreen slideshow\n */\nnine.addKeyboardNav = () => {\n  document.onkeydown = function (event) {\n    if (!event) {\n      event = window.event;\n    }\n\n    let code = event.keyCode;\n\n    if (event.charCode && code === 0) {\n      code = event.charCode;\n    }\n\n    switch (code) {\n      case 38: // Up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 40: // Down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 32: // Space\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 33: // Page up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 34: // Page down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      default:\n    }\n  };\n};\n\n/**\n * removeKeyboardNav - removes key press event handlers\n */\nnine.removeKeyboardNav = () => {\n  document.onkeydown = null;\n};\n\n/**\n * addScrollInput - Handle scroll input to naviagte to slides\n */\nnine.addScrollInput = () => {\n  const wrapper = window;\n\n  if (wrapper.addEventListener) {\n    wrapper.addEventListener('mousewheel', nine.mouseWheelHandler, false); // Ie9, chrome, safari, opera use mousewheel\n\n    wrapper.addEventListener('wheel', nine.mouseWheelHandler, false); // firefox\n  } else {\n    wrapper.attachEvent('onmousewheel', nine.mouseWheelHandler); // IE 6/7/8 not really supported anyway\n  }\n};\n\n/**\n * removeScrollInput - Remove scroll handling\n */\nnine.removeScrollInput = () => {\n  const wrapper = window;\n\n  if (wrapper.addEventListener) {\n    wrapper.removeEventListener('mousewheel', nine.mouseWheelHandler, false); // Ie9, chrome, safari, opera use mousewheel\n\n    wrapper.removeEventListener('wheel', nine.mouseWheelHandler, false); // Firefox\n  } else {\n    wrapper.detachEvent('onmousewheel', nine.mouseWheelHandler); // IE 6/7/8 not really supported anyway\n  }\n};\n\n/**\n * mouseWheelHandler - Process wheel events to scroll to next or prev section\n * @param   {Object} e Scroll event\n * Line 1099: https://github.com/alvarotrigo/fullPage.js/blob/master/pure%20javascript%20(Alpha)/javascript.fullPage.js\n * https://www.sitepoint.com/html5-javascript-mouse-wheel/\n */\nnine.mouseWheelHandler = e => {\n  nine.preventDefault(e); // Prevent normall scrolling\n\n  const curTime = new Date().getTime();\n\n  // Cross-browser wheel delta\n  e = window.event || e || e.originalEvent;\n\n  const value = e.wheelDelta || -e.deltaY || -e.detail;\n  const delta = Math.max(-1, Math.min(1, value));\n\n  // Limiting the array to 150 (lets not waist memory!)\n  if (nine.scrollHistory.length > 149) {\n    nine.scrollHistory.shift(); // Rmeoves first element\n  }\n\n  // Keeping record of the previous scrollings\n  nine.scrollHistory.push(Math.abs(value));\n\n  const timeDiff = curTime - nine.prevTime;\n  nine.prevTime = curTime;\n\n  // Haven't they scrolled in a while?\n  // (enough to be consider a different scrolling action to scroll another section)\n  if (timeDiff > 200) {\n    // Emptying the array, we dont care about old scrollings for our averages\n    nine.scrollHistory = [];\n  }\n\n  function getAverage(elements, number) {\n    let sum = 0;\n\n    // Taking `number` elements from the end to make the average, if there are not enought, 1\n    const lastElements = elements.slice(Math.max(elements.length - number, 1));\n\n    for (let i = 0; i < lastElements.length; i++) {\n      sum += lastElements[i];\n    }\n    return Math.ceil(sum / number);\n  }\n\n  if (nine.canScroll) {\n    const averageEnd = getAverage(nine.scrollHistory, 10);\n    const averageMiddle = getAverage(nine.scrollHistory, 70);\n    const isAccelerating = averageEnd >= averageMiddle;\n\n    if (isAccelerating) {\n      if (delta < 0) { // Scrolling down?\n        nine.scrolling('down');\n      } else { // Scrolling up?\n        nine.scrolling('up');\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * scrolling - Calls prevPage() or nextPage() depending on scroll direction type\n * @param   {String} type\n */\nnine.scrolling = type => {\n  if (type === 'down') {\n    nine.nextPage();\n  } else {\n    nine.prevPage();\n  }\n};\n\n/* ==========================================================================\n   Helpers\n   ==========================================================================\n\n/**\n * getHash - gets current hash value\n */\nnine.getHash = () => {\n  const value = window.location.hash.replace('#', '').split('/');\n  return value[0];\n};\n\n/**\n * addClass\n * @param {Object} element\n * @param {String} className\n */\nnine.addClass = (element, className) => {\n  if (element && !nine.hasClass(element, className)) {\n    element.classList.add(className);\n  }\n};\n\n /**\n  * removeClass\n  * @param {Object} element\n  * @param {String} className\n  */\nnine.removeClass = (element, className) => {\n  if (element && nine.hasClass(element, className)) {\n    element.classList.remove(className);\n  }\n};\n\n/**\n * hasClass - Checks if element has class\n * @param   {Object}  element\n * @param   {String}  className\n * @returns {Boolean}\n */\nnine.hasClass = (element, className) => {\n  return element.classList.contains(className);\n};\n\n/**\n * getSectionIndex - Get the index of an element in the slides array\n * @param   {Object} element\n * @returns {Integer}\n */\nnine.getSectionIndex = element => {\n  let index;\n\n  Array.prototype.forEach.call(nine.pages, (el, i) => {\n    if (el === element) {\n      index = i;\n    }\n  });\n\n  return index;\n};\n\n/**\n * windowSize - Reliably gets window sizes\n * @param   {Object} w The window to use.\n * @returns {Object} {w: width, h: height}\n */\nnine.windowSize = w => {\n  // Use the specified window or the current window if no argument\n  w = w || window;\n\n  // This works for all browsers except IE8 and before\n  if (w.innerWidth !== null) {\n    return {w: w.innerWidth, h: w.innerHeight};\n  }\n\n  // For IE (or any browser) in Standards mode\n  const d = w.document;\n  if (document.compatMode === 'CSS1Compat') {\n    return {w: d.documentElement.clientWidth,\n      h: d.documentElement.clientHeight};\n  }\n\n  // For browsers in Quirks mode\n  return {w: d.body.clientWidth, h: d.body.clientHeight};\n};\n\n/**\n * debounce - Debounces actions be with a timer.\n * @param   {Object}  func      Function to be called\n * @param   {Integer} wait      How long to wasit until call\n * @param   {Boolean} immediate Call it immediately?\n */\nnine.debounce = (func, wait, immediate) => {\n  let timeout;\n  return function () {\n    const context = this;\n    const args = arguments;\n    const later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n\n/**\n * preventDefault\n * @param   {Object} event\n */\nnine.preventDefault = event => {\n  if (event.preventDefault) {\n    event.preventDefault();\n  } else {\n    event.returnValue = false;\n  }\n};\n\n/**\n * setTransforms - adds CSS treansform to an element\n * @param {Object} element\n * @param {String} translate3d\n */\nnine.setTransforms = (element, translate3d) => {\n  nine.css(element, {\n    '-webkit-transform': translate3d,\n    '-moz-transform': translate3d,\n    '-ms-transform': translate3d,\n    transform: translate3d\n  });\n};\n\n/**\n * css - add CSS to an element\n * @param {Object} el\n * @param {Object} props\n */\nnine.css = (el, props) => {\n  let key;\n  for (key in props) {\n    if (Object.prototype.hasOwnProperty.call(props, key)) {\n      if (key !== null) {\n        el.style[key] = props[key];\n      }\n    }\n  }\n  return el;\n};\n\n/* ==========================================================================\n  Document Load\n   ========================================================================== */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  nine.supports3d = nine.support3d();\n\n  nine.masonaryHeight();\n  nine.animateLinks();\n\n  window.addEventListener('resize', () => {\n    nine.masonaryHeight();\n  });\n\n  nine.fullscreenMode();\n});\n\n/* ==========================================================================\n  Window Load\n   ========================================================================== */\n\nwindow.onload = () => {\n  nine.animateLoad();\n  nine.masonaryHeight();\n};\n\n/* ==========================================================================\n    Polyfils\n   ========================================================================== */\n\nif (!String.prototype.includes) {\n  String.prototype.includes = function (search, start) {\n    if (typeof start !== 'number') {\n      start = 0;\n    }\n\n    if (start + search.length > this.length) {\n      return false;\n    }\n\n    return this.indexOf(search, start) !== -1;\n  };\n}\n\n/**\n * [detectswipe description]\n * @param   {[type]} el   [description]\n * @param   {[type]} func [description]\n * @returns {[type]}\n *\n * https://stackoverflow.com/questions/15084675/how-to-implement-swipe-gestures-for-mobile-devices\n */\nnine.detectswipe = (el, func) => {\n  const swipeDetection = {};\n  swipeDetection.sX = 0;\n  swipeDetection.sY = 0;\n  swipeDetection.eX = 0;\n  swipeDetection.eY = 0;\n  const minX = 30;  // min x swipe for horizontal swipe\n  const maxX = 30;  // max x difference for vertical swipe\n  const minY = 50;  // min y swipe for vertical swipe\n  const maxY = 60;  // max y difference for horizontal swipe\n  let direc = '';\n  const element = document.getElementById(el);\n  element.addEventListener('touchstart', e => {\n    const t = e.touches[0];\n    swipeDetection.sX = t.screenX;\n    swipeDetection.sY = t.screenY;\n  }, false);\n  element.addEventListener('touchmove', e => {\n    if (nine.fullscreen) {\n      nine.preventDefault(e);\n    }\n    const t = e.touches[0];\n    swipeDetection.eX = t.screenX;\n    swipeDetection.eY = t.screenY;\n  }, false);\n  element.addEventListener('touchend', () => {\n    // horizontal detection else if vertical detection\n    if ((((swipeDetection.eX - minX > swipeDetection.sX) || (swipeDetection.eX + minX < swipeDetection.sX)) && ((swipeDetection.eY < swipeDetection.sY + maxY) && (swipeDetection.sY > swipeDetection.eY - maxY) && (swipeDetection.eX > 0)))) {\n      if (swipeDetection.eX > swipeDetection.sX) {\n        direc = 'r';\n      } else {\n        direc = 'l';\n      }\n    } else if ((((swipeDetection.eY - minY > swipeDetection.sY) || (swipeDetection.eY + minY < swipeDetection.sY)) && ((swipeDetection.eX < swipeDetection.sX + maxX) && (swipeDetection.sX > swipeDetection.eX - maxX) && (swipeDetection.eY > 0)))) {\n      if (swipeDetection.eY > swipeDetection.sY) {\n        direc = 'd';\n      } else {\n        direc = 'u';\n      }\n    }\n\n    if (direc !== '') {\n      if (typeof func === 'function') {\n        func(direc);\n      }\n    }\n\n    direc = '';\n    swipeDetection.sX = 0;\n    swipeDetection.sY = 0;\n    swipeDetection.eX = 0;\n    swipeDetection.eY = 0;\n  }, false);\n};\n\nnine.handleSwipe = direction => {\n  if (nine.fullscreen && nine.isTouch) {\n    if (direction === 'u') {\n      nine.nextPage();\n    } else {\n      nine.prevPage();\n    }\n  }\n};\n"]}