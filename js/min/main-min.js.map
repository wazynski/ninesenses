{"version":3,"sources":["../main.js"],"names":["nine","sticky","fullscreen","currentPageIndex","currentPage","canScroll","scrollDuration","scrollContainer","document","getElementById","pages","querySelectorAll","scrollDirection","prevTime","Date","getTime","scrollHistory","fullScreenEnableFrom","supports3d","support3d","el","createElement","has3d","transforms","webkitTransform","OTransform","msTransform","MozTransform","transform","body","insertBefore","t","undefined","style","window","getComputedStyle","getPropertyValue","removeChild","length","checkFullscreen","windowHeight","windowSize","h","w","forEach","offsetHeight","enableFullscreen","addClass","removeClass","checkSticky","enableSticky","classList","add","remove","changeHeaderClass","className","querySelector","setAttribute","animateLoad","setTimeout","masonaryHeight","hidden","Array","prototype","call","pageTransisition","href","bg","backgroundColor","location","animateLinks","anchorElements","getElementsByTagName","onclick","getAttribute","masonary","lheight","rheight","lblocks","rblocks","height","fullscreenMode","debounced","hashChangeLisener","addFullscreenNav","addKeyboardNav","addScrollInput","setCurrentPage","removeFullscreenNav","removeKeyboardNav","removeScrollInput","resetPosition","fullscreenModeDebounced","debounce","addEventListener","section","getHash","element","updateCurrent","scrollStart","silentScrollToSection","id","updateHash","url","hash","hashChangeHandler","attachEvent","scrollToSection","elementId","offset","duration","destiny","calculateDestiny","translateScroll","animateScroll","calculateOffset","nextPageOffset","offsetTop","prevPage","prevPageEl","prevPageOffsetBottom","scrollPosition","documentElement","scrollTop","currentPageOffset","calculateGap","newIndex","gap","Math","abs","i","getSectionIndex","endLocation","translate3d","transition","css","-webkit-transition","translatePortrait","setTransforms","scrollEnd","portrait","navigator","userAgent","toLowerCase","indexOf","top","portraitPosition","stopAnimationIfRequired","pos","cancelAnimationFrame","runAnimation","finishedScroll","startLocation","getScrolledPosition","distance","timeLapsed","percentage","position","easing","progress","animate","requestAnimationFrame","value","includes","header","activePages","updateControls","console","log","controls","nav","dot","appendChild","dotClick","arrowNextClickHandler","arrowPrevClickHandler","dots","parentNode","removeEventListener","nextPage","repeat","newPageIndex","target","onkeydown","event","code","keyCode","charCode","preventDefault","wrapper","mouseWheelHandler","detachEvent","e","getAverage","elements","number","sum","lastElements","slice","max","ceil","curTime","originalEvent","wheelDelta","deltaY","detail","delta","min","shift","push","timeDiff","scrolling","type","replace","split","hasClass","contains","index","innerWidth","innerHeight","d","compatMode","clientWidth","clientHeight","func","wait","immediate","timeout","context","this","args","arguments","later","apply","callNow","clearTimeout","returnValue","-webkit-transform","-moz-transform","-ms-transform","props","key","Object","hasOwnProperty","onload","String","search","start"],"mappings":"YAIA,IAAMA,OACJC,QAAQ,EACRC,YAAY,EACZC,iBAAkB,KAClBC,YAAa,KACbC,WAAW,EACXC,eAAgB,IAChBC,gBAAiBC,SAASC,eAAe,YACzCC,MAAOF,SAASG,iBAAiB,YACjCC,gBAAiB,KACjBC,UAAU,GAAIC,OAAOC,UACrBC,iBACAC,qBAAsB,IACtBC,YAAY,EAcdlB,MAAKmB,UAAY,WACf,GAAMC,GAAKZ,SAASa,cAAc,KAC9BC,MAAA,GACEC,GACJC,gBAAiB,oBACjBC,WAAY,eACZC,YAAa,gBACbC,aAAc,iBACdC,UAAW,YAIbpB,UAASqB,KAAKC,aAAaV,EAAI,KAE/B,KAAK,GAAMW,KAAKR,OACMS,KAAhBZ,EAAGa,MAAMF,KACXX,EAAGa,MAAMF,GAAK,2BACdT,EAAQY,OAAOC,iBAAiBf,GAAIgB,iBAAiBb,EAAWQ,IAMpE,OAFAvB,UAASqB,KAAKQ,YAAYjB,OAERY,KAAVV,GAAuBA,EAAMgB,OAAS,GAAe,SAAVhB,GAQrDtB,KAAKuC,gBAAkB,WACrB,GAAIrC,IAAa,EAEXsC,EAAexC,KAAKyC,aAAaC,CAcvC,OAboB1C,MAAKyC,aAAaE,GAEnB3C,KAAKiB,qBAEtBjB,KAAKU,MAAMkC,QAAQ,SAAAxB,GACbA,EAAGyB,aAAeL,IACpBtC,GAAa,KAIjBA,GAAa,EAGRA,GAMTF,KAAK8C,iBAAmB,WAClB9C,KAAKuC,mBACPvC,KAAKE,YAAa,EAClBF,KAAK+C,SAASvC,SAASqB,KAAM,eAEL,IAApB7B,KAAKkB,YACPlB,KAAK+C,SAASvC,SAASqB,KAAM,aAG/B7B,KAAKE,YAAa,EAClBF,KAAKgD,YAAYxC,SAASqB,KAAM,cAChC7B,KAAKgD,YAAYxC,SAASqB,KAAM,aASpC7B,KAAKiD,YAAc,WACjB,OAAO,GAeTjD,KAAKkD,aAAe,WACdlD,KAAKiD,eAAiBjD,KAAKuC,mBAC7BvC,KAAKC,QAAS,EACdD,KAAKE,YAAa,EAClBM,SAASqB,KAAKsB,UAAUC,IAAI,oBAE5BpD,KAAKC,QAAS,EACdO,SAASqB,KAAKsB,UAAUE,OAAO,oBAanCrD,KAAKsD,kBAAoB,SAAAC,GACvB/C,SAASgD,cAAc,WAAWC,aAAa,QAA/C,UAAkEF,IAOpEvD,KAAK0D,YAAc,WACjBxB,OAAOyB,WAAW,WAChBnD,SAASqB,KAAKsB,UAAUC,IAAI,YAC5BpD,KAAK4D,iBAEL1B,OAAOyB,WAAW,WAChB,GAAIE,GAASrD,SAASG,iBAAiB,aACvCmD,OAAMC,UAAUnB,QAAQoB,KAAKH,EAAQ,SAAAzC,GACnCA,EAAG+B,UAAUE,OAAO,eAGtBQ,EAASrD,SAASG,iBAAiB,eACnCmD,MAAMC,UAAUnB,QAAQoB,KAAKH,EAAQ,SAAAzC,GACnCA,EAAG+B,UAAUE,OAAO,gBAGtBQ,EAASrD,SAASG,iBAAiB,oBACnCmD,MAAMC,UAAUnB,QAAQoB,KAAKH,EAAQ,SAAAzC,GACnCA,EAAG+B,UAAUE,OAAO,sBAErB,MACF,MAyCLrD,KAAKiE,iBAAmB,SAACC,EAAMC,GACxBA,IACHA,EAAK,WAGP3D,SAASqB,KAAKI,MAAMmC,gBAAkBD,EACtC3D,SAASqB,KAAKsB,UAAUC,IAAI,aAE5BO,WAAW,WACTzB,OAAOmC,SAASH,KAAOA,GACtB,MAMLlE,KAAKsE,aAAe,WAClB,GAAMC,GAAiB/D,SAASgE,qBAAqB,IACrDV,OAAMC,UAAUnB,QAAQoB,KAAKO,EAAgB,SAAAnD,GAC3CA,EAAGqD,QAAU,WAEX,MADAzE,MAAKiE,sBAAiBjC,IAAKkC,KAAM9C,EAAGsD,aAAa,aAC1C,MASb1E,KAAK4D,eAAiB,WACpB,GAAMe,GAAWnE,SAASgD,cAAc,aACpCoB,EAAU,EACVC,EAAU,CAEd,IAAIF,EACF,GAAI3E,KAAKyC,aAAaE,GAAK,KAAM,CAC/B,GAAMmC,GAAUtE,SAASG,iBAAiB,eACpCoE,EAAUvE,SAASG,iBAAiB,eAE1CmD,OAAMC,UAAUnB,QAAQoB,KAAKc,EAAS,SAAA1D,GACpCwD,GAAWxD,EAAGyB,eAGhBiB,MAAMC,UAAUnB,QAAQoB,KAAKe,EAAS,SAAA3D,GACpCyD,GAAWzD,EAAGyB,cAGhB,IAAImC,OAAA,EAGFA,GADEJ,GAAWC,EACJD,EAEAC,EAAU,IAGrBG,GAAU,EACVL,EAAS1C,MAAM+C,OAASA,EAAS,SAEjCL,GAAS1C,MAAM+C,OAAS,QAa9BhF,KAAKiF,eAAiB,SAAAC,GAiBpB,GAhBIlF,KAAKuC,oBAAyC,IAApBvC,KAAKE,YACjCF,KAAK8C,mBACL9C,KAAKkD,eACLlD,KAAKmF,oBACLnF,KAAKoF,mBACLpF,KAAKqF,iBACLrF,KAAKsF,iBACLtF,KAAKuF,mBAC+B,IAA3BvF,KAAKuC,oBAAmD,IAApBvC,KAAKE,aAClDF,KAAK8C,mBACL9C,KAAKkD,eACLlD,KAAKwF,sBACLxF,KAAKyF,oBACLzF,KAAK0F,qBAGHR,EACFlF,KAAK2F,oBACA,CACL,GAAMC,GAA0B5F,KAAK6F,SAAS,WAC5C7F,KAAKiF,gBAAe,IACnB,IACH/C,QAAO4D,iBAAiB,SAAUF,KAWtC5F,KAAKuF,eAAiB,WACpB,GAAMQ,GAAU/F,KAAKgG,SAErB,IAAID,EAAS,CACX,GAAME,GAAUzF,SAASC,eAAesF,EAEpCE,KACFjG,KAAKkG,cAAcD,GACnBjG,KAAKmG,YAAYF,GAEjBjG,KAAKoG,sBAAsBH,EAAQI,SAGrCrG,MAAKkG,cAAc1F,SAASG,iBAAiB,YAAY,KAQ7DX,KAAKsG,WAAa,SAAAC,GAChBrE,OAAOmC,SAASmC,KAAOD,GAMzBvG,KAAKmF,kBAAoB,WACnB3E,SAASsF,iBACX5D,OAAO4D,iBAAiB,aAAc9F,KAAKyG,mBAAmB,GAE9DvE,OAAOwE,YAAY,eAAgB1G,KAAKyG,oBAO5CzG,KAAKyG,kBAAoB,WACvB,GAAMV,GAAU/F,KAAKgG,SAEjBD,IAAWA,IAAY/F,KAAKI,aAC9BJ,KAAK2G,gBAAgBZ,IASzB/F,KAAK2G,gBAAkB,SAACC,EAAWC,GACjC,GAAMZ,GAAUzF,SAASC,eAAemG,EAExC,IAAgB,OAAZX,EAAJ,CAOA,GAAMa,GAAW9G,KAAKM,eAEhByG,EAAU/G,KAAKgH,iBAAiBf,EAASY,EAE3C7G,MAAKkB,WACPlB,KAAKiH,gBAAgBF,EAASd,EAASa,GAEvC9G,KAAKkH,cAAcH,EAASd,EAASa,KASzC9G,KAAKoG,sBAAwB,SAACQ,EAAWC,GACvC,GAAMZ,GAAUzF,SAASC,eAAemG,EAExC,IAAgB,OAAZX,EAAJ,CAOA,GAEMc,GAAU/G,KAAKgH,iBAAiBf,EAASY,EAE3C7G,MAAKkB,WACPlB,KAAKiH,gBAAgBF,EAASd,EALf,GAOfjG,KAAKkH,cAAcH,EAASd,EAPb,KAgBnBjG,KAAKmH,gBAAkB,WACrB,GAAIN,GAAS,CAGb,IAAI7G,KAAKC,OAAQ,CACf,GAAID,KAAKG,iBAAmB,EAAIH,KAAKU,MAAM4B,OAAQ,CACjD,GAAM8E,GAAiB5G,SAASC,eAAeT,KAAKU,MAAMV,KAAKG,iBAAmB,GAAGkG,IAAIgB,UACrFC,MAAA,EAGFA,GADEtH,KAAKG,iBAAmB,GAAK,EACpBH,KAAKU,MAAMV,KAAKG,iBAAmB,GAAGkG,GAEtCrG,KAAKU,MAAMV,KAAKG,kBAAkBkG,EAG/C,IAAMkB,GAAa/G,SAASC,eAAe6G,GACrCE,EAAuBD,EAAWF,UAAYE,EAAW1E,YAE3DuE,KAAmBI,IACrBX,EAASW,EAAuBJ,OAE7B,CACL,GAAMK,GAAiBjH,SAASkH,gBAAgBC,WAAa3H,KAAKO,gBAAgBoH,UAC5EC,EAAoBpH,SAASC,eAAeT,KAAKU,MAAMV,KAAKG,kBAAkBkG,IAAIgB,SAEpFI,KAAmBG,IACrBf,EAASY,EAAiBG,GAG9B,MAAOf,GAET,MAAO,IAWT7G,KAAK6H,aAAe,SAACC,EAAU7B,EAASY,GAGtC,IAAK,GAFCkB,GAAMC,KAAKC,IAAIjI,KAAKG,iBAAmB2H,GAAY,EAEhDI,EAAI,EAAGA,GAAKH,EAAKG,IACxBrB,GAAUZ,EAAQpD,YAKpB,OAFAgE,IAAU7G,KAAKmH,mBAWjBnH,KAAKgH,iBAAmB,SAACf,EAASY,OAGV,KAAXA,IACTA,EAAS,EAGX,IAAMiB,GAAW9H,KAAKmI,gBAAgBlC,EAiBtC,OAhBI6B,GAAW9H,KAAKG,iBAClBH,KAAKY,gBAAkB,OACdkH,EAAW9H,KAAKG,mBACzBH,KAAKY,gBAAkB,KACnBZ,KAAKC,SACP4G,EAAS7G,KAAK6H,aAAaC,EAAU7B,EAASY,KAKrB,OAAzB7G,KAAKY,kBAA4C,IAAhBZ,KAAKC,OAC9BgG,EAAQoB,UAAYpB,EAAQpD,aAAegE,EAE3CZ,EAAQoB,UAAYR,GAYlC7G,KAAKiH,gBAAkB,SAACmB,EAAanC,EAASa,GAC5C,GAAMuB,GAAc,qBAAuBD,EAAc,UAEzD,IAAItB,EAAW,EAAG,CAChB,GAAMwB,GAAa,OAASxB,EAAW,SAEvC9G,MAAKgD,YAAYhD,KAAKO,gBAAiB,gBAEvCP,KAAKuI,IAAIvI,KAAKO,iBACZiI,qBAAsBF,EACtBA,WAAAA,IAGFtI,KAAKuI,IAAI/H,SAASgD,cAAc,cAC9BgF,qBAAsBF,EACtBA,WAAAA,QAGFtI,MAAK+C,SAAS/C,KAAKO,gBAAiB,eAGtCP,MAAKmG,YAAYF,GACjBjG,KAAKK,WAAY,EAEjBL,KAAKyI,kBAAkBL,EAAatB,GACpC9G,KAAK0I,cAAc1I,KAAKO,gBAAiB8H,GAEzC1E,WAAW,WACT3D,KAAKK,WAAY,EACjBL,KAAK2I,UAAU1C,IACda,GAGHnD,WAAW,WACT3D,KAAKgD,YAAYhD,KAAKO,gBAAiB,iBACtC,KAOLP,KAAKyI,kBAAoB,SAAAL,GACvB,GAAMQ,GAAWpI,SAASgD,cAAc,YAExC,IAAIqF,UAAUC,UAAUC,cAAcC,QAAQ,YAAc,EAAG,CAC7D,GAAMC,GAAMb,EAAc,IAC1BpI,MAAKuI,IAAIK,GAAWK,IAAAA,QACf,CACL,GAAMC,GAAmB,oBAAsBd,EAAc,UAC7DpI,MAAK0I,cAAcE,EAAUM,KAUjClJ,KAAKkH,cAAgB,SAACkB,EAAanC,EAASa,GA0B1C,QAASqC,GAAwBC,GAC3BA,IAAQhB,IACVlG,OAAOmH,qBAAqBC,GAC5BC,KAIJ,QAASA,KAEPvJ,KAAKK,WAAY,EACjBL,KAAKY,gBAAkB,KACvBZ,KAAK2I,UAAU1C,GAlCjB,GAFAjG,KAAKK,WAAY,EAEG,OAAhB+H,EAAJ,CAIA,GAAMoB,GAAgBxJ,KAAKyJ,qBAEV,QAAb3C,IACFA,EAAW9G,KAAKM,eAIlB,IAAMoJ,GAAWtB,EAAcoB,EAE3BF,MAAA,GAGAK,EAAa,EACbC,MAAA,GACAC,MAAA,GACEC,EAAS,SAAUC,GACvB,MAAOA,GAAW,GAAM,EAAIA,EAAWA,EAAWA,GAAaA,EAAW,IAAO,EAAIA,EAAY,IAAO,EAAIA,EAAY,GAAM,GAiB1HC,EAAU,QAAVA,KACJL,GAAc,GACdC,EAAaD,EAAa7C,EACtB8C,EAAa,GACfA,EAAa,EACbC,EAAWzB,GAEXyB,GAAYL,EAAgBE,GAAYI,EAAOF,GAEjD5J,KAAKO,gBAAgBoH,UAAYkC,EACjCP,EAAepH,OAAO+H,sBAAsBD,GAC5Cb,EAAwBU,GAG1B7J,MAAKmG,YAAYF,GAGjBqD,EAAepH,OAAO+H,sBAAsBD,KAO9ChK,KAAKmG,YAAc,SAAAF,GAEbA,EAAQ9C,UAAU+G,MAAMC,SAAS,SACnCnK,KAAKsD,kBAAkB,QAEvBtD,KAAKsD,kBAAkB,QAIzB,IAAM8G,GAAS5J,SAASgD,cAAc,UACnB,cAAfyC,EAAQI,GACVrG,KAAK+C,SAASqH,EAAQ,YAEtBpK,KAAKgD,YAAYoH,EAAQ,YAI3BzG,WAAW,WAET,GAAM0G,GAAc7J,SAASgD,cAAc,kBACvC6G,KACFrK,KAAKgD,YAAYqH,EAAa,UAC9BrK,KAAKgD,YAAYxC,SAASqB,KAAMwI,EAAYhE,GAAK,YAEnDrG,KAAK+C,SAASkD,EAAS,UACvBjG,KAAKsK,eAAetK,KAAKmI,gBAAgBlC,KAClB,IAAtBjG,KAAKM,iBAOVN,KAAK2I,UAAY,SAAA1C,GACC,OAAZA,IAKJjG,KAAKsG,WAAWL,EAAQI,IACxBrG,KAAKkG,cAAcD,GACnBjG,KAAK+C,SAASvC,SAASqB,KAAMoE,EAAQI,GAAK,WAC1CrG,KAAKsK,mBAOPtK,KAAKkG,cAAgB,SAAAD,GACnBjG,KAAKI,YAAc6F,EAAQI,GAC3BrG,KAAKG,iBAAmBH,KAAKmI,gBAAgBlC,IAO/CjG,KAAKyJ,oBAAsB,WACzB,MAAOjJ,UAASkH,gBAAgBC,WAAa3H,KAAKO,gBAAgBoH,WAMpE3H,KAAK2F,cAAgB,WAGnB,GAFA4E,QAAQC,IAAI,QACZD,QAAQC,IAAIxK,KAAKE,aACO,IAApBF,KAAKE,WAAqB,CAC5B,GAAI6F,OAAA,GACAgB,MAAA,EAEJwD,SAAQC,IAAI,KAEa,OAArBxK,KAAKI,aACP2F,EAAUvF,SAASG,iBAAiB,aAAa,GACjDX,KAAKI,YAAc2F,EAAQM,GAC3BrG,KAAKG,iBAAmB,GAExB4F,EAAUvF,SAASC,eAAeT,KAAKI,YAGzC,IAAMyG,GAAS7G,KAAKmH,iBAGlBJ,GADE/G,KAAKC,QAAU4G,EAAS,EAChBd,EAAQsB,UAAYR,EAEpBd,EAAQsB,UAGhBrH,KAAKkB,WACPlB,KAAKiH,gBAAgBF,EAAShB,EAAS,GAEvC/F,KAAKkH,cAAcH,EAAShB,EAAS,KAY3C/F,KAAKoF,iBAAmB,WACtB,GAAMqF,GAAWjK,SAASgD,cAAc,YAExC,IAAIiH,EAAU,CACZA,EAAStH,UAAUC,IAAI,KAEvB,IAAMsH,GAAMlK,SAASgD,cAAc,QAE/BkH,KACF5G,MAAMC,UAAUnB,QAAQoB,KAAKhE,KAAKU,MAAO,SAACU,EAAI8G,GAC5C,GAAMyC,GAAMnK,SAASa,cAAc,KACnCsJ,GAAIlH,aAAa,YAAayE,GAC9BwC,EAAIE,YAAYD,GAChBA,EAAI7E,iBAAiB,QAAS,SAAAG,GAAA,MAAWjG,MAAK6K,SAAS5E,OAGzDzF,SAASgD,cAAc,YAAYL,UAAUC,IAAI,UAEjD5C,SAASgD,cAAc,SAASsC,iBAAiB,QAAS9F,KAAK8K,uBAC/DtK,SAASgD,cAAc,SAASsC,iBAAiB,QAAS9F,KAAK+K,uBAE/D/K,KAAKsK,oBAQXtK,KAAKwF,oBAAsB,WACzB,GAAMiF,GAAWjK,SAASgD,cAAc,YAExC,IAAIiH,EAAU,CACZA,EAAStH,UAAUE,OAAO,KAE1B,IAAMqH,GAAMlK,SAASgD,cAAc,SAC7BwH,EAAOxK,SAASG,iBAAiB,WAEnC+J,IAAOM,IACTlH,MAAMC,UAAUnB,QAAQoB,KAAKgH,EAAM,SAAA5J,GACjCA,EAAG6J,WAAW5I,YAAYjB,KAG5BZ,SAASgD,cAAc,SAAS0H,oBAAoB,QAASlL,KAAK8K,uBAClEtK,SAASgD,cAAc,SAAS0H,oBAAoB,QAASlL,KAAK+K,0BAQxE/K,KAAK8K,sBAAwB,WAC3B9K,KAAKmL,YAMPnL,KAAK+K,sBAAwB,WAC3B/K,KAAKsH,YAQPtH,KAAK6K,SAAW,SAAC5E,EAASmF,GACT,OAAXA,IACFA,GAAS,GAGX5K,SAASgD,cAAc,mBAAmBL,UAAUE,OAAO,SAC3D,IAAMgI,GAAepF,EAAQqF,OAAO5G,aAAa,YACjDlE,UAASG,iBAAiB,YAAY0K,GAAclI,UAAUC,IAAI,SAElE,IAAM2C,GAAU/F,KAAKU,MAAM2K,GAAchF,EAErCrG,MAAKK,UACPL,KAAK2G,gBAAgBZ,IACD,IAAXqF,GAETzH,WAAW,WACT3D,KAAK6K,SAAS5E,GAAS,IACtBjG,KAAKM,iBAQZN,KAAKsK,eAAiB,SAAAxC,OACH9F,KAAb8F,IACFA,EAAW,MAGI,OAAbA,GAA+C,OAA1B9H,KAAKG,iBAC5B2H,EAAW,EACW,OAAbA,GAA+C,OAA1B9H,KAAKG,mBACnC2H,EAAW9H,KAAKG,kBAGHK,SAASgD,cAAc,oBAGpChD,SAASgD,cAAc,mBAAmBL,UAAUE,OAAO,UAG7D7C,SAASG,iBAAiB,YAAYmH,GAAU3E,UAAUC,IAAI,UAE9D5C,SAASgD,cAAc,SAASL,UAAUE,OAAO,YACjD7C,SAASgD,cAAc,SAASL,UAAUE,OAAO,YAEhC,IAAbyE,GACFtH,SAASgD,cAAc,SAASL,UAAUC,IAAI,YAG5C0E,IAAa9H,KAAKU,MAAM4B,OAAS,GACnC9B,SAASgD,cAAc,SAASL,UAAUC,IAAI,aAQlDpD,KAAKmL,SAAW,SAAAC,GAKd,GAJe,OAAXA,IACFA,GAAS,GAGPpL,KAAKG,iBAAmB,EAAIH,KAAKU,MAAM4B,QAAUtC,KAAKK,UAAW,CACnE,GAAM8K,GAAWnL,KAAKU,MAAMV,KAAKG,iBAAmB,GAAGkG,EAEvD,OADArG,MAAK2G,gBAAgBwE,IACd,EAMT,MALWnL,MAAKG,iBAAmB,EAAIH,KAAKU,MAAM4B,SAAqB,IAAX8I,GAC1DzH,WAAW,WACT3D,KAAKmL,UAAS,IACbnL,KAAKM,iBAEH,GAOTN,KAAKsH,SAAW,SAAA8D,GAKd,GAJe,OAAXA,IACFA,GAAS,GAGPpL,KAAKG,iBAAmB,GAAK,GAAKH,KAAKK,UAAW,CACpD,GAAMiH,GAAWtH,KAAKU,MAAMV,KAAKG,iBAAmB,GAAGkG,EAEvD,OADArG,MAAK2G,gBAAgBW,IACd,EAMT,MALWtH,MAAKG,iBAAmB,GAAK,IAAgB,IAAXiL,GAC3CzH,WAAW,WACT3D,KAAKsH,UAAS,IACbtH,KAAKM,iBAEH,GAUTN,KAAKqF,eAAiB,WACpB7E,SAAS+K,UAAY,SAAUC,GACxBA,IACHA,EAAQtJ,OAAOsJ,MAGjB,IAAIC,GAAOD,EAAME,OAMjB,QAJIF,EAAMG,UAAqB,IAATF,IACpBA,EAAOD,EAAMG,UAGPF,GACN,IAAK,IACHD,EAAMI,iBACN5L,KAAKsH,UACL,MACF,KAAK,IAIL,IAAK,IACHkE,EAAMI,iBACN5L,KAAKmL,UACL,MACF,KAAK,IACHK,EAAMI,iBACN5L,KAAKsH,UACL,MACF,KAAK,IACHkE,EAAMI,iBACN5L,KAAKmL,cAUbnL,KAAKyF,kBAAoB,WACvBjF,SAAS+K,UAAY,MAMvBvL,KAAKsF,eAAiB,WACpB,GAAMuG,GAAU3J,MAEZ2J,GAAQ/F,kBACV+F,EAAQ/F,iBAAiB,aAAc9F,KAAK8L,mBAAmB,GAE/DD,EAAQ/F,iBAAiB,QAAS9F,KAAK8L,mBAAmB,IAE1DD,EAAQnF,YAAY,eAAgB1G,KAAK8L,oBAO7C9L,KAAK0F,kBAAoB,WACvB,GAAMmG,GAAU3J,MAEZ2J,GAAQ/F,kBACV+F,EAAQX,oBAAoB,aAAclL,KAAK8L,mBAAmB,GAElED,EAAQX,oBAAoB,QAASlL,KAAK8L,mBAAmB,IAE7DD,EAAQE,YAAY,eAAgB/L,KAAK8L,oBAU7C9L,KAAK8L,kBAAoB,SAAAE,GA6BvB,QAASC,GAAWC,EAAUC,GAM5B,IAAK,GALDC,GAAM,EAGJC,EAAeH,EAASI,MAAMtE,KAAKuE,IAAIL,EAAS5J,OAAS6J,EAAQ,IAE9DjE,EAAI,EAAGA,EAAImE,EAAa/J,OAAQ4F,IACvCkE,GAAOC,EAAanE,EAEtB,OAAOF,MAAKwE,KAAKJ,EAAMD,GArCzBnM,KAAK4L,eAAeI,EAEpB,IAAMS,IAAU,GAAI3L,OAAOC,SAG3BiL,GAAI9J,OAAOsJ,OAASQ,GAAKA,EAAEU,aAE3B,IAAMxC,GAAQ8B,EAAEW,aAAeX,EAAEY,SAAWZ,EAAEa,OACxCC,EAAQ9E,KAAKuE,KAAK,EAAGvE,KAAK+E,IAAI,EAAG7C,GAGnClK,MAAKgB,cAAcsB,OAAS,KAC9BtC,KAAKgB,cAAcgM,QAIrBhN,KAAKgB,cAAciM,KAAKjF,KAAKC,IAAIiC,GAEjC,IAAMgD,GAAWT,EAAUzM,KAAKa,QAsBhC,IArBAb,KAAKa,SAAW4L,EAIZS,EAAW,MAEblN,KAAKgB,kBAeHhB,KAAKK,UAAW,CACC4L,EAAWjM,KAAKgB,cAAe,KAC5BiL,EAAWjM,KAAKgB,cAAe,MAI/C8L,EAAQ,EACV9M,KAAKmN,UAAU,QAEfnN,KAAKmN,UAAU,OAKrB,OAAO,GAOTnN,KAAKmN,UAAY,SAAAC,GACF,SAATA,EACFpN,KAAKmL,WAELnL,KAAKsH,YAWTtH,KAAKgG,QAAU,WAEb,MADc9D,QAAOmC,SAASmC,KAAK6G,QAAQ,IAAK,IAAIC,MAAM,KAC7C,IAQftN,KAAK+C,SAAW,SAACkD,EAAS1C,GACpB0C,IAAYjG,KAAKuN,SAAStH,EAAS1C,IACrC0C,EAAQ9C,UAAUC,IAAIG,IAS1BvD,KAAKgD,YAAc,SAACiD,EAAS1C,GACvB0C,GAAWjG,KAAKuN,SAAStH,EAAS1C,IACpC0C,EAAQ9C,UAAUE,OAAOE,IAU7BvD,KAAKuN,SAAW,SAACtH,EAAS1C,GACxB,MAAO0C,GAAQ9C,UAAUqK,SAASjK,IAQpCvD,KAAKmI,gBAAkB,SAAAlC,GACrB,GAAIwH,OAAA,EAQJ,OANA3J,OAAMC,UAAUnB,QAAQoB,KAAKhE,KAAKU,MAAO,SAACU,EAAI8G,GACxC9G,IAAO6E,IACTwH,EAAQvF,KAILuF,GAQTzN,KAAKyC,WAAa,SAAAE,GAKhB,GAHAA,EAAIA,GAAKT,OAGY,OAAjBS,EAAE+K,WACJ,OAAQ/K,EAAGA,EAAE+K,WAAYhL,EAAGC,EAAEgL,YAIhC,IAAMC,GAAIjL,EAAEnC,QACZ,OAA4B,eAAxBA,SAASqN,YACHlL,EAAGiL,EAAElG,gBAAgBoG,YAC3BpL,EAAGkL,EAAElG,gBAAgBqG,eAIjBpL,EAAGiL,EAAE/L,KAAKiM,YAAapL,EAAGkL,EAAE/L,KAAKkM,eAS3C/N,KAAK6F,SAAW,SAACmI,EAAMC,EAAMC,GAC3B,GAAIC,OAAA,EACJ,OAAO,YACL,GAAMC,GAAUC,KACVC,EAAOC,UACPC,EAAQ,WACZL,EAAU,KACLD,GACHF,EAAKS,MAAML,EAASE,IAGlBI,EAAUR,IAAcC,CAC9BQ,cAAaR,GACbA,EAAUxK,WAAW6K,EAAOP,GACxBS,GACFV,EAAKS,MAAML,EAASE,KAS1BtO,KAAK4L,eAAiB,SAAAJ,GAChBA,EAAMI,eACRJ,EAAMI,iBAENJ,EAAMoD,aAAc,GASxB5O,KAAK0I,cAAgB,SAACzC,EAASoC,GAC7BrI,KAAKuI,IAAItC,GACP4I,oBAAqBxG,EACrByG,iBAAkBzG,EAClB0G,gBAAiB1G,EACjBzG,UAAWyG,KASfrI,KAAKuI,IAAM,SAACnH,EAAI4N,GACd,GAAIC,OAAA,EACJ,KAAKA,IAAOD,GACNE,OAAOnL,UAAUoL,eAAenL,KAAKgL,EAAOC,IAClC,OAARA,IACF7N,EAAGa,MAAMgN,GAAOD,EAAMC,GAI5B,OAAO7N,IAOTZ,SAASsF,iBAAiB,mBAAoB,WAC5C9F,KAAKkB,WAAalB,KAAKmB,YAEvBnB,KAAK4D,iBACL5D,KAAKsE,eAELpC,OAAO4D,iBAAiB,SAAU,WAChC9F,KAAK4D,mBAGP5D,KAAKiF,mBAOP/C,OAAOkN,OAAS,WACdpP,KAAK0D,cACL1D,KAAK4D,kBAOFyL,OAAOtL,UAAUoG,WACpBkF,OAAOtL,UAAUoG,SAAW,SAAUmF,EAAQC,GAK5C,MAJqB,gBAAVA,KACTA,EAAQ,KAGNA,EAAQD,EAAOhN,OAAS+L,KAAK/L,UAIO,IAAjC+L,KAAKrF,QAAQsG,EAAQC","file":"main-min.js","sourcesContent":["/* ==========================================================================\n  Namespace\n   ========================================================================== */\n\nconst nine = {\n  sticky: false,\n  fullscreen: false,\n  currentPageIndex: null,\n  currentPage: null,\n  canScroll: true,\n  scrollDuration: 750,\n  scrollContainer: document.getElementById('fullpage'),\n  pages: document.querySelectorAll('.section'),\n  scrollDirection: null,\n  prevTime: new Date().getTime(),\n  scrollHistory: [],\n  fullScreenEnableFrom: 768,\n  supports3d: false\n};\n\n/* ==========================================================================\n  Support Checks & Enablers\n   ========================================================================== */\n\n/**\n* support3d - Checks for browser support of 3d transforms\n*\n* @returns {boolean}\n*\n* http://stackoverflow.com/questions/5661671/detecting-transform-translate3d-support\n*/\nnine.support3d = () => {\n  const el = document.createElement('p');\n  let has3d;\n  const transforms = {\n    webkitTransform: '-webkit-transform',\n    OTransform: '-o-transform',\n    msTransform: '-ms-transform',\n    MozTransform: '-moz-transform',\n    transform: 'transform'\n  };\n\n  // Add it to the body to get the computed style.\n  document.body.insertBefore(el, null);\n\n  for (const t in transforms) {\n    if (el.style[t] !== undefined) {\n      el.style[t] = 'translate3d(1px,1px,1px)';\n      has3d = window.getComputedStyle(el).getPropertyValue(transforms[t]);\n    }\n  }\n\n  document.body.removeChild(el);\n\n  return (has3d !== undefined && has3d.length > 0 && has3d !== 'none');\n};\n\n/**\n * checkFullscreen - Checks if window height is greater than any section.\n *\n * @returns {boolean}\n */\nnine.checkFullscreen = () => {\n  let fullscreen = true;\n\n  const windowHeight = nine.windowSize().h;\n  const windowWidth = nine.windowSize().w;\n\n  if (windowWidth >= nine.fullScreenEnableFrom) {\n    // If any section is longer the window height disable fullscreen\n    nine.pages.forEach(el => {\n      if (el.offsetHeight > windowHeight) {\n        fullscreen = false;\n      }\n    });\n  } else {\n    fullscreen = false;\n  }\n\n  return fullscreen;\n};\n\n/**\n * enableFullscreen - Adds CSS classes required for fullscreen supports3\n */\nnine.enableFullscreen = () => {\n  if (nine.checkFullscreen()) {\n    nine.fullscreen = true;\n    nine.addClass(document.body, 'fullscreen');\n\n    if (nine.supports3d === false) {\n      nine.addClass(document.body, 'no-css3');\n    }\n  } else {\n    nine.fullscreen = false;\n    nine.removeClass(document.body, 'fullscreen');\n    nine.removeClass(document.body, 'no-css3');\n  }\n};\n\n/**\n * checkSticky - Checks if browser supports CSS property position:sticky\n *\n * @returns {boolean}\n */\nnine.checkSticky = () => {\n  return false;\n  // const el = document.createElement('a');\n  // const mStyle = el.style;\n  //\n  // mStyle.cssText = 'position:sticky;position:-webkit-sticky;position:-ms-sticky;';\n  // const sticky = mStyle.position.indexOf('sticky') !== -1;\n  //\n  // return sticky;\n};\n\n/**\n * enableSticky - Adds CSS classes required for position: sticky to be used.\n *\n * @returns {boolean}\n */\nnine.enableSticky = () => {\n  if (nine.checkSticky() && nine.checkFullscreen()) {\n    nine.sticky = true;\n    nine.fullscreen = true;\n    document.body.classList.add('sticky-enabled');\n  } else {\n    nine.sticky = false;\n    document.body.classList.remove('sticky-enabled');\n  }\n};\n\n/* ==========================================================================\n  Animations\n   ========================================================================== */\n\n/**\n * changeHeaderClass - Replaces current header classes with new className\n *                     for color chnage animation\n * @param {String} className Name of class to be added to header element\n */\nnine.changeHeaderClass = className => {\n  document.querySelector('.header').setAttribute('class', `header ${className}`);\n};\n\n/**\n * [animateLoad description]\n * @returns {[type]}\n */\nnine.animateLoad = () => {\n  window.setTimeout(() => {\n    document.body.classList.add('faded-in');\n    nine.masonaryHeight();\n\n    window.setTimeout(() => {\n      let hidden = document.querySelectorAll('.hide-left');\n      Array.prototype.forEach.call(hidden, el => {\n        el.classList.remove('hide-left');\n      });\n\n      hidden = document.querySelectorAll('.hide-right');\n      Array.prototype.forEach.call(hidden, el => {\n        el.classList.remove('hide-right');\n      });\n\n      hidden = document.querySelectorAll('.background-hide');\n      Array.prototype.forEach.call(hidden, el => {\n        el.classList.remove('background-hide');\n      });\n    }, 1000);\n  }, 1000);\n};\n\n// nine.animatePortrait = () => {\n//   const portrait = document.querySelector('.portrait .faded');\n//\n//   if (portrait) {\n//     nine.scrollContainer.addEventListener('scroll', () => {\n//       nine.portraitChange();\n//     });\n//   }\n// };\n//\n// nine.portraitChange = () => {\n//   const page = document.getElementById('about');\n//   let offsetTop = page.offsetTop;\n//   let startPoint = 0.98;\n//\n//   const portrait = document.querySelector('.portrait .faded');\n//   const scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n//\n//   if (nine.windowSize().w > 1280) {\n//     startPoint = 0.5;\n//   } else if (nine.windowSize().w < 1024) {\n//     offsetTop = page.offsetHeight + document.getElementById('intro').offsetHeight - portrait.offsetHeight;\n//   }\n//\n//   if (scrollPosition > offsetTop * startPoint) {\n//     if (portrait.style.opacity === 0) {\n//       portrait.style.opacity = 1;\n//     }\n//   } else if (portrait.style.opacity === 1) {\n//     portrait.style.opacity = 0;\n//   }\n// };\n\n/**\n * pageTransisition - Chnages background color, fades out body and redirects to href\n * @param {String} href\n * @param {String} bg Background color\n */\nnine.pageTransisition = (href, bg) => {\n  if (!bg) {\n    bg = '#E6E6E4';\n  }\n\n  document.body.style.backgroundColor = bg;\n  document.body.classList.add('faded-out');\n\n  setTimeout(() => {\n    window.location.href = href;\n  }, 600);\n};\n\n/**\n * animateLinks - Gets all anchor elements and adds a call to pageTransisition() on click\n */\nnine.animateLinks = () => {\n  const anchorElements = document.getElementsByTagName('a');\n  Array.prototype.forEach.call(anchorElements, el => {\n    el.onclick = () => {\n      nine.pageTransisition(this.href, el.getAttribute('data-bg'));\n      return false;\n    };\n  });\n};\n\n/**\n * masonaryHeight - Calculates the correct height of the masonary element\n *                  for flex-box based masonary\n */\nnine.masonaryHeight = () => {\n  const masonary = document.querySelector('.masonary');\n  let lheight = 0;\n  let rheight = 0;\n\n  if (masonary) {\n    if (nine.windowSize().w >= 1024) {\n      const lblocks = document.querySelectorAll('.block.left');\n      const rblocks = document.querySelectorAll('.block.right');\n\n      Array.prototype.forEach.call(lblocks, el => {\n        lheight += el.offsetHeight;\n      });\n\n      Array.prototype.forEach.call(rblocks, el => {\n        rheight += el.offsetHeight;\n      });\n\n      let height;\n\n      if (lheight >= rheight) {\n        height = lheight;\n      } else {\n        height = rheight + 200;\n      }\n\n      height += 1;\n      masonary.style.height = height + 'px';\n    } else {\n      masonary.style.height = 'auto';\n    }\n  }\n};\n\n/* ==========================================================================\n  Fullscreen\n   ========================================================================== */\n\n/**\n * fullscreenMode - Setups fullscreen slideshow\n * @param   {Boolean} debounced Has be called after being debounced?\n */\nnine.fullscreenMode = debounced => {\n  if (nine.checkFullscreen() && nine.fullscreen === false) {\n    nine.enableFullscreen();\n    nine.enableSticky();\n    nine.hashChangeLisener();\n    nine.addFullscreenNav();\n    nine.addKeyboardNav();\n    nine.addScrollInput();\n    nine.setCurrentPage();\n  } else if (nine.checkFullscreen() === false && nine.fullscreen === true) { // Used to be on but now can't be so disable\n    nine.enableFullscreen(); // Will toggle off due to failing test\n    nine.enableSticky(); // Will toggle off due to failing fullscreen test\n    nine.removeFullscreenNav();\n    nine.removeKeyboardNav();\n    nine.removeScrollInput();\n  }\n\n  if (debounced) {\n    nine.resetPosition();\n  } else {\n    const fullscreenModeDebounced = nine.debounce(() => {\n      nine.fullscreenMode(true);\n    }, 250);\n    window.addEventListener('resize', fullscreenModeDebounced);\n  }\n};\n\n/* ==========================================================================\n   Scrolling\n   ========================================================================== */\n\n/**\n * setCurrentPage - Based on hash sets the fullscreen slideshow to the correct page.\n */\nnine.setCurrentPage = () => {\n  const section = nine.getHash();\n\n  if (section) {\n    const element = document.getElementById(section);\n\n    if (element) {\n      nine.updateCurrent(element);\n      nine.scrollStart(element); // Simulate start of scroll to set all calsses correctly.\n      // nine.scrollToSection(element.id); // Make sure we are definley at the correct section.\n      nine.silentScrollToSection(element.id);\n    }\n  } else {\n    nine.updateCurrent(document.querySelectorAll('.section')[0]);\n  }\n};\n\n/**\n * updateHash - Adds a hash to url\n * @param {String} url The value the hash should be updated to.\n */\nnine.updateHash = url => {\n  window.location.hash = url;\n};\n\n/**\n * hashChangeLisener - Adds event listeners for hash change calling hashChangeHandler()\n */\nnine.hashChangeLisener = () => {\n  if (document.addEventListener) {\n    window.addEventListener('hashchange', nine.hashChangeHandler, false); // IE9, Chrome, Safari, Oper\n  } else {\n    window.attachEvent('onhashchange', nine.hashChangeHandler); // IE 6/7/8\n  }\n};\n\n/**\n * hashChangeHandler - Processes hash changes\n */\nnine.hashChangeHandler = () => {\n  const section = nine.getHash();\n\n  if (section && section !== nine.currentPage) {\n    nine.scrollToSection(section);\n  }\n};\n\n/**\n * scrollToSection - Scorlls slideshow to the section\n * @param {String}  elementId Id of the element to be scrolled to\n * @param {Integer} offset   Pixel offset that needs to be taken into account\n */\nnine.scrollToSection = (elementId, offset) => {\n  const element = document.getElementById(elementId);\n\n  if (element === null) {\n    return;\n  } // No element\n\n  // If there is a gap between slides increase the duration by the gap.\n  // var gap = Math.abs(nine.currentPageIndex - nine.getSectionIndex(element));\n  // var duration = nine.scrollDuration * gap;\n  const duration = nine.scrollDuration;\n\n  const destiny = nine.calculateDestiny(element, offset);\n\n  if (nine.supports3d) {\n    nine.translateScroll(destiny, element, duration);\n  } else {\n    nine.animateScroll(destiny, element, duration);\n  }\n};\n\n/**\n * silentScrollToSection - Scrolls to section with a duration of 0 to quick jump.\n * @param {String}  elementId ID of the element to be scrolled to\n * @param {Integer} offset    Pixel offset that needs to be taken into account\n */\nnine.silentScrollToSection = (elementId, offset) => {\n  const element = document.getElementById(elementId);\n\n  if (element === null) {\n    return;\n  } // No element\n\n  // If there is a gap between slides increase the duration by the gap.\n  // var gap = Math.abs(nine.currentPageIndex - nine.getSectionIndex(element));\n  // var duration = nine.scrollDuration * gap;\n  const duration = 0;\n\n  const destiny = nine.calculateDestiny(element, offset);\n\n  if (nine.supports3d) {\n    nine.translateScroll(destiny, element, duration);\n  } else {\n    nine.animateScroll(destiny, element, duration);\n  }\n};\n\n/**\n * calculateOffset - If user has scrolled half way onto a section, calulate offset\n *                   required to get to next slide. Only needed if positioon: sticky being used\n * @returns {Integer} The offset in pixels.\n */\nnine.calculateOffset = () => {\n  let offset = 0;\n\n  // If user has manuall scrolled part way onto next one there will be an offset to account for.\n  if (nine.sticky) {\n    if (nine.currentPageIndex + 1 < nine.pages.length) {\n      const nextPageOffset = document.getElementById(nine.pages[nine.currentPageIndex + 1].id).offsetTop;\n      let prevPage;\n\n      if (nine.currentPageIndex - 1 >= 0) {\n        prevPage = nine.pages[nine.currentPageIndex - 1].id;\n      } else {\n        prevPage = nine.pages[nine.currentPageIndex].id;\n      }\n\n      const prevPageEl = document.getElementById(prevPage);\n      const prevPageOffsetBottom = prevPageEl.offsetTop + prevPageEl.offsetHeight;\n\n      if (nextPageOffset !== prevPageOffsetBottom) {\n        offset = prevPageOffsetBottom - nextPageOffset;\n      }\n    } else {\n      const scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n      const currentPageOffset = document.getElementById(nine.pages[nine.currentPageIndex].id).offsetTop;\n\n      if (scrollPosition !== currentPageOffset) {\n        offset = scrollPosition - currentPageOffset;\n      }\n    }\n    return offset;\n  }\n  return 0;\n};\n\n/**\n * calculateGap - If there is slides between the current and target there is a\n *                gap that needs calculating and offseting\n * @param   {Integer} newIndex The index of the new slide\n * @param   {Object}  element  The element being traveled to\n * @param   {Integer} offset   Any currently caclulated offset\n * @returns {Integer} New offset\n */\nnine.calculateGap = (newIndex, element, offset) => {\n  const gap = Math.abs(nine.currentPageIndex - newIndex) - 1;\n\n  for (let i = 1; i <= gap; i++) {\n    offset += element.offsetHeight;\n  }\n\n  offset += nine.calculateOffset();\n\n  return offset;\n};\n\n/**\n * nine.calculateDestiny - Works out direction and depending on position: sticky and corrects offset.\n * @param   {Object} element The element to travel to\n * @param   {Integer} offset  Any existing offset\n * @returns {Integer} New offset\n */\nnine.calculateDestiny = (element, offset) => {\n  let destiny;\n\n  if (typeof offset === 'undefined') {\n    offset = 0;\n  }\n\n  const newIndex = nine.getSectionIndex(element);\n  if (newIndex > nine.currentPageIndex) {\n    nine.scrollDirection = 'down';\n  } else if (newIndex < nine.currentPageIndex) {\n    nine.scrollDirection = 'up';\n    if (nine.sticky) {\n      offset = nine.calculateGap(newIndex, element, offset);\n    }\n  }\n\n  // Calculate the pixel position of the element, using offset if required\n  if (nine.scrollDirection === 'up' && nine.sticky === true) {\n    destiny = element.offsetTop - element.offsetHeight - offset;\n  } else {\n    destiny = element.offsetTop - offset;\n  }\n\n  return destiny;\n};\n\n/**\n * translateScroll - Scroll Page using CSS3 transform and translate\n * @param {Integer} endLocation The location to scroll to in pixels\n * @param {Object}  element     The element we are scrolling to\n * @param {Integer} duration    How long in ms should we take to scroll\n */\nnine.translateScroll = (endLocation, element, duration) => {\n  const translate3d = 'translate3d(0px, -' + endLocation + 'px, 0px)';\n\n  if (duration > 0) {\n    const transition = 'all ' + duration + 'ms ease';\n\n    nine.removeClass(nine.scrollContainer, 'notransition');\n\n    nine.css(nine.scrollContainer, {\n      '-webkit-transition': transition,\n      transition\n    });\n\n    nine.css(document.querySelector('.portrait'), {\n      '-webkit-transition': transition,\n      transition\n    });\n  } else {\n    nine.addClass(nine.scrollContainer, 'notransition');\n  }\n\n  nine.scrollStart(element);\n  nine.canScroll = false;\n\n  nine.translatePortrait(endLocation, duration);\n  nine.setTransforms(nine.scrollContainer, translate3d);\n\n  setTimeout(() => {\n    nine.canScroll = true;\n    nine.scrollEnd(element);\n  }, duration);\n\n  // Syncronously removing the class after the animation has been applied.\n  setTimeout(() => {\n    nine.removeClass(nine.scrollContainer, 'notransition');\n  }, 10);\n};\n\n/**\n * translatePortrait - Move the portrait element along with the translate so it appears fixed.\n * @param   {Integer} endLocation The location to scroll to in pixels\n */\nnine.translatePortrait = endLocation => {\n  const portrait = document.querySelector('.portrait');\n\n  if (navigator.userAgent.toLowerCase().indexOf('firefox') > -1) {\n    const top = endLocation + 'px';\n    nine.css(portrait, {top});\n  } else {\n    const portraitPosition = 'translate3d(0px, ' + endLocation + 'px, 0px)';\n    nine.setTransforms(portrait, portraitPosition);\n  }\n};\n\n/**\n * animateScroll - Scroll page with a jQuery-like scroll animation\n * @param {Integer} endLocation The location to scroll to in pixels\n * @param {Object}  element     The element we are scrolling to\n * @param {Integer} duration    How long in ms should we take to scroll\n */\nnine.animateScroll = (endLocation, element, duration) => {\n  nine.canScroll = false;\n\n  if (endLocation === null) {\n    return;\n  }\n\n  const startLocation = nine.getScrolledPosition();\n\n  if (duration === null) {\n    duration = nine.scrollDuration;\n  }\n\n  // Calculate how far to scroll\n  const distance = endLocation - startLocation;\n\n  let runAnimation;\n\n  // Set the animation variables to 0/undefined.\n  let timeLapsed = 0;\n  let percentage;\n  let position;\n  const easing = function (progress) {\n    return progress < 0.5 ? 4 * progress * progress * progress : ((progress - 1) * ((2 * progress) - 2) * ((2 * progress) - 2)) + 1; // Acceleration until halfway, then deceleration\n  };\n\n  function stopAnimationIfRequired(pos) {\n    if (pos === endLocation) {\n      window.cancelAnimationFrame(runAnimation);\n      finishedScroll();\n    }\n  }\n\n  function finishedScroll() {\n    // Remove active status from all\n    nine.canScroll = true;\n    nine.scrollDirection = null;\n    nine.scrollEnd(element);\n  }\n\n  const animate = function () {\n    timeLapsed += 16;\n    percentage = timeLapsed / duration;\n    if (percentage > 1) {\n      percentage = 1;\n      position = endLocation;\n    } else {\n      position = (startLocation + distance) * easing(percentage);\n    }\n    nine.scrollContainer.scrollTop = position;\n    runAnimation = window.requestAnimationFrame(animate);\n    stopAnimationIfRequired(position);\n  };\n\n  nine.scrollStart(element);\n\n  // Loop the animation function\n  runAnimation = window.requestAnimationFrame(animate);\n};\n\n/**\n * scrollStart - Called at scroll start and setups css classes for active sections, headers, etc\n * @param {Object} element Element we are scrolling to\n */\nnine.scrollStart = element => {\n  // Change header class - duration is same as slide duration for natural feel.\n  if (element.classList.value.includes('light')) {\n    nine.changeHeaderClass('dark');\n  } else {\n    nine.changeHeaderClass('light');\n  }\n\n  // Change menu colours dependent on slide\n  const header = document.querySelector('.header');\n  if (element.id === 'services') {\n    nine.addClass(header, 'menu-alt');\n  } else {\n    nine.removeClass(header, 'menu-alt');\n  }\n\n  // Delay until part way through scroll to chnages make feel smooth.\n  setTimeout(() => {\n    // Remove other active classes\n    const activePages = document.querySelector('.section.active');\n    if (activePages) {\n      nine.removeClass(activePages, 'active');\n      nine.removeClass(document.body, activePages.id + '-active');\n    }\n    nine.addClass(element, 'active');\n    nine.updateControls(nine.getSectionIndex(element));\n  }, nine.scrollDuration * 0.33);\n};\n\n /**\n  * scrollEnd - Called at scroll end aupdates hash, current page, controls, etc.\n  * @param {Object} element Element we are scrolling to\n  */\nnine.scrollEnd = element => {\n  if (element === null) {\n    return;\n  } // No element\n\n  // Update to new state.\n  nine.updateHash(element.id);\n  nine.updateCurrent(element);\n  nine.addClass(document.body, element.id + '-active');\n  nine.updateControls();\n};\n\n/**\n * updateCurrent - Updates globals to current values\n * @param {Object} element Element we are scrolling to\n */\nnine.updateCurrent = element => {\n  nine.currentPage = element.id;\n  nine.currentPageIndex = nine.getSectionIndex(element);\n};\n\n/**\n * getScrolledPosition - Get the current Scroll position of the browser\n * @returns {Integer} ScrollTop in pixels\n */\nnine.getScrolledPosition = () => {\n  return document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n};\n\n/**\n * resetPosition - Resets fullscreen to correct position after browser resize event\n */\nnine.resetPosition = () => {\n  console.log('here');\n  console.log(nine.fullscreen);\n  if (nine.fullscreen === true) {\n    let section;\n    let destiny;\n\n    console.log('1');\n\n    if (nine.currentPage === null) {\n      section = document.querySelectorAll('.sections')[0];\n      nine.currentPage = section.id;\n      nine.currentPageIndex = 0;\n    } else {\n      section = document.getElementById(nine.currentPage);\n    }\n\n    const offset = nine.calculateOffset();\n\n    if (nine.sticky && offset > 0) {\n      destiny = section.offsetTop - offset;\n    } else {\n      destiny = section.offsetTop;\n    }\n\n    if (nine.supports3d) {\n      nine.translateScroll(destiny, section, 0);\n    } else {\n      nine.animateScroll(destiny, section, 0);\n    }\n  }\n};\n\n/* ==========================================================================\n   Controls\n   ==========================================================================\n\n/**\n * addFullscreenNav - adds dots and next & prev controls to site with event handlers\n */\nnine.addFullscreenNav = () => {\n  const controls = document.querySelector('.controls');\n\n  if (controls) {\n    controls.classList.add('on');\n\n    const nav = document.querySelector('.dots');\n\n    if (nav) {\n      Array.prototype.forEach.call(nine.pages, (el, i) => {\n        const dot = document.createElement('li');\n        dot.setAttribute('data-page', i);\n        nav.appendChild(dot);\n        dot.addEventListener('click', element => nine.dotClick(element));\n      });\n\n      document.querySelector('.dots li').classList.add('active');\n\n      document.querySelector('.next').addEventListener('click', nine.arrowNextClickHandler);\n      document.querySelector('.prev').addEventListener('click', nine.arrowPrevClickHandler);\n\n      nine.updateControls();\n    }\n  }\n};\n\n/**\n * removeFullscreenNav - remove dots and next & prev controls to site and event handlers\n */\nnine.removeFullscreenNav = () => {\n  const controls = document.querySelector('.controls');\n\n  if (controls) {\n    controls.classList.remove('on');\n\n    const nav = document.querySelector('.dots');\n    const dots = document.querySelectorAll('.dots li');\n\n    if (nav && dots) {\n      Array.prototype.forEach.call(dots, el => {\n        el.parentNode.removeChild(el);\n      });\n\n      document.querySelector('.next').removeEventListener('click', nine.arrowNextClickHandler);\n      document.querySelector('.prev').removeEventListener('click', nine.arrowPrevClickHandler);\n    }\n  }\n};\n\n/**\n * arrowNextClickHandler\n */\nnine.arrowNextClickHandler = () => {\n  nine.nextPage();\n};\n\n/**\n * arrowPrevClickHandler\n */\nnine.arrowPrevClickHandler = () => {\n  nine.prevPage();\n};\n\n/**\n * dotClick - Handler for dot clicks\n * @param   {Object} element\n * @param   {Boolean} repeat True if called recurvisley\n */\nnine.dotClick = (element, repeat) => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  document.querySelector('.dots li.active').classList.remove('active');\n  const newPageIndex = element.target.getAttribute('data-page');\n  document.querySelectorAll('.dots li')[newPageIndex].classList.add('active');\n\n  const section = nine.pages[newPageIndex].id;\n\n  if (nine.canScroll) {\n    nine.scrollToSection(section);\n  } else if (repeat === false) {\n    // Is currently scrolling. Try again after duration.\n    setTimeout(() => {\n      nine.dotClick(element, true);\n    }, nine.scrollDuration);\n  }\n};\n\n/**\n * updateControls - Update controls to new values\n * @param   {Integer} newIndex Index of the new slide in slides array\n */\nnine.updateControls = newIndex => {\n  if (newIndex === undefined) {\n    newIndex = null;\n  }\n\n  if (newIndex === null && nine.currentPageIndex === null) {\n    newIndex = 0;\n  } else if (newIndex === null && nine.currentPageIndex !== null) {\n    newIndex = nine.currentPageIndex;\n  }\n\n  const active = document.querySelector('.dots li.active');\n\n  if (active) {\n    document.querySelector('.dots li.active').classList.remove('active');\n  }\n\n  document.querySelectorAll('.dots li')[newIndex].classList.add('active');\n\n  document.querySelector('.next').classList.remove('disabled');\n  document.querySelector('.prev').classList.remove('disabled');\n\n  if (newIndex === 0) {\n    document.querySelector('.prev').classList.add('disabled');\n  }\n\n  if (newIndex === nine.pages.length - 1) {\n    document.querySelector('.next').classList.add('disabled');\n  }\n};\n\n/**\n * nextPage - Navigates to next page\n * @param   {Boolean} repeat True if called recurvisley\n */\nnine.nextPage = repeat => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex + 1 < nine.pages.length && nine.canScroll) {\n    const nextPage = nine.pages[nine.currentPageIndex + 1].id;\n    nine.scrollToSection(nextPage);\n    return true;\n  } else if (nine.currentPageIndex + 1 < nine.pages.length && repeat === false) {\n    setTimeout(() => {\n      nine.nextPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n};\n\n/**\n * prevPage - Navigates to prev page\n * @param   {Boolean} repeat True if called recurvisley\n */\nnine.prevPage = repeat => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex - 1 >= 0 && nine.canScroll) {\n    const prevPage = nine.pages[nine.currentPageIndex - 1].id;\n    nine.scrollToSection(prevPage);\n    return true;\n  } else if (nine.currentPageIndex - 1 >= 0 && repeat === false) {\n    setTimeout(() => {\n      nine.prevPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n};\n\n/* ==========================================================================\n  Inputs\n  ========================================================================== */\n\n/**\n * addKeyboardNav - Allow for buttons presses to navigate fullscreen slideshow\n */\nnine.addKeyboardNav = () => {\n  document.onkeydown = function (event) {\n    if (!event) {\n      event = window.event;\n    }\n\n    let code = event.keyCode;\n\n    if (event.charCode && code === 0) {\n      code = event.charCode;\n    }\n\n    switch (code) {\n      case 38: // Up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 40: // Down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 32: // Space\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 33: // Page up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 34: // Page down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      default:\n    }\n  };\n};\n\n/**\n * removeKeyboardNav - removes key press event handlers\n */\nnine.removeKeyboardNav = () => {\n  document.onkeydown = null;\n};\n\n/**\n * addScrollInput - Handle scroll input to naviagte to slides\n */\nnine.addScrollInput = () => {\n  const wrapper = window;\n\n  if (wrapper.addEventListener) {\n    wrapper.addEventListener('mousewheel', nine.mouseWheelHandler, false); // Ie9, chrome, safari, opera use mousewheel\n\n    wrapper.addEventListener('wheel', nine.mouseWheelHandler, false); // firefox\n  } else {\n    wrapper.attachEvent('onmousewheel', nine.mouseWheelHandler); // IE 6/7/8 not really supported anyway\n  }\n};\n\n/**\n * removeScrollInput - Remove scroll handling\n */\nnine.removeScrollInput = () => {\n  const wrapper = window;\n\n  if (wrapper.addEventListener) {\n    wrapper.removeEventListener('mousewheel', nine.mouseWheelHandler, false); // Ie9, chrome, safari, opera use mousewheel\n\n    wrapper.removeEventListener('wheel', nine.mouseWheelHandler, false); // Firefox\n  } else {\n    wrapper.detachEvent('onmousewheel', nine.mouseWheelHandler); // IE 6/7/8 not really supported anyway\n  }\n};\n\n/**\n * mouseWheelHandler - Process wheel events to scroll to next or prev section\n * @param   {Object} e Scroll event\n * Line 1099: https://github.com/alvarotrigo/fullPage.js/blob/master/pure%20javascript%20(Alpha)/javascript.fullPage.js\n * https://www.sitepoint.com/html5-javascript-mouse-wheel/\n */\nnine.mouseWheelHandler = e => {\n  nine.preventDefault(e); // Prevent normall scrolling\n\n  const curTime = new Date().getTime();\n\n  // Cross-browser wheel delta\n  e = window.event || e || e.originalEvent;\n\n  const value = e.wheelDelta || -e.deltaY || -e.detail;\n  const delta = Math.max(-1, Math.min(1, value));\n\n  // Limiting the array to 150 (lets not waist memory!)\n  if (nine.scrollHistory.length > 149) {\n    nine.scrollHistory.shift(); // Rmeoves first element\n  }\n\n  // Keeping record of the previous scrollings\n  nine.scrollHistory.push(Math.abs(value));\n\n  const timeDiff = curTime - nine.prevTime;\n  nine.prevTime = curTime;\n\n  // Haven't they scrolled in a while?\n  // (enough to be consider a different scrolling action to scroll another section)\n  if (timeDiff > 200) {\n    // Emptying the array, we dont care about old scrollings for our averages\n    nine.scrollHistory = [];\n  }\n\n  function getAverage(elements, number) {\n    let sum = 0;\n\n    // Taking `number` elements from the end to make the average, if there are not enought, 1\n    const lastElements = elements.slice(Math.max(elements.length - number, 1));\n\n    for (let i = 0; i < lastElements.length; i++) {\n      sum += lastElements[i];\n    }\n    return Math.ceil(sum / number);\n  }\n\n  if (nine.canScroll) {\n    const averageEnd = getAverage(nine.scrollHistory, 10);\n    const averageMiddle = getAverage(nine.scrollHistory, 70);\n    const isAccelerating = averageEnd >= averageMiddle;\n\n    if (isAccelerating) {\n      if (delta < 0) { // Scrolling down?\n        nine.scrolling('down');\n      } else { // Scrolling up?\n        nine.scrolling('up');\n      }\n    }\n  }\n\n  return false;\n};\n\n/**\n * scrolling - Calls prevPage() or nextPage() depending on scroll direction type\n * @param   {String} type\n */\nnine.scrolling = type => {\n  if (type === 'down') {\n    nine.nextPage();\n  } else {\n    nine.prevPage();\n  }\n};\n\n/* ==========================================================================\n   Helpers\n   ==========================================================================\n\n/**\n * getHash - gets current hash value\n */\nnine.getHash = () => {\n  const value = window.location.hash.replace('#', '').split('/');\n  return value[0];\n};\n\n/**\n * addClass\n * @param {Object} element\n * @param {String} className\n */\nnine.addClass = (element, className) => {\n  if (element && !nine.hasClass(element, className)) {\n    element.classList.add(className);\n  }\n};\n\n /**\n  * removeClass\n  * @param {Object} element\n  * @param {String} className\n  */\nnine.removeClass = (element, className) => {\n  if (element && nine.hasClass(element, className)) {\n    element.classList.remove(className);\n  }\n};\n\n/**\n * hasClass - Checks if element has class\n * @param   {Object}  element\n * @param   {String}  className\n * @returns {Boolean}\n */\nnine.hasClass = (element, className) => {\n  return element.classList.contains(className);\n};\n\n/**\n * getSectionIndex - Get the index of an element in the slides array\n * @param   {Object} element\n * @returns {Integer}\n */\nnine.getSectionIndex = element => {\n  let index;\n\n  Array.prototype.forEach.call(nine.pages, (el, i) => {\n    if (el === element) {\n      index = i;\n    }\n  });\n\n  return index;\n};\n\n/**\n * windowSize - Reliably gets window sizes\n * @param   {Object} w The window to use.\n * @returns {Object} {w: width, h: height}\n */\nnine.windowSize = w => {\n  // Use the specified window or the current window if no argument\n  w = w || window;\n\n  // This works for all browsers except IE8 and before\n  if (w.innerWidth !== null) {\n    return {w: w.innerWidth, h: w.innerHeight};\n  }\n\n  // For IE (or any browser) in Standards mode\n  const d = w.document;\n  if (document.compatMode === 'CSS1Compat') {\n    return {w: d.documentElement.clientWidth,\n      h: d.documentElement.clientHeight};\n  }\n\n  // For browsers in Quirks mode\n  return {w: d.body.clientWidth, h: d.body.clientHeight};\n};\n\n/**\n * debounce - Debounces actions be with a timer.\n * @param   {Object}  func      Function to be called\n * @param   {Integer} wait      How long to wasit until call\n * @param   {Boolean} immediate Call it immediately?\n */\nnine.debounce = (func, wait, immediate) => {\n  let timeout;\n  return function () {\n    const context = this;\n    const args = arguments;\n    const later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n\n/**\n * preventDefault\n * @param   {Object} event\n */\nnine.preventDefault = event => {\n  if (event.preventDefault) {\n    event.preventDefault();\n  } else {\n    event.returnValue = false;\n  }\n};\n\n/**\n * setTransforms - adds CSS treansform to an element\n * @param {Object} element\n * @param {String} translate3d\n */\nnine.setTransforms = (element, translate3d) => {\n  nine.css(element, {\n    '-webkit-transform': translate3d,\n    '-moz-transform': translate3d,\n    '-ms-transform': translate3d,\n    transform: translate3d\n  });\n};\n\n/**\n * css - add CSS to an element\n * @param {Object} el\n * @param {Object} props\n */\nnine.css = (el, props) => {\n  let key;\n  for (key in props) {\n    if (Object.prototype.hasOwnProperty.call(props, key)) {\n      if (key !== null) {\n        el.style[key] = props[key];\n      }\n    }\n  }\n  return el;\n};\n\n/* ==========================================================================\n  Document Load\n   ========================================================================== */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  nine.supports3d = nine.support3d();\n\n  nine.masonaryHeight();\n  nine.animateLinks();\n\n  window.addEventListener('resize', () => {\n    nine.masonaryHeight();\n  });\n\n  nine.fullscreenMode();\n});\n\n/* ==========================================================================\n  Window Load\n   ========================================================================== */\n\nwindow.onload = () => {\n  nine.animateLoad();\n  nine.masonaryHeight();\n};\n\n/* ==========================================================================\n    Polyfils\n   ========================================================================== */\n\nif (!String.prototype.includes) {\n  String.prototype.includes = function (search, start) {\n    if (typeof start !== 'number') {\n      start = 0;\n    }\n\n    if (start + search.length > this.length) {\n      return false;\n    }\n\n    return this.indexOf(search, start) !== -1;\n  };\n}\n"]}