{"version":3,"sources":["../main.js"],"names":["nine","sticky","fullscreen","currentPageIndex","currentPage","canScroll","scrollDuration","scrollContainer","document","getElementById","pages","querySelectorAll","scrollDirection","prevTime","Date","getTime","scrollHistory","windowHeight","String","prototype","includes","search","start","length","this","indexOf","checkFullscreen","windowSize","h","forEach","el","offsetHeight","enableFullscreen","body","classList","add","remove","checkSticky","createElement","mStyle","style","cssText","position","enableSticky","changeHeaderClass","className","querySelector","setAttribute","animateLoad","window","setTimeout","masonaryHeight","hidden","Array","call","animatePortrait","portrait","portraitChange","scrollPosition","documentElement","scrollTop","w","startPoint","offsetTop","page","opacity","addEventListener","pageTransisition","href","bg","backgroundColor","location","masonary","lheight","rheight","lblocks","rblocks","height","animateLinks","anchorElements","getElementsByTagName","onclick","getAttribute","setCurrentPage","section","getHash","element","updateCurrent","scrollStart","scrollToSection","id","updateHash","url","hash","hashChangeLisener","hashChangeHandler","attachEvent","elementId","offset","duration","destiny","calculateDestiny","animateScoll","calculateOffset","prevPage","nextPageOffset","prevPageEl","prevPageOffsetBottom","currentPageOffset","calculateGap","newIndex","gap","Math","abs","i","getSectionIndex","endLocation","stopAnimationIfRequired","pos","cancelAnimationFrame","runAnimation","finishedScroll","scrollEnd","startLocation","getScrolledPosition","percentage","distance","timeLapsed","easing","progress","animate","requestAnimationFrame","value","activePages","removeClass","addClass","updateControls","resetPosition","addFullscreenNav","controls","nav","dot","appendChild","dotClick","arrowNextClickHandler","arrowPrevClickHandler","removeFullscreenNav","dots","parentNode","removeChild","removeEventListener","nextPage","repeat","newPageIndex","target","addKeyboardNav","onkeydown","event","code","keyCode","charCode","preventDefault","removeKeyboardNav","addScrollInput","wrapper","mouseWheelHandler","removeScrollInput","detachEvent","e","getAverage","elements","number","sum","lastElements","slice","max","ceil","curTime","originalEvent","wheelDelta","deltaY","detail","delta","min","shift","push","timeDiff","scrolling","type","replace","split","hasClass","contains","index","innerWidth","innerHeight","d","compatMode","clientWidth","clientHeight","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","returnValue","fullscreenMode","debounced","fullscreenModeDebounced","onload"],"mappings":"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","file":"main-min.js","sourcesContent":["var nine = {\n  sticky: false,\n  fullscreen: false,\n  // Scolling Related\n  currentPageIndex: null,\n  currentPage: null,\n  canScroll: true,\n  scrollDuration: 750,\n  scrollContainer: document.getElementById('scroll'),\n  pages: document.querySelectorAll(\".section\"),\n  scrollDirection: null,\n  prevTime: new Date().getTime(),\n  scrollHistory: [],\n  windowHeight: null,\n};\n\n/* ==========================================================================\n    Polyfils\n   ========================================================================== */\n\nif (!String.prototype.includes) {\n   String.prototype.includes = function(search, start) {\n     if (typeof start !== 'number') {\n       start = 0;\n     }\n\n     if (start + search.length > this.length) {\n       return false;\n     } else {\n       return this.indexOf(search, start) !== -1;\n     }\n   };\n }\n\n/* ==========================================================================\n  nine.scrollSpy()\n========================================================================== */\n\n// nine.scrollSpy = () => {\n//   var sections = {};\n//   var i = 0;\n//\n//   Array.prototype.forEach.call(nine.pages, function(el, i) {\n//     sections[i] = {\n//       classes: el.className.replace('section', '').trim(),\n//       top: el.offsetTop,\n//       bottom: el.offsetTop + el.offsetHeight,\n//       height: el.offsetHeight,\n//     }\n//   });\n//\n//   nine.scrollContainer.addEventListener('scroll', function(event) {\n//\n//     var scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n//\n//     for (i in sections) {\n//       if (scrollPosition >= sections[i].top  && scrollPosition <= sections[i].bottom) {\n//         var activeSections = document.querySelector('.section.active');\n//\n//         if (activeSections) {\n//           activeSections.classList.remove('active');\n//         }\n//\n//         var currentPage = document.querySelectorAll('.section')[parseInt(i)];\n//\n//         if (currentPage) {\n//           currentPage.classList.add('active')\n//         }\n//\n//         if (nine.currentPage != i) {\n//           // TODO: rethink how things work with hash nav\n//           // Causeing browser jumping\n//           // window.location.hash=currentPage.id;\n//         }\n//\n//         if (sections[i].classes.includes('light')) {\n//           nine.changeHeaderClass('dark');\n//         } else {\n//           nine.changeHeaderClass('light');\n//         }\n//       }\n//\n//       // Count as being in next page if 25% scrolled into it.\n//       var scrollOffset = 0.75;\n//\n//       if ((scrollPosition >= sections[i].top - (sections[i].height * scrollOffset)) && scrollPosition <= sections[i].bottom) {\n//         if (nine.currentPage != i) {\n//           nine.currentPage = parseInt(i);\n//           nine.updateControls();\n//         }\n//       }\n//     }\n//   });\n// };\n\n/* ==========================================================================\n  nine.scrollTo()\n  ========================================================================== */\n//\n// nine.scrollTo = (startLocation, endLocation) => {\n//   nine.canScroll = false;\n//\n//   // Calculate how far to scroll\n//   // var startLocation = viewStart;\n//   // var endLocation = pageStart;\n//   var distance = endLocation - startLocation;\n//\n//   var runAnimation;\n//\n//   // Set the animation variables to 0/undefined.\n//   var timeLapsed = 0;\n//   var percentage, position;\n//\n//   var easing = function (progress) {\n//    return progress < 0.5 ? 4 * progress * progress * progress : (progress - 1) * (2 * progress - 2) * (2 * progress - 2) + 1; // acceleration until halfway, then deceleration\n//   };\n//\n//   function stopAnimationIfRequired(pos) {\n//    if (pos == endLocation) {\n//      cancelAnimationFrame(runAnimation);\n//      finishedScroll();\n//    }\n//   }\n//\n//   function finishedScroll() {\n//     nine.canScroll = true;\n//     nine.scrollDirection = null;\n//   }\n//\n//   var animate = function () {\n//    timeLapsed += 16;\n//    percentage = timeLapsed / nine.scrollDuration;\n//    if (percentage > 1) {\n//      percentage = 1;\n//      position = endLocation;\n//    } else {\n//      position = startLocation + distance * easing(percentage);\n//    }\n//    nine.scrollContainer.scrollTop = position;\n//    runAnimation = requestAnimationFrame(animate);\n//    stopAnimationIfRequired(position);\n//   };\n//\n//   // Loop the animation function\n//   runAnimation = requestAnimationFrame(animate);\n// }\n\n/* ==========================================================================\n  nine.scrollHandler()\n  ========================================================================== */\n//\n// // Constructor cannot be ES6 arrow\n// nine.scrollHandler = function(pageId) {\n//   var page = document.getElementById(pageId);\n//   var pageStart = page.offsetTop;\n//   nine.canScroll = true;\n//   var timeout = null;\n//\n//   nine.scrollListener = window.addEventListener('wheel', function(event) {\n//     nine.scrollStart = nine.scrollContainer.scrollTop;\n//\n//     if (timeout !== null) {\n//         event.preventDefault();\n//         return false;\n//     }\n//\n//     if (nine.canScroll) {\n//       timeout = setTimeout(function(){ timeout = null; }, nine.scrollDuration * 3);\n//\n//       var pageHeight = page.scrollHeight;\n//       var pageStopPortion = pageHeight / 2;\n//       var viewHeight = window.innerHeight;\n//\n//       var viewEnd = nine.scrollStart + viewHeight;\n//       var pageStartPart = viewEnd - pageStart;\n//       var pageEndPart = (pageStart + pageHeight) - nine.scrollStart;\n//\n//       var canJumpDown = pageStartPart >= 0;\n//       var stopJumpDown = pageStartPart > pageStopPortion;\n//\n//       var canJumpUp = pageEndPart >= 0;\n//       var stopJumpUp = pageEndPart > pageStopPortion;\n//\n//       var scrollingForward = event.deltaY > 0;\n//\n//       if (  ( scrollingForward && canJumpDown && !stopJumpDown)\n//          || (!scrollingForward && canJumpUp   && !stopJumpUp)) {\n//         event.preventDefault();\n//         nine.scrollTo(nine.scrollStart, pageStart);\n//       }\n//     } else {\n//      event.preventDefault();\n//     }\n//   });\n// }\n\n/* ==========================================================================\n  nine.scrollToPage()\n   ========================================================================== */\n//\n// nine.scrollToPage = (pageID, offset) => {\n//   // Get current scroll location and where the page starts\n//   nine.scrollStart = nine.scrollContainer.scrollTop;\n//\n//   if (typeof offset === \"undefined\") {\n//     offset = 0;\n//   }\n//\n//   var pageStart;\n//\n//   if (nine.scrollDirection === \"up\" && nine.sticky === true) {\n//     pageStart = document.getElementById(pageID).offsetTop - document.getElementById(pageID).offsetHeight - offset;\n//   } else {\n//     pageStart = document.getElementById(pageID).offsetTop - offset;\n//   }\n//\n//   nine.scrollTo(nine.scrollStart, pageStart);\n// }\n\n/* ==========================================================================\n  nine.keyboardNav()\n   ========================================================================== */\n//\n// nine.keyboardNav = () => {\n//   document.onkeydown = function(event) {\n//     if (!event) {\n//       event = window.event;\n//     }\n//\n//     var code = event.keyCode;\n//\n//     if (event.charCode && code == 0) {\n//       code = event.charCode;\n//     }\n//\n//     switch(code) {\n//       case 38: // Up\n//         event.preventDefault();\n//         nine.prevPage();\n//         break;\n//       case 40: // Down\n//         event.preventDefault();\n//         nine.nextPage();\n//       break;\n//     }\n//\n//   };\n// }\n\n/* ==========================================================================\n  nine.calculateOffset()\n   ========================================================================== */\n//\n// nine.calculateOffset = () => {\n//   var prevPage = nine.pages[nine.currentPage - 1].id;\n//   var offset = 0;\n//\n//   // If user has manuall scrolled part way onto next one there will be an offset to account for.\n//   if (nine.sticky) {\n//      if (nine.currentPage + 1 < nine.pages.length) {\n//        var nextPageOffset = document.getElementById(nine.pages[nine.currentPage + 1].id).offsetTop\n//        var prevPageEl = document.getElementById(prevPage);\n//        var prevPageOffsetBottom = prevPageEl.offsetTop + prevPageEl.offsetHeight;\n//\n//        if (nextPageOffset != prevPageOffsetBottom) {\n//          offset = prevPageOffsetBottom - nextPageOffset;\n//        }\n//      } else {\n//        var scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n//        var currentPageOffset = document.getElementById(nine.pages[nine.currentPage].id).offsetTop;\n//\n//        if (scrollPosition != currentPageOffset) {\n//          offset = scrollPosition - currentPageOffset;\n//        }\n//      }\n//      return offset;\n//    } else {\n//      return 0;\n//    }\n// };\n\n/* ==========================================================================\n  nine.nextPage()\n   ========================================================================== */\n//\n// nine.nextPage = () => {\n//   if (nine.currentPage + 1 < nine.pages.length && nine.canScroll) {\n//     nine.scrollDirection = 'down';\n//     var nextPage = nine.pages[nine.currentPage + 1].id;\n//     nine.scrollToPage(nextPage);\n//     return true;\n//   }\n//   return false;\n// }\n\n/* ==========================================================================\n  nine.prevPage()\n   ========================================================================== */\n//\n// nine.prevPage = () => {\n//   if (nine.currentPage - 1 >= 0 && nine.canScroll) {\n//     nine.scrollDirection = 'up';\n//     var prevPage = nine.pages[nine.currentPage - 1].id;\n//     nine.scrollToPage(prevPage, nine.calculateOffset());\n//     return true;\n//   }\n//   return false;\n// }\n\n\n/* ==========================================================================\n  nine.controls()\n   ========================================================================== */\n//\n// nine.controls = () => {\n//   var pageIndex = 0;\n//\n//   var dots = document.querySelector('.dots')\n//   if (dots) {\n//     Array.prototype.forEach.call(nine.pages, function(el) {\n//       var dot = document.createElement('li');\n//       dot.setAttribute('data-page', pageIndex);\n//       dots.appendChild(dot);\n//       dot.addEventListener('click', (e) => nine.dotClick(e));\n//\n//       pageIndex++;\n//     });\n//\n//     document.querySelector('.dots li').classList.add('active')\n//\n//     document.querySelector('.next').addEventListener('click', () => nine.nextPage());\n//     document.querySelector('.prev').addEventListener('click', () => nine.prevPage());\n//\n//     nine.updateControls();\n//   }\n// }\n\n/* ==========================================================================\n  nine.dotClick()\n   ========================================================================== */\n//\n// nine.dotClick = (e) => {\n//   var pageIndex = e.target.getAttribute('data-page');\n//   var pageId = nine.pages[pageIndex].id\n//   var offset = 0;\n//   if (pageIndex > nine.currentPage) {\n//     nine.scrollDirection = 'down';\n//   } else if (pageIndex < nine.currentPage) {\n//     nine.scrollDirection = 'up';\n//     if (nine.sticky) {\n//       var gap = nine.currentPage - 1 - pageIndex;\n//\n//       for (var i = 1; i <= gap; i++) {\n//         var id = nine.pages[nine.currentPage - i].id\n//\n//         offset += document.getElementById(id).offsetHeight;\n//       }\n//       offset += nine.calculateOffset();\n//     }\n//   }\n//\n//   nine.scrollToPage(pageId, offset);\n// };\n\n/* ==========================================================================\n  nine.updateControls()\n   ========================================================================== */\n//\n// nine.updateControls = () => {\n//   document.querySelector('.dots li.active').classList.remove('active');\n//   document.querySelectorAll('.dots li')[nine.currentPage].classList.add('active');\n//\n//   document.querySelector('.next').classList.remove('disabled');\n//   document.querySelector('.prev').classList.remove('disabled');\n//\n//   if (nine.currentPage == 0) {\n//     document.querySelector('.prev').classList.add('disabled');\n//   }\n//\n//   if (nine.currentPage == nine.pages.length - 1) {\n//     document.querySelector('.next').classList.add('disabled');\n//   }\n// }\n\n/* ==========================================================================\n  nine.checkFullscreen()\n   ========================================================================== */\n\nnine.checkFullscreen = () => {\n  // return false; // turn fullscreen off\n  var fullscreen = true;\n\n  var windowHeight = nine.windowSize().h;\n\n  // if any section is longer the window height disable fullscreen\n  nine.pages.forEach(function(el) {\n    if (el.offsetHeight > windowHeight) {\n      fullscreen = false;\n    }\n  });\n\n  return fullscreen;\n}\n\n/* ==========================================================================\n  enableFullscreen()\n  - Enable fullscreen mode if checkFullscreen passes\n   ========================================================================== */\n\nnine.enableFullscreen = (debounced) => {\n  if (nine.checkFullscreen()) {\n    nine.fullscreen = true;\n    document.body.classList.add(\"fullscreen\");\n    nine.windowHeight = nine.windowSize().h; // Used to help with resize\n  } else {\n    nine.fullscreen = false;\n    document.body.classList.remove(\"fullscreen\");\n    nine.windowHeight = nine.windowSize().h; // Used to help with resize\n  }\n};\n\n/* ==========================================================================\n  nine.checkSticky() - http://trialstravails.bspot.co.uk/2016/06/detecting-css-position-sticky-support.html\n   ========================================================================== */\n\nnine.checkSticky = () => {\n  // return false; // turn stick off\n  var el = document.createElement('a');\n  var mStyle = el.style;\n\n  mStyle.cssText = \"position:sticky;position:-webkit-sticky;position:-ms-sticky;\";\n  var sticky = mStyle.position.indexOf('sticky')!==-1;\n\n  var windowHeight = nine.windowSize().h;\n\n  return sticky;\n}\n\n/* ==========================================================================\n  enableSticky()\n  - Enable Sticky\n   ========================================================================== */\n\nnine.enableSticky = (debounced) => {\n  if (nine.checkSticky() && nine.checkFullscreen()) {\n    nine.sticky = true;\n    nine.fullscreen = true;\n    document.body.classList.add(\"sticky-enabled\");\n  } else {\n    nine.sticky = false;\n    document.body.classList.remove(\"sticky-enabled\");\n  }\n};\n\n/* ==========================================================================\n  nine.changeHeaderClass\n   ========================================================================== */\n\nnine.changeHeaderClass = (className) => {\n  document.querySelector('.header').setAttribute('class', `header ${className}`);\n};\n\n/* ==========================================================================\n  nine.animatation()\n   ========================================================================== */\n\nnine.animateLoad = () => {\n  window.setTimeout(() => {\n    document.body.classList.add('faded-in');\n    nine.masonaryHeight();\n\n    window.setTimeout(() => {\n      var hidden = document.querySelectorAll(\".hide-left\");\n      Array.prototype.forEach.call(hidden, function(el, i) {\n        el.classList.remove('hide-left');\n      });\n\n      var hidden = document.querySelectorAll(\".hide-down\");\n      Array.prototype.forEach.call(hidden, function(el, i) {\n        el.classList.remove('hide-down');\n      });\n    }, 1000)\n  }, 1000);\n};\n\n/* ==========================================================================\n  nine.animatePortrait()\n   ========================================================================== */\n\nnine.animatePortrait = () => {\n  var portrait = document.querySelector('.portrait .faded');\n\n  if (portrait) {\n    var page = document.getElementById('about');\n    var offsetTop = page.offsetTop;\n    var startPoint = 0.98;\n\n    function portraitChange() {\n      var scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n\n      if (nine.windowSize().w > 1280) {\n        startPoint = 0.5;\n      } else if (nine.windowSize().w < 1024) {\n        offsetTop = page.offsetHeight + document.getElementById('intro').offsetHeight - portrait.offsetHeight;\n      }\n\n      if (scrollPosition > offsetTop * startPoint) {\n        if (portrait.style.opacity == 0) {\n          portrait.style.opacity = 1;\n        }\n      } else {\n        if (portrait.style.opacity == 1) {\n          portrait.style.opacity = 0;\n        }\n      }\n    }\n\n    nine.scrollContainer.addEventListener('scroll', function(event) {\n      portraitChange();\n    });\n  }\n};\n\n/* ==========================================================================\n  nine.pageTransisition()\n   ========================================================================== */\n\nnine.pageTransisition = (href, bg, slide) => {\n  if (!bg) {\n    bg = '#E6E6E4';\n  }\n\n  document.body.style.backgroundColor = bg;\n  document.body.classList.add('faded-out');\n\n  setTimeout(function(){\n    window.location.href = href;\n  }, 600);\n};\n\n/* ==========================================================================\n  nine.aboutHeight\n   ========================================================================== */\n\nnine.masonaryHeight = () => {\n  var masonary = document.querySelector('.masonary')\n  let lheight = 0;\n  let rheight = 0;\n  if (masonary) {\n    if (nine.windowSize().w >= 1024) {\n      var lblocks = document.querySelectorAll('.block.left');\n      var rblocks = document.querySelectorAll('.block.right');\n\n      Array.prototype.forEach.call(lblocks, function(el, i) {\n        lheight += el.offsetHeight;\n      });\n\n      Array.prototype.forEach.call(rblocks, function(el, i) {\n        rheight += el.offsetHeight;\n      });\n\n      let height;\n\n      if (lheight >= rheight) {\n        height = lheight;\n      } else {\n        height = rheight;\n      }\n\n      height += 100;\n      masonary.style.height = height + 'px';\n    } else {\n      masonary.style.height = 'auto';\n    }\n  }\n};\n\n/* ==========================================================================\n  nine.animateLinks\n   ========================================================================== */\n\nnine.animateLinks = () => {\n  var anchorElements = document.getElementsByTagName('a');\n  Array.prototype.forEach.call(anchorElements, function(el, i) {\n    el.onclick = function() {\n      nine.pageTransisition(this.href, el.getAttribute('data-bg'), el.getAttribute('data-slide'));\n      return false;\n    }\n  });\n};\n\n// ##########################################################################\n\n\n\n\n\n\n\n\n\n\n// ##########################################################################\n/* ==========================================================================\n   Scrolling\n   ==========================================================================\n // #########################################################################\n\n\n /* ==========================================================================\n  setCurrentPage()\n  - Sets the current page on load based off hash.\n  ========================================================================== */\n\nnine.setCurrentPage = () => {\n  var section = nine.getHash();\n\n  if(section) {\n    var element = document.getElementById(section);\n\n    if (element) {\n      nine.updateCurrent(element);\n      nine.scrollStart(element); // Simulate start of scroll to set all calsses correctly.\n      nine.scrollToSection(element.id); // Make sure we are definley at the correct section.\n    }\n  } else {\n    nine.updateCurrent(document.querySelectorAll(\".section\")[0]);\n  }\n};\n\n/* ==========================================================================\n    nine.updateHash(url)\n    - Updates the hash in the url to the value of url.\n  ========================================================================== */\n\nnine.updateHash = (url) => {\n  window.location.hash = url;\n};\n\n/* ==========================================================================\n  nine.hashChangeLisener()\n  ========================================================================== */\n\nnine.hashChangeLisener = () => {\n  if (document.addEventListener) {\n    window.addEventListener('hashchange', nine.hashChangeHandler, false); //IE9, Chrome, Safari, Oper\n  } else {\n    window.attachEvent('onhashchange', nine.hashChangeHandler); //IE 6/7/8\n  }\n};\n\n/* ==========================================================================\n  nine.hashChangeHandler()\n  - Listens to chnages on the hash when back button is used.\n   ========================================================================== */\n\nnine.hashChangeHandler = () => {\n  var section = nine.getHash();\n\n  if (section && section != nine.currentPage) {\n    nine.scrollToSection(section);\n  }\n};\n\n/* ==========================================================================\n  nine.scrollToSection(destiny)\n  - scroll to the a section using ID\n   ========================================================================== */\n\nnine.scrollToSection = (elementId, offset) => {\n  var element = document.getElementById(elementId);\n\n  if (element == null) { return ; } // No element\n\n  // If there is a gap between slides increase the duration by the gap.\n  // var gap = Math.abs(nine.currentPageIndex - nine.getSectionIndex(element));\n  // var duration = nine.scrollDuration * gap;\n  var duration = nine.scrollDuration;\n\n  var destiny = nine.calculateDestiny(element, offset);\n\n  nine.animateScoll(destiny, element, duration)\n};\n\n/* ==========================================================================\n  nine.calculateOffset\n  - If a user has scroled half way onto a section there will be an offset\n    if position is sticky.\n  - Returns offset in pixels.\n   ========================================================================== */\n\nnine.calculateOffset = () => {\n  var offset = 0;\n\n  // If user has manuall scrolled part way onto next one there will be an offset to account for.\n  if (nine.sticky) {\n    if (nine.currentPageIndex + 1 < nine.pages.length) {\n      var nextPageOffset = document.getElementById(nine.pages[nine.currentPageIndex + 1].id).offsetTop\n      var prevPage;\n\n      if (nine.currentPageIndex -1 >= 0) {\n        prevPage = nine.pages[nine.currentPageIndex - 1].id;\n      } else {\n        prevPage = nine.pages[nine.currentPageIndex].id;\n      }\n\n      var prevPageEl = document.getElementById(prevPage);\n      var prevPageOffsetBottom = prevPageEl.offsetTop + prevPageEl.offsetHeight;\n\n      if (nextPageOffset != prevPageOffsetBottom) {\n        offset = prevPageOffsetBottom - nextPageOffset;\n      }\n     } else {\n      var scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n      var currentPageOffset = document.getElementById(nine.pages[nine.currentPageIndex].id).offsetTop;\n\n      if (scrollPosition != currentPageOffset) {\n        offset = scrollPosition - currentPageOffset;\n      }\n    }\n    return offset;\n   } else {\n     return 0;\n   }\n};\n\n/* ==========================================================================\n  nine.calculateGap(newIndex)\n   ========================================================================== */\n\nnine.calculateGap = (newIndex, element, offset) => {\n  var gap = Math.abs(nine.currentPageIndex - newIndex) -1;\n\n  for (var i = 1; i <= gap; i++) {\n    var id = nine.pages[nine.currentPageIndex - i].id\n\n    offset += element.offsetHeight;\n  }\n  return offset += nine.calculateOffset();\n};\n\n/* ==========================================================================\n  nine.calculateDestiny()\n  - Works out direction and depending on sticky corrects offset.\n  - Returns the destiny in pixels.\n   ========================================================================== */\n\nnine.calculateDestiny = (element, offset) => {\n  var destiny;\n\n  if (typeof offset === \"undefined\") {\n    offset = 0;\n  }\n\n  var newIndex = nine.getSectionIndex(element);\n  if (newIndex > nine.currentPageIndex) {\n    nine.scrollDirection = \"down\";\n  } else if (newIndex < nine.currentPageIndex) {\n    nine.scrollDirection = \"up\";\n    if (nine.sticky) {\n      offset = nine.calculateGap(newIndex, element, offset);\n    }\n  }\n\n  // Calculate the pixel position of the element, using offset if required\n  if (nine.scrollDirection === \"up\" && nine.sticky === true) {\n    destiny = element.offsetTop - element.offsetHeight - offset;\n  } else {\n    destiny = element.offsetTop - offset;\n  }\n\n  return destiny;\n}\n\n/* ==========================================================================\n  nine.animateScoll()\n  - animate the scrolling of the page\n  ========================================================================== */\n\nnine.animateScoll = (endLocation, element, duration) => {\n  if (endLocation == null) { return; }\n\n  var startLocation = nine.getScrolledPosition();\n  nine.canScroll = false;\n\n  if (duration == null) {\n    duration = nine.scrollDuration;\n  }\n\n  // Calculate how far to scroll\n  var distance = endLocation - startLocation;\n\n  var runAnimation;\n\n  // Set the animation variables to 0/undefined.\n  var timeLapsed = 0;\n  var percentage, position;\n\n  var easing = function (progress) {\n   return progress < 0.5 ? 4 * progress * progress * progress : (progress - 1) * (2 * progress - 2) * (2 * progress - 2) + 1; // acceleration until halfway, then deceleration\n  };\n\n  function stopAnimationIfRequired(pos) {\n   if (pos == endLocation) {\n     cancelAnimationFrame(runAnimation);\n     finishedScroll();\n   }\n  }\n\n  function finishedScroll() {\n    // Remove active status from all\n    nine.canScroll = true;\n    nine.scrollDirection = null;\n    nine.scrollEnd(element);\n  }\n\n  var animate = function () {\n   timeLapsed += 16;\n   percentage = timeLapsed / duration;\n   if (percentage > 1) {\n     percentage = 1;\n     position = endLocation;\n   } else {\n     position = startLocation + distance * easing(percentage);\n   }\n   nine.scrollContainer.scrollTop = position;\n   runAnimation = requestAnimationFrame(animate);\n   stopAnimationIfRequired(position);\n  };\n\n  nine.scrollStart(element);\n\n  // Loop the animation function\n  runAnimation = requestAnimationFrame(animate);\n}\n\n/* ==========================================================================\n  nine.scrollStart()\n  - Called just before scrolling starts\n   ========================================================================== */\n\nnine.scrollStart = (element) => {\n  // Change header class - duration is same as slide duration for natural feel.\n  if (element.classList.value.includes('light')) {\n    nine.changeHeaderClass('dark');\n  } else {\n    nine.changeHeaderClass('light');\n  }\n\n  // Delay until part way through scroll to chnages make feel smooth.\n  setTimeout(function() {\n    // Remove other active classes\n    var activePages = document.querySelector('.section.active');\n    if (activePages) {\n      nine.removeClass(activePages, 'active');\n      nine.removeClass(document.body, activePages.id + '-active')\n    }\n    nine.addClass(element, 'active');\n    nine.updateControls(nine.getSectionIndex(element));\n  }, nine.scrollDuration * 0.33);\n};\n\n/* ==========================================================================\n  nine.scrollEnd()\n  - Called after an element has been scrolled to.\n   ========================================================================== */\n\nnine.scrollEnd = (element) => {\n  if (element == null) { return ; } // No element\n\n  // Update to new state.\n  nine.updateHash(element.id);\n  nine.updateCurrent(element);\n  nine.updateControls();\n  nine.addClass(document.body, element.id + '-active');\n};\n\n/* ==========================================================================\n  nine.updateCurrent\n  - Updates globals to current values\n   ========================================================================== */\n\nnine.updateCurrent = (element) => {\n  nine.currentPage = element.id;\n  nine.currentPageIndex = nine.getSectionIndex(element);\n}\n\n/* ==========================================================================\n  nine.getScrolledPosition()\n  - Returns position of scroll in the window in pixels.\n   ========================================================================== */\n\nnine.getScrolledPosition = () => {\n  return document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n};\n\n/* ==========================================================================\n  nine.resetPosition()\n  - Handles rezise events when fullscreen is one to make\n    sure slide is positioned correctly.\n   ========================================================================== */\n\nnine.resetPosition = () => {\n  if (nine.fullscreen == true) {\n    var section,\n        destiny;\n\n    if (nine.currentPage != null) {\n      var section = document.getElementById(nine.currentPage);\n    } else {\n      var section = document.querySelectorAll('.sections')[0];\n      nine.currentPage = section.id;\n      nine.currentPageIndex = 0;\n    }\n\n    var offset = nine.calculateOffset();\n\n    if (nine.sticky && offset > 0) {\n      destiny = section.offsetTop - offset;\n    } else {\n      destiny = section.offsetTop;\n    }\n\n    nine.animateScoll(destiny, section, 0);\n  }\n}\n\n// ##########################################################################\n\n\n\n\n\n\n\n\n// ##########################################################################\n/* ==========================================================================\n   Controls\n   ==========================================================================\n// ##########################################################################\n\n/* ==========================================================================\n  nine.addFullscreenNav()\n  - adds dots and next & prev controls to site\n  =========================================================================== */\n\nnine.addFullscreenNav = () => {\n  var controls = document.querySelector('.controls');\n\n  if (controls) {\n    controls.classList.add('on');\n\n    var nav = document.querySelector('.dots')\n\n    if (nav) {\n      Array.prototype.forEach.call(nine.pages, function(el, i) {\n        var dot = document.createElement('li');\n        dot.setAttribute('data-page', i);\n        nav.appendChild(dot);\n        dot.addEventListener('click', (element) => nine.dotClick(element));\n      });\n\n      document.querySelector('.dots li').classList.add('active')\n\n      document.querySelector('.next').addEventListener('click', nine.arrowNextClickHandler);\n      document.querySelector('.prev').addEventListener('click', nine.arrowPrevClickHandler);\n\n      nine.updateControls();\n    }\n  }\n};\n\n/* ==========================================================================\n  nine.removeFullscreenNav()\n  - remove dots and next & prev controls to site\n  =========================================================================== */\n\nnine.removeFullscreenNav = () => {\n  var controls = document.querySelector('.controls');\n\n  if (controls) {\n    controls.classList.remove('on');\n\n    var nav = document.querySelector('.dots')\n    var dots = document.querySelectorAll('.dots li');\n\n    if (nav && dots) {\n      Array.prototype.forEach.call(dots, function(el, i) {\n        el.parentNode.removeChild(el);\n      });\n\n      document.querySelector('.next').removeEventListener('click', nine.arrowNextClickHandler);\n      document.querySelector('.prev').removeEventListener('click', nine.arrowPrevClickHandler);\n    }\n  }\n};\n\n/* ==========================================================================\n   nine.arrowNextClickHandler()\n   - click handler for next arrow\n   ========================================================================== */\n\nnine.arrowNextClickHandler = () => {\n  nine.nextPage();\n};\n\n/* ==========================================================================\n   nine.arrowPrevClickHandler()\n   - click handler for prev arrow\n   ========================================================================== */\n\nnine.arrowPrevClickHandler = () => {\n  nine.prevPage();\n};\n\n /* ==========================================================================\n   nine.dotClick()\n   - handles when use clicks on a dot\n    ========================================================================== */\n\nnine.dotClick = (element, repeat) => {\n  if (repeat == null) {\n    repeat = false;\n  }\n\n  document.querySelector('.dots li.active').classList.remove('active');\n  var newPageIndex = element.target.getAttribute('data-page');\n  document.querySelectorAll('.dots li')[newPageIndex].classList.add('active');\n\n  var section = nine.pages[newPageIndex].id;\n\n  if (nine.canScroll) {\n    nine.scrollToSection(section);\n  } else if (repeat == false) {\n    // Is currently scrolling. Try again after duration.\n    setTimeout(function(){\n      nine.dotClick(element, true);\n    }, nine.scrollDuration);\n   }\n};\n\n /* ==========================================================================\n   nine.updateControls()\n   - Update controls to latest section\n    ========================================================================== */\n\nnine.updateControls = (newIndex) => {\n  if (newIndex == null && nine.currentPageIndex == null) {\n    newIndex = 0;\n  }  else {\n    newIndex = nine.currentPageIndex;\n  }\n\n  var active = document.querySelector('.dots li.active')\n\n  if (active) {\n    document.querySelector('.dots li.active').classList.remove('active');\n  }\n\n  document.querySelectorAll('.dots li')[newIndex].classList.add('active');\n\n  document.querySelector('.next').classList.remove('disabled');\n  document.querySelector('.prev').classList.remove('disabled');\n\n  if (newIndex == 0) {\n    document.querySelector('.prev').classList.add('disabled');\n  }\n\n  if (newIndex == nine.pages.length - 1) {\n    document.querySelector('.next').classList.add('disabled');\n  }\n}\n\n/* ==========================================================================\n nine.nextPage()\n - moves to the next slide\n  ========================================================================== */\n\nnine.nextPage = (repeat) => {\n  if (repeat == null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex + 1 < nine.pages.length && nine.canScroll) {\n    var nextPage = nine.pages[nine.currentPageIndex + 1].id;\n    nine.scrollToSection(nextPage);\n    return true;\n  } else if (nine.currentPageIndex + 1 < nine.pages.length && repeat == false) {\n    setTimeout(function(){\n      nine.nextPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n}\n\n/* ==========================================================================\n nine.prevPage()\n - moves to the previous slide\n  ========================================================================== */\n\nnine.prevPage = (repeat) => {\n  if (repeat == null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex - 1 >= 0 && nine.canScroll) {\n    var prevPage = nine.pages[nine.currentPageIndex - 1].id;\n    nine.scrollToSection(prevPage);\n    return true;\n  } else if (nine.currentPageIndex - 1 >= 0 && repeat == false) {\n    setTimeout(function(){\n      nine.prevPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n}\n\n // ##########################################################################\n\n\n\n\n\n\n\n\n\n // ##########################################################################\n /* ==========================================================================\n    Inputs\n    ==========================================================================\n // ##########################################################################\n /* ==========================================================================\n   nine.addKeyboardNav()\n   - enables up and down to be used to navigate slides\n    ========================================================================== */\n\nnine.addKeyboardNav = () => {\n  document.onkeydown = function(event) {\n    if (!event) {\n      event = window.event;\n    }\n\n    var code = event.keyCode;\n\n    if (event.charCode && code == 0) {\n      code = event.charCode;\n    }\n\n    switch(code) {\n      case 38: // Up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 40: // Down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 32: // Space\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 33: // Page up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 34: // Page down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n    }\n  }\n};\n\n/* ==========================================================================\n  nine.removeKeyboardNav()\n  - enables up and down to be used to navigate slides\n   ========================================================================== */\n\nnine.removeKeyboardNav = () => {\n document.onkeydown = null;\n};\n\n/* ==========================================================================\n  nine.addScrollInput()\n  - Add listeners for scroll\n   ========================================================================== */\n\nnine.addScrollInput = () => {\n  var wrapper = window;\n\n  if(wrapper.addEventListener) {\n    wrapper.addEventListener('mousewheel', nine.mouseWheelHandler, false); // ie9, chrome, safari, opera use mousewheel\n\n    // wrapper.addEventListener('wheel', nine.mouseWheelHandler, false); // firefox\n  } else {\n    wrapper.attachEvent('onmousewheel', nine.mouseWheelHandler); // IE 6/7/8 not really supported anyway\n  }\n};\n\n/* ==========================================================================\n  nine.removeScrollInput()\n  - Remove listeners for scroll\n   ========================================================================== */\n\nnine.removeScrollInput = () => {\n  var wrapper = window;\n\n  if(wrapper.addEventListener) {\n    wrapper.removeEventListener('mousewheel', nine.mouseWheelHandler, false); // ie9, chrome, safari, opera use mousewheel\n\n    wrapper.removeEventListener('wheel', nine.mouseWheelHandler, false); // firefox\n  } else {\n    wrapper.detachEvent('onmousewheel', nine.mouseWheelHandler); // IE 6/7/8 not really supported anyway\n  }\n}\n\n/* ==========================================================================\n  nine.mouseWheelHandler()\n  - process scrolling\n  - Line 1099: https://github.com/alvarotrigo/fullPage.js/blob/master/pure%20javascript%20(Alpha)/javascript.fullPage.js\n  - https://www.sitepoint.com/html5-javascript-mouse-wheel/\n   ========================================================================== */\n\nnine.mouseWheelHandler = (e) => {\n  nine.preventDefault(e); // prevent normall scrolling\n\n  var curTime = new Date().getTime();\n\n  // cross-browser wheel delta\n  e = window.event || e || e.originalEvent;\n\n  var value = e.wheelDelta || -e.deltaY || -e.detail;\n  var delta = Math.max(-1, Math.min(1, value));\n\n  //Limiting the array to 150 (lets not waist memory!)\n  if(nine.scrollHistory.length > 149){\n      nine.scrollHistory.shift(); // rmeoves first element\n  }\n\n  //keeping record of the previous scrollings\n  nine.scrollHistory.push(Math.abs(value));\n\n  var timeDiff = curTime - nine.prevTime;\n  nine.prevTime = curTime;\n\n  // haven't they scrolled in a while?\n  // (enough to be consider a different scrolling action to scroll another section)\n  if(timeDiff > 200){\n    // emptying the array, we dont care about old scrollings for our averages\n    nine.scrollHistory = [];\n  }\n\n  function getAverage(elements, number) {\n    var sum = 0;\n\n    //taking `number` elements from the end to make the average, if there are not enought, 1\n    var lastElements = elements.slice(Math.max(elements.length - number, 1));\n\n    for(var i = 0; i < lastElements.length; i++){\n        sum = sum + lastElements[i];\n    }\n    return Math.ceil(sum/number);\n  }\n\n  if(nine.canScroll){\n    var averageEnd = getAverage(nine.scrollHistory, 10);\n    var averageMiddle = getAverage(nine.scrollHistory, 70);\n    var isAccelerating = averageEnd >= averageMiddle;\n\n    if(isAccelerating){\n      if (delta < 0) { //scrolling down?\n        nine.scrolling('down');\n      }else { //scrolling up?\n        nine.scrolling('up');\n      }\n    }\n  }\n\n  return false;\n};\n\n\nnine.scrolling = (type) => {\n  if (type == 'down') {\n    nine.nextPage();\n  } else {\n    nine.prevPage();\n  }\n};\n\n // ##########################################################################\n\n\n\n\n\n\n\n\n\n\n\n\n\n// ##########################################################################\n/* ==========================================================================\n   Helpers\n   ==========================================================================\n// ##########################################################################\n\n /* ==========================================================================\n   nine.getHash()\n   - Gets current url hash\n   ========================================================================== */\n\n nine.getHash = () => {\n   var value =  window.location.hash.replace('#', '').split('/');\n   return value[0];\n };\n/* ==========================================================================\n  nine.addClass(element, className)\n  - Checks if element hasClass if not adds it\n   ========================================================================== */\n\nnine.addClass = (element, className) => {\n  if (element && !nine.hasClass(element, className)) {\n    element.classList.add(className);\n  }\n}\n\n/* ==========================================================================\n  nine.removeClass(element, className)\n  - Checks if element hasClass if it does removes it\n   ========================================================================== */\n\nnine.removeClass = (element, className) => {\n  if (element && nine.hasClass(element, className)) {\n    element.classList.remove(className);\n  }\n}\n\n/* ==========================================================================\n  nine.hasClass(element, className)\n  - Checks if element has a class\n  - Returns true or false\n   ========================================================================== */\n\nnine.hasClass = (element, className) => {\n  return element.classList.contains(className);\n}\n\n/* ==========================================================================\n  getSectionindex(section)\n  - Finds out what the index of the element is in the list of sections\n  - Returns index\n   ========================================================================== */\n\nnine.getSectionIndex = (element) => {\n var i = 0;\n var index;\n\n Array.prototype.forEach.call(nine.pages, function(el, i) {\n  if (el == element) {\n    index = i;\n  }\n });\n\n return index;\n};\n\n/* ==========================================================================\n  nine.windowWidth\n  - Gets window size reliably\n   ========================================================================== */\n\nnine.windowSize = (w) => {\n\n  // Use the specified window or the current window if no argument\n  w = w || window;\n\n  // This works for all browsers except IE8 and before\n  if (w.innerWidth != null) return { w: w.innerWidth, h: w.innerHeight };\n\n  // For IE (or any browser) in Standards mode\n  var d = w.document;\n  if (document.compatMode == \"CSS1Compat\")\n      return { w: d.documentElement.clientWidth,\n         h: d.documentElement.clientHeight };\n\n  // For browsers in Quirks mode\n  return { w: d.body.clientWidth, h: d.body.clientHeight };\n};\n\n/* ==========================================================================\n  nine.debounce()\n  - Debounces actions be with a timer.\n ========================================================================== */\n\nnine.debounce = (func, wait, immediate) => {\n\tvar timeout;\n\treturn function() {\n\t\tvar context = this, args = arguments;\n\t\tvar later = function() {\n\t\t\ttimeout = null;\n\t\t\tif (!immediate) func.apply(context, args);\n\t\t};\n\t\tvar callNow = immediate && !timeout;\n\t\tclearTimeout(timeout);\n\t\ttimeout = setTimeout(later, wait);\n\t\tif (callNow) func.apply(context, args);\n\t};\n};\n\n/* ==========================================================================\n  nine.preventDeafult(event)\n   ========================================================================== */\n\nnine.preventDefault = (event) => {\n  event.preventDefault ? event.preventDefault() : event.returnValue = false;\n}\n\n// ##########################################################################\n\n\n\n\n\n// ##########################################################################\n/* ==========================================================================\n  nine.fullscreenMode\n  - will enable or sidable all methods required for fullscreen mode\n   ========================================================================== */\nnine.fullscreenMode = (debounced) => {\n\n  //TODO: reset position when chaning between the two modes.\n\n  if (nine.checkFullscreen() && nine.fullscreen == false) {\n    nine.enableFullscreen();\n    nine.enableSticky();\n    nine.hashChangeLisener();\n    nine.addFullscreenNav();\n    nine.addKeyboardNav();\n    nine.addScrollInput();\n    nine.setCurrentPage();\n  } else if (nine.checkFullscreen() == false && nine.fullscreen == true) { // Used to be on but now can't be so disable\n    nine.enableFullscreen(); // Will toggle off due to failing test\n    nine.enableSticky(); // Will toggle off due to failing fullscreen test\n    nine.removeFullscreenNav();\n    nine.removeKeyboardNav();\n    nine.removeScrollInput();\n  }\n\n  if (!debounced) {\n    var fullscreenModeDebounced = nine.debounce(function() {\n      nine.fullscreenMode(true);\n    }, 250);\n\n    window.addEventListener('resize', fullscreenModeDebounced);\n  } else {\n    nine.resetPosition();\n    // nine.setCurrentPage();\n  }\n};\n\n// ##########################################################################\n\n\n\n\n// ##########################################################################\n/* ==========================================================================\n  Document Load\n   ========================================================================== */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  nine.masonaryHeight();\n  nine.animateLinks();\n\n  window.addEventListener('resize', function() {\n    nine.masonaryHeight();\n  });\n\n  nine.fullscreenMode();\n});\n\n/* ==========================================================================\n  Window Load\n   ========================================================================== */\n\nwindow.onload = () => {\n  nine.animateLoad();\n  // nine.animatePortrait();\n  nine.masonaryHeight();\n};\n\n// ##########################################################################\n"]}