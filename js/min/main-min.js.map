{"version":3,"sources":["../main.js"],"names":["nine","sticky","fullscreen","currentPageIndex","currentPage","canScroll","scrollDuration","scrollContainer","document","getElementById","pages","querySelectorAll","scrollDirection","prevTime","Date","getTime","scrollHistory","fullScreenEnableFrom","supports3d","String","prototype","includes","search","start","length","this","indexOf","support3d","checkFullscreen","windowHeight","windowSize","h","w","forEach","el","offsetHeight","enableFullscreen","body","classList","add","remove","checkSticky","createElement","mStyle","style","cssText","position","enableSticky","changeHeaderClass","className","querySelector","setAttribute","animateLoad","window","setTimeout","masonaryHeight","hidden","Array","call","pageTransisition","href","bg","backgroundColor","location","masonary","lheight","rheight","lblocks","rblocks","height","animateLinks","anchorElements","getElementsByTagName","onclick","undefined","getAttribute","setCurrentPage","section","getHash","element","updateCurrent","scrollStart","silentScrollToSection","id","updateHash","url","hash","hashChangeLisener","addEventListener","hashChangeHandler","attachEvent","scrollToSection","elementId","offset","duration","destiny","calculateDestiny","translateScroll","animateScroll","calculateOffset","nextPageOffset","offsetTop","prevPage","prevPageEl","prevPageOffsetBottom","scrollPosition","documentElement","scrollTop","currentPageOffset","calculateGap","newIndex","gap","Math","abs","i","getSectionIndex","endLocation","translate3d","transition","removeClass","css","-webkit-transition","addClass","translatePortrait","setTransforms","scrollEnd","portrait","portraitPosition","stopAnimationIfRequired","pos","cancelAnimationFrame","runAnimation","finishedScroll","console","log","startLocation","getScrolledPosition","distance","timeLapsed","percentage","easing","progress","animate","requestAnimationFrame","value","header","activePages","updateControls","resetPosition","addFullscreenNav","controls","nav","dot","appendChild","dotClick","arrowNextClickHandler","arrowPrevClickHandler","removeFullscreenNav","dots","parentNode","removeChild","removeEventListener","nextPage","repeat","newPageIndex","target","addKeyboardNav","onkeydown","event","code","keyCode","charCode","preventDefault","removeKeyboardNav","addScrollInput","wrapper","mouseWheelHandler","removeScrollInput","detachEvent","e","getAverage","elements","number","sum","lastElements","slice","max","ceil","curTime","originalEvent","wheelDelta","deltaY","detail","delta","min","shift","push","timeDiff","scrolling","type","replace","split","hasClass","contains","index","innerWidth","innerHeight","d","compatMode","clientWidth","clientHeight","debounce","func","wait","immediate","timeout","context","args","arguments","later","apply","callNow","clearTimeout","returnValue","-webkit-transform","-moz-transform","-ms-transform","transform","props","key","Object","hasOwnProperty","fullscreenMode","debounced","fullscreenModeDebounced","onload"],"mappings":"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","file":"main-min.js","sourcesContent":["const nine = {\n  sticky: false,\n  fullscreen: false,\n  // Scolling Related\n  currentPageIndex: null,\n  currentPage: null,\n  canScroll: true,\n  scrollDuration: 750,\n  scrollContainer: document.getElementById('fullpage'),\n  pages: document.querySelectorAll('.section'),\n  scrollDirection: null,\n  prevTime: new Date().getTime(),\n  scrollHistory: [],\n  fullScreenEnableFrom: 768,\n  supports3d: false\n};\n\n/* ==========================================================================\n    Polyfils\n   ========================================================================== */\n\nif (!String.prototype.includes) {\n  String.prototype.includes = function (search, start) {\n    if (typeof start !== 'number') {\n      start = 0;\n    }\n\n    if (start + search.length > this.length) {\n      return false;\n    }\n\n    return this.indexOf(search, start) !== -1;\n  };\n}\n\n/* ==========================================================================\n  nine.supports3D()\n   ========================================================================== */\n/**\n* Checks for translate3d support\n* @return boolean\n* http://stackoverflow.com/questions/5661671/detecting-transform-translate3d-support\n*/\n\nnine.support3d = () => {\n  return false;\n  const el = document.createElement('p');\n  let has3d;\n  const transforms = {\n    webkitTransform: '-webkit-transform',\n    OTransform: '-o-transform',\n    msTransform: '-ms-transform',\n    MozTransform: '-moz-transform',\n    transform: 'transform'\n  };\n\n  // Add it to the body to get the computed style.\n  document.body.insertBefore(el, null);\n\n  for (const t in transforms) {\n    if (el.style[t] !== undefined) {\n      el.style[t] = 'translate3d(1px,1px,1px)';\n      has3d = window.getComputedStyle(el).getPropertyValue(transforms[t]);\n    }\n  }\n\n  document.body.removeChild(el);\n\n  return (has3d !== undefined && has3d.length > 0 && has3d !== 'none');\n};\n\n/* ==========================================================================\n  nine.checkFullscreen()\n   ========================================================================== */\n\nnine.checkFullscreen = () => {\n  let fullscreen = true;\n\n  const windowHeight = nine.windowSize().h;\n  const windowWidth = nine.windowSize().w;\n\n  if (windowWidth >= nine.fullScreenEnableFrom) {\n    // If any section is longer the window height disable fullscreen\n    nine.pages.forEach(el => {\n      if (el.offsetHeight > windowHeight) {\n        fullscreen = false;\n      }\n    });\n  } else {\n    fullscreen = false;\n  }\n\n  return fullscreen;\n};\n\n/* ==========================================================================\n  enableFullscreen()\n  - Enable fullscreen mode if checkFullscreen passes\n   ========================================================================== */\n\nnine.enableFullscreen = () => {\n  if (nine.checkFullscreen()) {\n    nine.fullscreen = true;\n    document.body.classList.add('fullscreen');\n  } else {\n    nine.fullscreen = false;\n    document.body.classList.remove('fullscreen');\n  }\n};\n\n/* ==========================================================================\n  nine.checkSticky() - http://trialstravails.bspot.co.uk/2016/06/detecting-css-position-sticky-support.html\n   ========================================================================== */\n\nnine.checkSticky = () => {\n  const el = document.createElement('a');\n  const mStyle = el.style;\n\n  mStyle.cssText = 'position:sticky;position:-webkit-sticky;position:-ms-sticky;';\n  let sticky = mStyle.position.indexOf('sticky') !== -1;\n\n  sticky = false; // Return false to DISABLED.\n  return sticky;\n};\n\n/* ==========================================================================\n  enableSticky()\n  - Enable Sticky\n   ========================================================================== */\n\nnine.enableSticky = () => {\n  if (nine.checkSticky() && nine.checkFullscreen()) {\n    nine.sticky = true;\n    nine.fullscreen = true;\n    document.body.classList.add('sticky-enabled');\n  } else {\n    nine.sticky = false;\n    document.body.classList.remove('sticky-enabled');\n  }\n};\n\n/* ==========================================================================\n  nine.changeHeaderClass\n   ========================================================================== */\n\nnine.changeHeaderClass = className => {\n  document.querySelector('.header').setAttribute('class', `header ${className}`);\n};\n\n/* ==========================================================================\n  nine.animatation()\n   ========================================================================== */\n\nnine.animateLoad = () => {\n  window.setTimeout(() => {\n    document.body.classList.add('faded-in');\n    nine.masonaryHeight();\n\n    window.setTimeout(() => {\n      let hidden = document.querySelectorAll('.hide-left');\n      Array.prototype.forEach.call(hidden, el => {\n        el.classList.remove('hide-left');\n      });\n\n      hidden = document.querySelectorAll('.hide-down');\n      Array.prototype.forEach.call(hidden, el => {\n        el.classList.remove('hide-down');\n      });\n    }, 1000);\n  }, 1000);\n};\n\n/* ==========================================================================\n  nine.animatePortrait()\n   ========================================================================== */\n\n// nine.animatePortrait = () => {\n//   const portrait = document.querySelector('.portrait .faded');\n//\n//   if (portrait) {\n//     nine.scrollContainer.addEventListener('scroll', () => {\n//       nine.portraitChange();\n//     });\n//   }\n// };\n//\n// nine.portraitChange = () => {\n//   const page = document.getElementById('about');\n//   let offsetTop = page.offsetTop;\n//   let startPoint = 0.98;\n//\n//   const portrait = document.querySelector('.portrait .faded');\n//   const scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n//\n//   if (nine.windowSize().w > 1280) {\n//     startPoint = 0.5;\n//   } else if (nine.windowSize().w < 1024) {\n//     offsetTop = page.offsetHeight + document.getElementById('intro').offsetHeight - portrait.offsetHeight;\n//   }\n//\n//   if (scrollPosition > offsetTop * startPoint) {\n//     if (portrait.style.opacity === 0) {\n//       portrait.style.opacity = 1;\n//     }\n//   } else if (portrait.style.opacity === 1) {\n//     portrait.style.opacity = 0;\n//   }\n// };\n\n/* ==========================================================================\n  nine.pageTransisition()\n   ========================================================================== */\n\nnine.pageTransisition = (href, bg) => {\n  if (!bg) {\n    bg = '#E6E6E4';\n  }\n\n  document.body.style.backgroundColor = bg;\n  document.body.classList.add('faded-out');\n\n  setTimeout(() => {\n    window.location.href = href;\n  }, 600);\n};\n\n/* ==========================================================================\n  nine.aboutHeight\n   ========================================================================== */\n\nnine.masonaryHeight = () => {\n  const masonary = document.querySelector('.masonary');\n  let lheight = 0;\n  let rheight = 0;\n\n  if (masonary) {\n    if (nine.windowSize().w >= 1024) {\n      const lblocks = document.querySelectorAll('.block.left');\n      const rblocks = document.querySelectorAll('.block.right');\n\n      Array.prototype.forEach.call(lblocks, el => {\n        lheight += el.offsetHeight;\n      });\n\n      Array.prototype.forEach.call(rblocks, el => {\n        rheight += el.offsetHeight;\n      });\n\n      let height;\n\n      if (lheight >= rheight) {\n        height = lheight;\n      } else {\n        height = rheight + 200;\n      }\n\n      height += 1;\n      masonary.style.height = height + 'px';\n    } else {\n      masonary.style.height = 'auto';\n    }\n  }\n};\n\n/* ==========================================================================\n  nine.animateLinks\n   ========================================================================== */\n\nnine.animateLinks = () => {\n  const anchorElements = document.getElementsByTagName('a');\n  Array.prototype.forEach.call(anchorElements, el => {\n    el.onclick = () => {\n      nine.pageTransisition(this.href, el.getAttribute('data-bg'), el.getAttribute('data-slide'));\n      return false;\n    };\n  });\n};\n\n// ##########################################################################\n\n// ##########################################################################\n/* ==========================================================================\n   Scrolling\n   ==========================================================================\n // #########################################################################\n\n /* ==========================================================================\n  setCurrentPage()\n  - Sets the current page on load based off hash.\n  ========================================================================== */\n\nnine.setCurrentPage = () => {\n  const section = nine.getHash();\n\n  if (section) {\n    const element = document.getElementById(section);\n\n    if (element) {\n      nine.updateCurrent(element);\n      nine.scrollStart(element); // Simulate start of scroll to set all calsses correctly.\n      // nine.scrollToSection(element.id); // Make sure we are definley at the correct section.\n      nine.silentScrollToSection(element.id);\n    }\n  } else {\n    nine.updateCurrent(document.querySelectorAll('.section')[0]);\n  }\n};\n\n/* ==========================================================================\n    nine.updateHash(url)\n    - Updates the hash in the url to the value of url.\n  ========================================================================== */\n\nnine.updateHash = url => {\n  window.location.hash = url;\n};\n\n/* ==========================================================================\n  nine.hashChangeLisener()\n  ========================================================================== */\n\nnine.hashChangeLisener = () => {\n  if (document.addEventListener) {\n    window.addEventListener('hashchange', nine.hashChangeHandler, false); // IE9, Chrome, Safari, Oper\n  } else {\n    window.attachEvent('onhashchange', nine.hashChangeHandler); // IE 6/7/8\n  }\n};\n\n/* ==========================================================================\n  nine.hashChangeHandler()\n  - Listens to chnages on the hash when back button is used.\n   ========================================================================== */\n\nnine.hashChangeHandler = () => {\n  const section = nine.getHash();\n\n  if (section && section !== nine.currentPage) {\n    nine.scrollToSection(section);\n  }\n};\n\n/* ==========================================================================\n  nine.scrollToSection(destiny)\n  - scroll to the a section using ID\n   ========================================================================== */\n\nnine.scrollToSection = (elementId, offset) => {\n  const element = document.getElementById(elementId);\n\n  if (element === null) {\n    return;\n  } // No element\n\n  // If there is a gap between slides increase the duration by the gap.\n  // var gap = Math.abs(nine.currentPageIndex - nine.getSectionIndex(element));\n  // var duration = nine.scrollDuration * gap;\n  const duration = nine.scrollDuration;\n\n  const destiny = nine.calculateDestiny(element, offset);\n\n  if (nine.supports3d) {\n    nine.translateScroll(destiny, element, duration);\n  } else {\n    nine.animateScroll(destiny, element, duration);\n  }\n};\n\n/* ==========================================================================\n  nine.silentScrollToSection(destiny)\n  - scroll to the a section using ID with duration 0\n   ========================================================================== */\n\nnine.silentScrollToSection = (elementId, offset) => {\n  const element = document.getElementById(elementId);\n\n  if (element === null) {\n    return;\n  } // No element\n\n  // If there is a gap between slides increase the duration by the gap.\n  // var gap = Math.abs(nine.currentPageIndex - nine.getSectionIndex(element));\n  // var duration = nine.scrollDuration * gap;\n  const duration = 0;\n\n  const destiny = nine.calculateDestiny(element, offset);\n\n  if (nine.supports3d) {\n    nine.translateScroll(destiny, element, duration);\n  } else {\n    nine.animateScroll(destiny, element, duration);\n  }\n};\n\n/* ==========================================================================\n  nine.calculateOffset\n  - If a user has scroled half way onto a section there will be an offset\n    if position is sticky.\n  - Returns offset in pixels.\n   ========================================================================== */\n\nnine.calculateOffset = () => {\n  let offset = 0;\n\n  // If user has manuall scrolled part way onto next one there will be an offset to account for.\n  if (nine.sticky) {\n    if (nine.currentPageIndex + 1 < nine.pages.length) {\n      const nextPageOffset = document.getElementById(nine.pages[nine.currentPageIndex + 1].id).offsetTop;\n      let prevPage;\n\n      if (nine.currentPageIndex - 1 >= 0) {\n        prevPage = nine.pages[nine.currentPageIndex - 1].id;\n      } else {\n        prevPage = nine.pages[nine.currentPageIndex].id;\n      }\n\n      const prevPageEl = document.getElementById(prevPage);\n      const prevPageOffsetBottom = prevPageEl.offsetTop + prevPageEl.offsetHeight;\n\n      if (nextPageOffset !== prevPageOffsetBottom) {\n        offset = prevPageOffsetBottom - nextPageOffset;\n      }\n    } else {\n      const scrollPosition = document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n      const currentPageOffset = document.getElementById(nine.pages[nine.currentPageIndex].id).offsetTop;\n\n      if (scrollPosition !== currentPageOffset) {\n        offset = scrollPosition - currentPageOffset;\n      }\n    }\n    return offset;\n  }\n  return 0;\n};\n\n/* ==========================================================================\n  nine.calculateGap(newIndex)\n   ========================================================================== */\n\nnine.calculateGap = (newIndex, element, offset) => {\n  const gap = Math.abs(nine.currentPageIndex - newIndex) - 1;\n\n  for (let i = 1; i <= gap; i++) {\n    offset += element.offsetHeight;\n  }\n\n  offset += nine.calculateOffset();\n\n  return offset;\n};\n\n/* ==========================================================================\n  nine.calculateDestiny()\n  - Works out direction and depending on sticky corrects offset.\n  - Returns the destiny in pixels.\n   ========================================================================== */\n\nnine.calculateDestiny = (element, offset) => {\n  let destiny;\n\n  if (typeof offset === 'undefined') {\n    offset = 0;\n  }\n\n  const newIndex = nine.getSectionIndex(element);\n  if (newIndex > nine.currentPageIndex) {\n    nine.scrollDirection = 'down';\n  } else if (newIndex < nine.currentPageIndex) {\n    nine.scrollDirection = 'up';\n    if (nine.sticky) {\n      offset = nine.calculateGap(newIndex, element, offset);\n    }\n  }\n\n  // Calculate the pixel position of the element, using offset if required\n  if (nine.scrollDirection === 'up' && nine.sticky === true) {\n    destiny = element.offsetTop - element.offsetHeight - offset;\n  } else {\n    destiny = element.offsetTop - offset;\n  }\n\n  return destiny;\n};\n\n/* ==========================================================================\n  nine.translateScroll()\n  - animate the scrolling of the page\n  ========================================================================== */\n\nnine.translateScroll = (endLocation, element, duration) => {\n  const translate3d = 'translate3d(0px, -' + endLocation + 'px, 0px)';\n\n  if (duration > 0) {\n    const transition = 'all ' + duration + 'ms ease';\n\n    nine.removeClass(nine.scrollContainer, 'notransition');\n\n    nine.css(nine.scrollContainer, {\n      '-webkit-transition': transition,\n      transition\n    });\n  } else {\n    nine.addClass(nine.scrollContainer, 'notransition');\n  }\n\n  nine.scrollStart(element);\n  nine.canScroll = false;\n\n  nine.translatePortrait(endLocation, duration);\n  nine.setTransforms(nine.scrollContainer, translate3d);\n\n  setTimeout(() => {\n    nine.canScroll = true;\n    nine.scrollEnd(element);\n  }, duration);\n\n  // Syncronously removing the class after the animation has been applied.\n  setTimeout(() => {\n    nine.removeClass(nine.scrollContainer, 'notransition');\n  }, 10);\n};\n\nnine.translatePortrait = endLocation => {\n  const portrait = document.querySelector('.portrait');\n  const portraitPosition = 'translate3d(0px, ' + endLocation + 'px, 0px)';\n  nine.setTransforms(portrait, portraitPosition);\n};\n\n/* ==========================================================================\n  nine.animateScroll()\n  - animate the scrolling of the page\n  ========================================================================== */\n\nnine.animateScroll = (endLocation, element, duration) => {\n  console.log('here');\n  if (endLocation === null) {\n    return;\n  }\n\n  const startLocation = nine.getScrolledPosition();\n  nine.canScroll = false;\n\n  if (duration === null) {\n    duration = nine.scrollDuration;\n  }\n\n  // Calculate how far to scroll\n  const distance = endLocation - startLocation;\n\n  let runAnimation;\n\n  // Set the animation variables to 0/undefined.\n  let timeLapsed = 0;\n  let percentage;\n  let position;\n\n  const easing = function (progress) {\n    return progress < 0.5 ? 4 * progress * progress * progress : (progress - 1) * (2 * progress - 2) * (2 * progress - 2) + 1; // Acceleration until halfway, then deceleration\n  };\n\n  function stopAnimationIfRequired(pos) {\n    if (pos === endLocation) {\n      cancelAnimationFrame(runAnimation);\n      finishedScroll();\n    }\n  }\n\n  function finishedScroll() {\n    // Remove active status from all\n    nine.canScroll = true;\n    nine.scrollDirection = null;\n    nine.scrollEnd(element);\n  }\n\n  const animate = function () {\n    timeLapsed += 16;\n    percentage = timeLapsed / duration;\n    if (percentage > 1) {\n      percentage = 1;\n      position = endLocation;\n    } else {\n      position = (startLocation + distance) * easing(percentage);\n    }\n    nine.scrollContainer.scrollTop = position;\n    runAnimation = requestAnimationFrame(animate);\n    stopAnimationIfRequired(position);\n  };\n\n  nine.scrollStart(element);\n\n  // Loop the animation function\n  runAnimation = requestAnimationFrame(animate);\n};\n\n/* ==========================================================================\n  nine.scrollStart()\n  - Called just before scrolling starts\n   ========================================================================== */\n\nnine.scrollStart = element => {\n  // Change header class - duration is same as slide duration for natural feel.\n  if (element.classList.value.includes('light')) {\n    nine.changeHeaderClass('dark');\n  } else {\n    nine.changeHeaderClass('light');\n  }\n\n  // Change menu colours dependent on slide\n  const header = document.querySelector('.header');\n  if (element.id === 'services') {\n    nine.addClass(header, 'menu-alt');\n  } else {\n    nine.removeClass(header, 'menu-alt');\n  }\n\n  // Delay until part way through scroll to chnages make feel smooth.\n  setTimeout(() => {\n    // Remove other active classes\n    const activePages = document.querySelector('.section.active');\n    if (activePages) {\n      nine.removeClass(activePages, 'active');\n      nine.removeClass(document.body, activePages.id + '-active');\n    }\n    nine.addClass(element, 'active');\n    nine.updateControls(nine.getSectionIndex(element));\n  }, nine.scrollDuration * 0.33);\n};\n\n/* ==========================================================================\n  nine.scrollEnd()\n  - Called after an element has been scrolled to.\n   ========================================================================== */\n\nnine.scrollEnd = element => {\n  if (element === null) {\n    return;\n  } // No element\n\n  // Update to new state.\n  nine.updateHash(element.id);\n  nine.updateCurrent(element);\n  nine.addClass(document.body, element.id + '-active');\n  nine.updateControls();\n};\n\n/* ==========================================================================\n  nine.updateCurrent\n  - Updates globals to current values\n   ========================================================================== */\n\nnine.updateCurrent = element => {\n  nine.currentPage = element.id;\n  nine.currentPageIndex = nine.getSectionIndex(element);\n};\n\n/* ==========================================================================\n  nine.getScrolledPosition()\n  - Returns position of scroll in the window in pixels.\n   ========================================================================== */\n\nnine.getScrolledPosition = () => {\n  return document.documentElement.scrollTop || nine.scrollContainer.scrollTop;\n};\n\n/* ==========================================================================\n  nine.resetPosition()\n  - Handles rezise events when fullscreen is one to make\n    sure slide is positioned correctly.\n   ========================================================================== */\n\nnine.resetPosition = () => {\n  if (nine.fullscreen === true) {\n    let section;\n    let destiny;\n\n    if (nine.currentPage === null) {\n      section = document.querySelectorAll('.sections')[0];\n      nine.currentPage = section.id;\n      nine.currentPageIndex = 0;\n    } else {\n      section = document.getElementById(nine.currentPage);\n    }\n\n    const offset = nine.calculateOffset();\n\n    if (nine.sticky && offset > 0) {\n      destiny = section.offsetTop - offset;\n    } else {\n      destiny = section.offsetTop;\n    }\n\n    if (nine.supports3d) {\n      nine.translateScroll(destiny, section, 0);\n    } else {\n      nine.animateScroll(destiny, section, 0);\n    }\n  }\n};\n\n// ##########################################################################\n\n// ##########################################################################\n/* ==========================================================================\n   Controls\n   ==========================================================================\n// ##########################################################################\n\n/* ==========================================================================\n  nine.addFullscreenNav()\n  - adds dots and next & prev controls to site\n  =========================================================================== */\n\nnine.addFullscreenNav = () => {\n  const controls = document.querySelector('.controls');\n\n  if (controls) {\n    controls.classList.add('on');\n\n    const nav = document.querySelector('.dots');\n\n    if (nav) {\n      Array.prototype.forEach.call(nine.pages, (el, i) => {\n        const dot = document.createElement('li');\n        dot.setAttribute('data-page', i);\n        nav.appendChild(dot);\n        dot.addEventListener('click', element => nine.dotClick(element));\n      });\n\n      document.querySelector('.dots li').classList.add('active');\n\n      document.querySelector('.next').addEventListener('click', nine.arrowNextClickHandler);\n      document.querySelector('.prev').addEventListener('click', nine.arrowPrevClickHandler);\n\n      nine.updateControls();\n    }\n  }\n};\n\n/* ==========================================================================\n  nine.removeFullscreenNav()\n  - remove dots and next & prev controls to site\n  =========================================================================== */\n\nnine.removeFullscreenNav = () => {\n  const controls = document.querySelector('.controls');\n\n  if (controls) {\n    controls.classList.remove('on');\n\n    const nav = document.querySelector('.dots');\n    const dots = document.querySelectorAll('.dots li');\n\n    if (nav && dots) {\n      Array.prototype.forEach.call(dots, el => {\n        el.parentNode.removeChild(el);\n      });\n\n      document.querySelector('.next').removeEventListener('click', nine.arrowNextClickHandler);\n      document.querySelector('.prev').removeEventListener('click', nine.arrowPrevClickHandler);\n    }\n  }\n};\n\n/* ==========================================================================\n   nine.arrowNextClickHandler()\n   - click handler for next arrow\n   ========================================================================== */\n\nnine.arrowNextClickHandler = () => {\n  nine.nextPage();\n};\n\n/* ==========================================================================\n   nine.arrowPrevClickHandler()\n   - click handler for prev arrow\n   ========================================================================== */\n\nnine.arrowPrevClickHandler = () => {\n  nine.prevPage();\n};\n\n /* ==========================================================================\n   nine.dotClick()\n   - handles when use clicks on a dot\n    ========================================================================== */\n\nnine.dotClick = (element, repeat) => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  document.querySelector('.dots li.active').classList.remove('active');\n  const newPageIndex = element.target.getAttribute('data-page');\n  document.querySelectorAll('.dots li')[newPageIndex].classList.add('active');\n\n  const section = nine.pages[newPageIndex].id;\n\n  if (nine.canScroll) {\n    nine.scrollToSection(section);\n  } else if (repeat === false) {\n    // Is currently scrolling. Try again after duration.\n    setTimeout(() => {\n      nine.dotClick(element, true);\n    }, nine.scrollDuration);\n  }\n};\n\n /* ==========================================================================\n   nine.updateControls()\n   - Update controls to latest section\n    ========================================================================== */\n\nnine.updateControls = newIndex => {\n  if (newIndex === undefined) {\n    newIndex = null;\n  }\n\n  if (newIndex === null && nine.currentPageIndex === null) {\n    newIndex = 0;\n  } else if (newIndex === null && nine.currentPageIndex !== null) {\n    newIndex = nine.currentPageIndex;\n  }\n\n  const active = document.querySelector('.dots li.active');\n\n  if (active) {\n    document.querySelector('.dots li.active').classList.remove('active');\n  }\n\n  document.querySelectorAll('.dots li')[newIndex].classList.add('active');\n\n  document.querySelector('.next').classList.remove('disabled');\n  document.querySelector('.prev').classList.remove('disabled');\n\n  if (newIndex === 0) {\n    document.querySelector('.prev').classList.add('disabled');\n  }\n\n  if (newIndex === nine.pages.length - 1) {\n    document.querySelector('.next').classList.add('disabled');\n  }\n};\n\n/* ==========================================================================\n nine.nextPage()\n - moves to the next slide\n  ========================================================================== */\n\nnine.nextPage = repeat => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex + 1 < nine.pages.length && nine.canScroll) {\n    const nextPage = nine.pages[nine.currentPageIndex + 1].id;\n    nine.scrollToSection(nextPage);\n    return true;\n  } else if (nine.currentPageIndex + 1 < nine.pages.length && repeat === false) {\n    setTimeout(() => {\n      nine.nextPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n};\n\n/* ==========================================================================\n nine.prevPage()\n - moves to the previous slide\n  ========================================================================== */\n\nnine.prevPage = repeat => {\n  if (repeat === null) {\n    repeat = false;\n  }\n\n  if (nine.currentPageIndex - 1 >= 0 && nine.canScroll) {\n    const prevPage = nine.pages[nine.currentPageIndex - 1].id;\n    nine.scrollToSection(prevPage);\n    return true;\n  } else if (nine.currentPageIndex - 1 >= 0 && repeat === false) {\n    setTimeout(() => {\n      nine.prevPage(true);\n    }, nine.scrollDuration);\n  }\n  return false;\n};\n\n // ##########################################################################\n\n // ##########################################################################\n /* ==========================================================================\n    Inputs\n    ==========================================================================\n // ##########################################################################\n /* ==========================================================================\n   nine.addKeyboardNav()\n   - enables up and down to be used to navigate slides\n    ========================================================================== */\n\nnine.addKeyboardNav = () => {\n  document.onkeydown = function (event) {\n    if (!event) {\n      event = window.event;\n    }\n\n    let code = event.keyCode;\n\n    if (event.charCode && code === 0) {\n      code = event.charCode;\n    }\n\n    switch (code) {\n      case 38: // Up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 40: // Down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 32: // Space\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      case 33: // Page up\n        event.preventDefault();\n        nine.prevPage();\n        break;\n      case 34: // Page down\n        event.preventDefault();\n        nine.nextPage();\n        break;\n      default:\n    }\n  };\n};\n\n/* ==========================================================================\n  nine.removeKeyboardNav()\n  - enables up and down to be used to navigate slides\n   ========================================================================== */\n\nnine.removeKeyboardNav = () => {\n  document.onkeydown = null;\n};\n\n/* ==========================================================================\n  nine.addScrollInput()\n  - Add listeners for scroll\n   ========================================================================== */\n\nnine.addScrollInput = () => {\n  const wrapper = window;\n\n  if (wrapper.addEventListener) {\n    wrapper.addEventListener('mousewheel', nine.mouseWheelHandler, false); // Ie9, chrome, safari, opera use mousewheel\n\n    // wrapper.addEventListener('wheel', nine.mouseWheelHandler, false); // firefox\n  } else {\n    wrapper.attachEvent('onmousewheel', nine.mouseWheelHandler); // IE 6/7/8 not really supported anyway\n  }\n};\n\n/* ==========================================================================\n  nine.removeScrollInput()\n  - Remove listeners for scroll\n   ========================================================================== */\n\nnine.removeScrollInput = () => {\n  const wrapper = window;\n\n  if (wrapper.addEventListener) {\n    wrapper.removeEventListener('mousewheel', nine.mouseWheelHandler, false); // Ie9, chrome, safari, opera use mousewheel\n\n    wrapper.removeEventListener('wheel', nine.mouseWheelHandler, false); // Firefox\n  } else {\n    wrapper.detachEvent('onmousewheel', nine.mouseWheelHandler); // IE 6/7/8 not really supported anyway\n  }\n};\n\n/* ==========================================================================\n  nine.mouseWheelHandler()\n  - process scrolling\n  - Line 1099: https://github.com/alvarotrigo/fullPage.js/blob/master/pure%20javascript%20(Alpha)/javascript.fullPage.js\n  - https://www.sitepoint.com/html5-javascript-mouse-wheel/\n   ========================================================================== */\n\nnine.mouseWheelHandler = e => {\n  nine.preventDefault(e); // Prevent normall scrolling\n\n  const curTime = new Date().getTime();\n\n  // Cross-browser wheel delta\n  e = window.event || e || e.originalEvent;\n\n  const value = e.wheelDelta || -e.deltaY || -e.detail;\n  const delta = Math.max(-1, Math.min(1, value));\n\n  // Limiting the array to 150 (lets not waist memory!)\n  if (nine.scrollHistory.length > 149) {\n    nine.scrollHistory.shift(); // Rmeoves first element\n  }\n\n  // Keeping record of the previous scrollings\n  nine.scrollHistory.push(Math.abs(value));\n\n  const timeDiff = curTime - nine.prevTime;\n  nine.prevTime = curTime;\n\n  // Haven't they scrolled in a while?\n  // (enough to be consider a different scrolling action to scroll another section)\n  if (timeDiff > 200) {\n    // Emptying the array, we dont care about old scrollings for our averages\n    nine.scrollHistory = [];\n  }\n\n  function getAverage(elements, number) {\n    let sum = 0;\n\n    // Taking `number` elements from the end to make the average, if there are not enought, 1\n    const lastElements = elements.slice(Math.max(elements.length - number, 1));\n\n    for (let i = 0; i < lastElements.length; i++) {\n      sum += lastElements[i];\n    }\n    return Math.ceil(sum / number);\n  }\n\n  if (nine.canScroll) {\n    const averageEnd = getAverage(nine.scrollHistory, 10);\n    const averageMiddle = getAverage(nine.scrollHistory, 70);\n    const isAccelerating = averageEnd >= averageMiddle;\n\n    if (isAccelerating) {\n      if (delta < 0) { // Scrolling down?\n        nine.scrolling('down');\n      } else { // Scrolling up?\n        nine.scrolling('up');\n      }\n    }\n  }\n\n  return false;\n};\n\nnine.scrolling = type => {\n  if (type === 'down') {\n    nine.nextPage();\n  } else {\n    nine.prevPage();\n  }\n};\n\n // ##########################################################################\n\n// ##########################################################################\n/* ==========================================================================\n   Helpers\n   ==========================================================================\n// ##########################################################################\n\n /* ==========================================================================\n   nine.getHash()\n   - Gets current url hash\n   ========================================================================== */\n\nnine.getHash = () => {\n  const value = window.location.hash.replace('#', '').split('/');\n  return value[0];\n};\n/* ==========================================================================\n  nine.addClass(element, className)\n  - Checks if element hasClass if not adds it\n   ========================================================================== */\n\nnine.addClass = (element, className) => {\n  if (element && !nine.hasClass(element, className)) {\n    element.classList.add(className);\n  }\n};\n\n/* ==========================================================================\n  nine.removeClass(element, className)\n  - Checks if element hasClass if it does removes it\n   ========================================================================== */\n\nnine.removeClass = (element, className) => {\n  if (element && nine.hasClass(element, className)) {\n    element.classList.remove(className);\n  }\n};\n\n/* ==========================================================================\n  nine.hasClass(element, className)\n  - Checks if element has a class\n  - Returns true or false\n   ========================================================================== */\n\nnine.hasClass = (element, className) => {\n  return element.classList.contains(className);\n};\n\n/* ==========================================================================\n  getSectionindex(section)\n  - Finds out what the index of the element is in the list of sections\n  - Returns index\n   ========================================================================== */\n\nnine.getSectionIndex = element => {\n  let index;\n\n  Array.prototype.forEach.call(nine.pages, (el, i) => {\n    if (el === element) {\n      index = i;\n    }\n  });\n\n  return index;\n};\n\n/* ==========================================================================\n  nine.windowWidth\n  - Gets window size reliably\n   ========================================================================== */\n\nnine.windowSize = w => {\n  // Use the specified window or the current window if no argument\n  w = w || window;\n\n  // This works for all browsers except IE8 and before\n  if (w.innerWidth !== null) {\n    return {w: w.innerWidth, h: w.innerHeight};\n  }\n\n  // For IE (or any browser) in Standards mode\n  const d = w.document;\n  if (document.compatMode === 'CSS1Compat') {\n    return {w: d.documentElement.clientWidth,\n      h: d.documentElement.clientHeight};\n  }\n\n  // For browsers in Quirks mode\n  return {w: d.body.clientWidth, h: d.body.clientHeight};\n};\n\n/* ==========================================================================\n  nine.debounce()\n  - Debounces actions be with a timer.\n ========================================================================== */\n\nnine.debounce = (func, wait, immediate) => {\n  let timeout;\n  return function () {\n    const context = this;\n    const args = arguments;\n    const later = function () {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n\n/* ==========================================================================\n  nine.preventDeafult(event)\n   ========================================================================== */\n\nnine.preventDefault = event => {\n  if (event.preventDefault) {\n    event.preventDefault();\n  } else {\n    event.returnValue = false;\n  }\n};\n\n/* ==========================================================================\n  nine.setTransforms(el, translate3d)\n  - sets tranlstaion on an element\n  ========================================================================== */\n\nnine.setTransforms = (element, translate3d) => {\n  nine.css(element, {\n    '-webkit-transform': translate3d,\n    '-moz-transform': translate3d,\n    '-ms-transform': translate3d,\n    transform: translate3d\n  });\n};\n\n/* ==========================================================================\n  nine.css(el, props)\n  - adds css to elements\n  ========================================================================== */\n\nnine.css = (el, props) => {\n  let key;\n  for (key in props) {\n    if (Object.prototype.hasOwnProperty.call(props, key)) {\n      if (key !== null) {\n        el.style[key] = props[key];\n      }\n    }\n  }\n  return el;\n};\n\n// ##########################################################################\n\n// ##########################################################################\n/* ==========================================================================\n  nine.fullscreenMode\n  - will enable or sidable all methods required for fullscreen mode\n   ========================================================================== */\nnine.fullscreenMode = debounced => {\n  if (nine.checkFullscreen() && nine.fullscreen === false) {\n    nine.enableFullscreen();\n    nine.enableSticky();\n    nine.hashChangeLisener();\n    nine.addFullscreenNav();\n    nine.addKeyboardNav();\n    nine.addScrollInput();\n    nine.setCurrentPage();\n  } else if (nine.checkFullscreen() === false && nine.fullscreen === true) { // Used to be on but now can't be so disable\n    nine.enableFullscreen(); // Will toggle off due to failing test\n    nine.enableSticky(); // Will toggle off due to failing fullscreen test\n    nine.removeFullscreenNav();\n    nine.removeKeyboardNav();\n    nine.removeScrollInput();\n  }\n\n  if (debounced) {\n    nine.resetPosition();\n  } else {\n    const fullscreenModeDebounced = nine.debounce(() => {\n      nine.fullscreenMode(true);\n    }, 250);\n\n    window.addEventListener('resize', fullscreenModeDebounced);\n  }\n};\n\n// ##########################################################################\n\n// ##########################################################################\n/* ==========================================================================\n  Document Load\n   ========================================================================== */\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  nine.supports3d = nine.support3d();\n\n  nine.masonaryHeight();\n  nine.animateLinks();\n\n  window.addEventListener('resize', () => {\n    nine.masonaryHeight();\n  });\n\n  nine.fullscreenMode();\n});\n\n/* ==========================================================================\n  Window Load\n   ========================================================================== */\n\nwindow.onload = () => {\n  nine.animateLoad();\n  nine.masonaryHeight();\n};\n\n// ##########################################################################\n"]}